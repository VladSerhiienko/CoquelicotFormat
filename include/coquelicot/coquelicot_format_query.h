// Auto generated by formatgen on Oct 13 2024
#pragma once
#if !defined(CQ_FORMAT_QUERY_H_) && !defined(CQ_FORMAT_IMAGEFORMAT_H)
#define CQ_FORMAT_QUERY_H_ 1

#include "coquelicot_format_base.h"

#if __cplusplus > 201402L
#define CQ_FORMAT_CONSTEXPR constexpr extern "C"
#else
#define CQ_FORMAT_CONSTEXPR
#endif
#ifndef  CqFormat_HAVE_UINTXX_T
#include <stdint.h> 	// for uint32_t and int64_t
#endif
#ifndef  CqFormat_HAVE_BOOL
#include <stdbool.h>	// for bool
#endif
#ifndef  CqFormat_HAVE_POWF
#include <math.h>	// for powf
#endif
//CqFormat_ASSERT needs to be constexpr on some platforms
#ifndef  CqFormat_ASSERT
#define  CqFormat_ASSERT(x)
#endif

CQ_FORMAT_CONSTEXPR inline uint64_t CqFormat_Code(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0x0000000000000000;
		case CqFormat_R1_UNORM: return 0x0000D9000000C000;
		case CqFormat_R2_UNORM: return 0x0000D90000013000;
		case CqFormat_R4_UNORM: return 0x0000D90000022000;
		case CqFormat_R4G4_UNORM: return 0x0008D84000421000;
		case CqFormat_G4R4_UNORM: return 0x0008D80800421000;
		case CqFormat_A8_UNORM: return 0x0000C91800040000;
		case CqFormat_R8_UNORM: return 0x0000D90000040000;
		case CqFormat_R8_SNORM: return 0x0001590000040000;
		case CqFormat_R8_UINT: return 0x0001D90000040000;
		case CqFormat_R8_SINT: return 0x0002590000040000;
		case CqFormat_R8_SRGB: return 0x0003D90000040000;
		case CqFormat_B2G3R3_UNORM: return 0x0088D05006311000;
		case CqFormat_R4G4B4A4_UNORM: return 0x0888B44108421000;
		case CqFormat_R4G4B4X4_UNORM: return 0x0888D44108421000;
		case CqFormat_B4G4R4A4_UNORM: return 0x0888B05108421000;
		case CqFormat_B4G4R4X4_UNORM: return 0x0888D05108421000;
		case CqFormat_A4R4G4B4_UNORM: return 0x0888A21908421000;
		case CqFormat_X4R4G4B4_UNORM: return 0x0889A22908421000;
		case CqFormat_A4B4G4R4_UNORM: return 0x0888829908421000;
		case CqFormat_X4B4G4R4_UNORM: return 0x088982A908421000;
		case CqFormat_R5G6B5_UNORM: return 0x0088D4400A629000;
		case CqFormat_B5G6R5_UNORM: return 0x0088D0500A629000;
		case CqFormat_R5G5B5A1_UNORM: return 0x0888B4404A529000;
		case CqFormat_B5G5R5A1_UNORM: return 0x0888B0504A529000;
		case CqFormat_A1B5G5R5_UNORM: return 0x088882994A509000;
		case CqFormat_A1R5G5B5_UNORM: return 0x0888A2194A509000;
		case CqFormat_R5G5B5X1_UNORM: return 0x1888D4404A529000;
		case CqFormat_B5G5R5X1_UNORM: return 0x1888D0504A529000;
		case CqFormat_X1R5G5B5_UNORM: return 0x0889A2294A509000;
		case CqFormat_X1B5G5R5_UNORM: return 0x088982A94A509000;
		case CqFormat_B2G3R3A8_UNORM: return 0x0888B05206311000;
		case CqFormat_R8G8_UNORM: return 0x0008D84000840000;
		case CqFormat_R8G8_SNORM: return 0x0011584000840000;
		case CqFormat_G8R8_UNORM: return 0x0008D80800840000;
		case CqFormat_G8R8_SNORM: return 0x0011580800840000;
		case CqFormat_R8G8_UINT: return 0x0019D84000840000;
		case CqFormat_R8G8_SINT: return 0x0022584000840000;
		case CqFormat_R8G8_SRGB: return 0x003BD84000840000;
		case CqFormat_R16_UNORM: return 0x0000D90000068000;
		case CqFormat_R16_SNORM: return 0x0001590000068000;
		case CqFormat_R16_UINT: return 0x0001D90000068000;
		case CqFormat_R16_SINT: return 0x0002590000068000;
		case CqFormat_R16_SFLOAT: return 0x0003590000068000;
		case CqFormat_R16_SBFLOAT: return 0x0004590000068000;
		case CqFormat_R8G8B8_UNORM: return 0x0088D44010840000;
		case CqFormat_R8G8B8_SNORM: return 0x0111544010840000;
		case CqFormat_R8G8B8_UINT: return 0x0199D44010840000;
		case CqFormat_R8G8B8_SINT: return 0x0222544010840000;
		case CqFormat_R8G8B8_SRGB: return 0x03BBD44010840000;
		case CqFormat_B8G8R8_UNORM: return 0x0088D05010840000;
		case CqFormat_B8G8R8_SNORM: return 0x0111505010840000;
		case CqFormat_B8G8R8_UINT: return 0x0199D05010840000;
		case CqFormat_B8G8R8_SINT: return 0x0222505010840000;
		case CqFormat_B8G8R8_SRGB: return 0x03BBD05010840000;
		case CqFormat_R8G8B8A8_UNORM: return 0x0888B44210840000;
		case CqFormat_R8G8B8A8_SNORM: return 0x1111344210840000;
		case CqFormat_R8G8B8A8_UINT: return 0x1999B44210840000;
		case CqFormat_R8G8B8A8_SINT: return 0x2222344210840000;
		case CqFormat_R8G8B8A8_SRGB: return 0x0BBBB44210840000;
		case CqFormat_B8G8R8A8_UNORM: return 0x0888B05210840000;
		case CqFormat_B8G8R8A8_SNORM: return 0x1111305210840000;
		case CqFormat_B8G8R8A8_UINT: return 0x1999B05210840000;
		case CqFormat_B8G8R8A8_SINT: return 0x2222305210840000;
		case CqFormat_B8G8R8A8_SRGB: return 0x0BBBB05210840000;
		case CqFormat_R8G8B8X8_UNORM: return 0x0888D44210840000;
		case CqFormat_B8G8R8X8_UNORM: return 0x0888D05210840000;
		case CqFormat_R16G16_UNORM: return 0x0008D84000D68000;
		case CqFormat_G16R16_UNORM: return 0x0008D80800D68000;
		case CqFormat_R16G16_SNORM: return 0x0011584000D68000;
		case CqFormat_G16R16_SNORM: return 0x0011580800D68000;
		case CqFormat_R16G16_UINT: return 0x0019D84000D68000;
		case CqFormat_R16G16_SINT: return 0x0022584000D68000;
		case CqFormat_R16G16_SFLOAT: return 0x0033584000D68000;
		case CqFormat_R16G16_SBFLOAT: return 0x0044584000D68000;
		case CqFormat_R32_UINT: return 0x0001D90000078000;
		case CqFormat_R32_SINT: return 0x0002590000078000;
		case CqFormat_R32_SFLOAT: return 0x0003590000078000;
		case CqFormat_A2R10G10B10_UNORM: return 0x0888A21A94A11000;
		case CqFormat_A2R10G10B10_UINT: return 0x1999A21A94A11000;
		case CqFormat_A2R10G10B10_SNORM: return 0x1111221A94A11000;
		case CqFormat_A2R10G10B10_SINT: return 0x2222221A94A11000;
		case CqFormat_A2B10G10R10_UNORM: return 0x0888829A94A11000;
		case CqFormat_A2B10G10R10_UINT: return 0x1999829A94A11000;
		case CqFormat_A2B10G10R10_SNORM: return 0x1111029A94A11000;
		case CqFormat_A2B10G10R10_SINT: return 0x2222029A94A11000;
		case CqFormat_R10G10B10A2_UNORM: return 0x0888B44094A51000;
		case CqFormat_R10G10B10A2_UINT: return 0x1999B44094A51000;
		case CqFormat_R10G10B10A2_SNORM: return 0x1111344094A51000;
		case CqFormat_R10G10B10A2_SINT: return 0x2222344094A51000;
		case CqFormat_B10G10R10A2_UNORM: return 0x0888B05094A51000;
		case CqFormat_B10G10R10A2_UINT: return 0x1999B05094A51000;
		case CqFormat_B10G10R10A2_SNORM: return 0x1111305094A51000;
		case CqFormat_B10G10R10A2_SINT: return 0x2222305094A51000;
		case CqFormat_B10G11R11_UFLOAT: return 0x02AAD05016B51000;
		case CqFormat_E5B9G9R9_UFLOAT: return 0x2AA9829A52929000;
		case CqFormat_R16G16B16_UNORM: return 0x0088D4401AD68000;
		case CqFormat_R16G16B16_SNORM: return 0x011154401AD68000;
		case CqFormat_R16G16B16_UINT: return 0x0199D4401AD68000;
		case CqFormat_R16G16B16_SINT: return 0x022254401AD68000;
		case CqFormat_R16G16B16_SFLOAT: return 0x033354401AD68000;
		case CqFormat_R16G16B16_SBFLOAT: return 0x044454401AD68000;
		case CqFormat_R16G16B16A16_UNORM: return 0x0888B4435AD68000;
		case CqFormat_R16G16B16A16_SNORM: return 0x111134435AD68000;
		case CqFormat_R16G16B16A16_UINT: return 0x1999B4435AD68000;
		case CqFormat_R16G16B16A16_SINT: return 0x222234435AD68000;
		case CqFormat_R16G16B16A16_SFLOAT: return 0x333334435AD68000;
		case CqFormat_R16G16B16A16_SBFLOAT: return 0x444434435AD68000;
		case CqFormat_R32G32_UINT: return 0x0019D84000F78000;
		case CqFormat_R32G32_SINT: return 0x0022584000F78000;
		case CqFormat_R32G32_SFLOAT: return 0x0033584000F78000;
		case CqFormat_R32G32B32_UINT: return 0x0199D4401EF78000;
		case CqFormat_R32G32B32_SINT: return 0x022254401EF78000;
		case CqFormat_R32G32B32_SFLOAT: return 0x033354401EF78000;
		case CqFormat_R32G32B32A32_UINT: return 0x1999B443DEF78000;
		case CqFormat_R32G32B32A32_SINT: return 0x22223443DEF78000;
		case CqFormat_R32G32B32A32_SFLOAT: return 0x33333443DEF78000;
		case CqFormat_R64_UINT: return 0x0001D90000080000;
		case CqFormat_R64_SINT: return 0x0002590000080000;
		case CqFormat_R64_SFLOAT: return 0x0003590000080000;
		case CqFormat_R64G64_UINT: return 0x0019D84001080000;
		case CqFormat_R64G64_SINT: return 0x0022584001080000;
		case CqFormat_R64G64_SFLOAT: return 0x0033584001080000;
		case CqFormat_R64G64B64_UINT: return 0x0199D44021080000;
		case CqFormat_R64G64B64_SINT: return 0x0222544021080000;
		case CqFormat_R64G64B64_SFLOAT: return 0x0333544021080000;
		case CqFormat_R64G64B64A64_UINT: return 0x1999B44421080000;
		case CqFormat_R64G64B64A64_SINT: return 0x2222344421080000;
		case CqFormat_R64G64B64A64_SFLOAT: return 0x3333344421080000;
		case CqFormat_D16_UNORM: return 0x0000000001809001;
		case CqFormat_X8_D24_UNORM: return 0x0000000006266001;
		case CqFormat_D32_SFLOAT: return 0x0000000003812001;
		case CqFormat_S8_UINT: return 0x0000000002904001;
		case CqFormat_D16_UNORM_S8_UINT: return 0x000000000942A001;
		case CqFormat_D24_UNORM_S8_UINT: return 0x000000000942E001;
		case CqFormat_D32_SFLOAT_S8_UINT: return 0x000000000B433001;
		case CqFormat_DXBC1_RGB_UNORM: return 0x0000000000100002;
		case CqFormat_DXBC1_RGB_SRGB: return 0x0000000000108002;
		case CqFormat_DXBC1_RGBA_UNORM: return 0x0000000000181002;
		case CqFormat_DXBC1_RGBA_SRGB: return 0x0000000000189002;
		case CqFormat_DXBC2_UNORM: return 0x00000000001A3002;
		case CqFormat_DXBC2_SRGB: return 0x00000000001AB002;
		case CqFormat_DXBC3_UNORM: return 0x00000000001A2002;
		case CqFormat_DXBC3_SRGB: return 0x00000000001AA002;
		case CqFormat_DXBC4_UNORM: return 0x0000000000000002;
		case CqFormat_DXBC4_SNORM: return 0x0000000000004002;
		case CqFormat_DXBC5_UNORM: return 0x00000000000A0002;
		case CqFormat_DXBC5_SNORM: return 0x00000000000A4002;
		case CqFormat_DXBC6H_UFLOAT: return 0x0000000000530002;
		case CqFormat_DXBC6H_SFLOAT: return 0x000000000052C002;
		case CqFormat_DXBC7_UNORM: return 0x00000000003A3002;
		case CqFormat_DXBC7_SRGB: return 0x00000000003AB002;
		case CqFormat_PVRTC1_2BPP_UNORM: return 0x0000000000000003;
		case CqFormat_PVRTC1_4BPP_UNORM: return 0x0000000000004003;
		case CqFormat_PVRTC2_2BPP_UNORM: return 0x0000000000001003;
		case CqFormat_PVRTC2_4BPP_UNORM: return 0x0000000000005003;
		case CqFormat_PVRTC1_2BPP_SRGB: return 0x0000000000010003;
		case CqFormat_PVRTC1_4BPP_SRGB: return 0x0000000000014003;
		case CqFormat_PVRTC2_2BPP_SRGB: return 0x0000000000011003;
		case CqFormat_PVRTC2_4BPP_SRGB: return 0x0000000000015003;
		case CqFormat_ETC2_R8G8B8_UNORM: return 0x0000000000080004;
		case CqFormat_ETC2_R8G8B8_SRGB: return 0x00000000000A0004;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return 0x00000000000C4004;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return 0x00000000000E4004;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return 0x00000000000C8004;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return 0x00000000000E8004;
		case CqFormat_ETC2_EAC_R11_UNORM: return 0x0000000000001004;
		case CqFormat_ETC2_EAC_R11_SNORM: return 0x0000000000011004;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return 0x0000000000041004;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return 0x0000000000051004;
		case CqFormat_ASTC_4x4_UNORM: return 0x0000000000012005;
		case CqFormat_ASTC_4x4_SRGB: return 0x0000000000212005;
		case CqFormat_ASTC_5x4_UNORM: return 0x0000000000013005;
		case CqFormat_ASTC_5x4_SRGB: return 0x0000000000213005;
		case CqFormat_ASTC_5x5_UNORM: return 0x000000000001B005;
		case CqFormat_ASTC_5x5_SRGB: return 0x000000000021B005;
		case CqFormat_ASTC_6x5_UNORM: return 0x000000000001C005;
		case CqFormat_ASTC_6x5_SRGB: return 0x000000000021C005;
		case CqFormat_ASTC_6x6_UNORM: return 0x0000000000024005;
		case CqFormat_ASTC_6x6_SRGB: return 0x0000000000224005;
		case CqFormat_ASTC_8x5_UNORM: return 0x000000000001D005;
		case CqFormat_ASTC_8x5_SRGB: return 0x000000000021D005;
		case CqFormat_ASTC_8x6_UNORM: return 0x0000000000025005;
		case CqFormat_ASTC_8x6_SRGB: return 0x0000000000225005;
		case CqFormat_ASTC_8x8_UNORM: return 0x000000000002D005;
		case CqFormat_ASTC_8x8_SRGB: return 0x000000000022D005;
		case CqFormat_ASTC_10x5_UNORM: return 0x000000000001E005;
		case CqFormat_ASTC_10x5_SRGB: return 0x000000000021E005;
		case CqFormat_ASTC_10x6_UNORM: return 0x0000000000026005;
		case CqFormat_ASTC_10x6_SRGB: return 0x0000000000226005;
		case CqFormat_ASTC_10x8_UNORM: return 0x000000000002E005;
		case CqFormat_ASTC_10x8_SRGB: return 0x000000000022E005;
		case CqFormat_ASTC_10x10_UNORM: return 0x0000000000036005;
		case CqFormat_ASTC_10x10_SRGB: return 0x0000000000236005;
		case CqFormat_ASTC_12x10_UNORM: return 0x0000000000037005;
		case CqFormat_ASTC_12x10_SRGB: return 0x0000000000237005;
		case CqFormat_ASTC_12x12_UNORM: return 0x000000000003F005;
		case CqFormat_ASTC_12x12_SRGB: return 0x000000000023F005;
		case CqFormat_CLUT_P4: return 0x000000000010D006;
		case CqFormat_CLUT_P4A4: return 0x0000000000D6C006;
		case CqFormat_CLUT_P8: return 0x0000000000110006;
		case CqFormat_CLUT_P8A8: return 0x0000000000D90006;
		default: return 0ULL;
	}
}

#define CqFormat_MaxPixelCountOfBlock 144U 

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsDepthOnly(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_D16_UNORM: return true;
		case CqFormat_X8_D24_UNORM: return true;
		case CqFormat_D32_SFLOAT: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsStencilOnly(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_S8_UINT: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsDepthAndStencil(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_D16_UNORM_S8_UINT: return true;
		case CqFormat_D24_UNORM_S8_UINT: return true;
		case CqFormat_D32_SFLOAT_S8_UINT: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsCLUT(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_CLUT_P4: return true;
		case CqFormat_CLUT_P4A4: return true;
		case CqFormat_CLUT_P8: return true;
		case CqFormat_CLUT_P8A8: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsFloat(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_R16_SFLOAT: return true;
		case CqFormat_R16_SBFLOAT: return true;
		case CqFormat_R16G16_SFLOAT: return true;
		case CqFormat_R16G16_SBFLOAT: return true;
		case CqFormat_R32_SFLOAT: return true;
		case CqFormat_B10G11R11_UFLOAT: return true;
		case CqFormat_E5B9G9R9_UFLOAT: return true;
		case CqFormat_R16G16B16_SFLOAT: return true;
		case CqFormat_R16G16B16_SBFLOAT: return true;
		case CqFormat_R16G16B16A16_SFLOAT: return true;
		case CqFormat_R16G16B16A16_SBFLOAT: return true;
		case CqFormat_R32G32_SFLOAT: return true;
		case CqFormat_R32G32B32_SFLOAT: return true;
		case CqFormat_R32G32B32A32_SFLOAT: return true;
		case CqFormat_R64_SFLOAT: return true;
		case CqFormat_R64G64_SFLOAT: return true;
		case CqFormat_R64G64B64_SFLOAT: return true;
		case CqFormat_R64G64B64A64_SFLOAT: return true;
		case CqFormat_D32_SFLOAT: return true;
		case CqFormat_D32_SFLOAT_S8_UINT: return true;
		case CqFormat_DXBC6H_UFLOAT: return true;
		case CqFormat_DXBC6H_SFLOAT: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsNormalised(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_R1_UNORM: return true;
		case CqFormat_R2_UNORM: return true;
		case CqFormat_R4_UNORM: return true;
		case CqFormat_R4G4_UNORM: return true;
		case CqFormat_G4R4_UNORM: return true;
		case CqFormat_A8_UNORM: return true;
		case CqFormat_R8_UNORM: return true;
		case CqFormat_R8_SNORM: return true;
		case CqFormat_R8_SRGB: return true;
		case CqFormat_B2G3R3_UNORM: return true;
		case CqFormat_R4G4B4A4_UNORM: return true;
		case CqFormat_R4G4B4X4_UNORM: return true;
		case CqFormat_B4G4R4A4_UNORM: return true;
		case CqFormat_B4G4R4X4_UNORM: return true;
		case CqFormat_A4R4G4B4_UNORM: return true;
		case CqFormat_X4R4G4B4_UNORM: return true;
		case CqFormat_A4B4G4R4_UNORM: return true;
		case CqFormat_X4B4G4R4_UNORM: return true;
		case CqFormat_R5G6B5_UNORM: return true;
		case CqFormat_B5G6R5_UNORM: return true;
		case CqFormat_R5G5B5A1_UNORM: return true;
		case CqFormat_B5G5R5A1_UNORM: return true;
		case CqFormat_A1B5G5R5_UNORM: return true;
		case CqFormat_A1R5G5B5_UNORM: return true;
		case CqFormat_R5G5B5X1_UNORM: return true;
		case CqFormat_B5G5R5X1_UNORM: return true;
		case CqFormat_X1R5G5B5_UNORM: return true;
		case CqFormat_X1B5G5R5_UNORM: return true;
		case CqFormat_B2G3R3A8_UNORM: return true;
		case CqFormat_R8G8_UNORM: return true;
		case CqFormat_R8G8_SNORM: return true;
		case CqFormat_G8R8_UNORM: return true;
		case CqFormat_G8R8_SNORM: return true;
		case CqFormat_R8G8_SRGB: return true;
		case CqFormat_R16_UNORM: return true;
		case CqFormat_R16_SNORM: return true;
		case CqFormat_R8G8B8_UNORM: return true;
		case CqFormat_R8G8B8_SNORM: return true;
		case CqFormat_R8G8B8_SRGB: return true;
		case CqFormat_B8G8R8_UNORM: return true;
		case CqFormat_B8G8R8_SNORM: return true;
		case CqFormat_B8G8R8_SRGB: return true;
		case CqFormat_R8G8B8A8_UNORM: return true;
		case CqFormat_R8G8B8A8_SNORM: return true;
		case CqFormat_R8G8B8A8_SRGB: return true;
		case CqFormat_B8G8R8A8_UNORM: return true;
		case CqFormat_B8G8R8A8_SNORM: return true;
		case CqFormat_B8G8R8A8_SRGB: return true;
		case CqFormat_R8G8B8X8_UNORM: return true;
		case CqFormat_B8G8R8X8_UNORM: return true;
		case CqFormat_R16G16_UNORM: return true;
		case CqFormat_G16R16_UNORM: return true;
		case CqFormat_R16G16_SNORM: return true;
		case CqFormat_G16R16_SNORM: return true;
		case CqFormat_A2R10G10B10_UNORM: return true;
		case CqFormat_A2R10G10B10_SNORM: return true;
		case CqFormat_A2B10G10R10_UNORM: return true;
		case CqFormat_A2B10G10R10_SNORM: return true;
		case CqFormat_R10G10B10A2_UNORM: return true;
		case CqFormat_R10G10B10A2_SNORM: return true;
		case CqFormat_B10G10R10A2_UNORM: return true;
		case CqFormat_B10G10R10A2_SNORM: return true;
		case CqFormat_R16G16B16_UNORM: return true;
		case CqFormat_R16G16B16_SNORM: return true;
		case CqFormat_R16G16B16A16_UNORM: return true;
		case CqFormat_R16G16B16A16_SNORM: return true;
		case CqFormat_D16_UNORM: return true;
		case CqFormat_X8_D24_UNORM: return true;
		case CqFormat_D16_UNORM_S8_UINT: return true;
		case CqFormat_D24_UNORM_S8_UINT: return true;
		case CqFormat_DXBC1_RGB_UNORM: return true;
		case CqFormat_DXBC1_RGB_SRGB: return true;
		case CqFormat_DXBC1_RGBA_UNORM: return true;
		case CqFormat_DXBC1_RGBA_SRGB: return true;
		case CqFormat_DXBC2_UNORM: return true;
		case CqFormat_DXBC2_SRGB: return true;
		case CqFormat_DXBC3_UNORM: return true;
		case CqFormat_DXBC3_SRGB: return true;
		case CqFormat_DXBC4_UNORM: return true;
		case CqFormat_DXBC4_SNORM: return true;
		case CqFormat_DXBC5_UNORM: return true;
		case CqFormat_DXBC5_SNORM: return true;
		case CqFormat_DXBC7_UNORM: return true;
		case CqFormat_DXBC7_SRGB: return true;
		case CqFormat_PVRTC1_2BPP_UNORM: return true;
		case CqFormat_PVRTC1_4BPP_UNORM: return true;
		case CqFormat_PVRTC2_2BPP_UNORM: return true;
		case CqFormat_PVRTC2_4BPP_UNORM: return true;
		case CqFormat_PVRTC1_2BPP_SRGB: return true;
		case CqFormat_PVRTC1_4BPP_SRGB: return true;
		case CqFormat_PVRTC2_2BPP_SRGB: return true;
		case CqFormat_PVRTC2_4BPP_SRGB: return true;
		case CqFormat_ETC2_R8G8B8_UNORM: return true;
		case CqFormat_ETC2_R8G8B8_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return true;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return true;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return true;
		case CqFormat_ETC2_EAC_R11_UNORM: return true;
		case CqFormat_ETC2_EAC_R11_SNORM: return true;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return true;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return true;
		case CqFormat_ASTC_4x4_UNORM: return true;
		case CqFormat_ASTC_4x4_SRGB: return true;
		case CqFormat_ASTC_5x4_UNORM: return true;
		case CqFormat_ASTC_5x4_SRGB: return true;
		case CqFormat_ASTC_5x5_UNORM: return true;
		case CqFormat_ASTC_5x5_SRGB: return true;
		case CqFormat_ASTC_6x5_UNORM: return true;
		case CqFormat_ASTC_6x5_SRGB: return true;
		case CqFormat_ASTC_6x6_UNORM: return true;
		case CqFormat_ASTC_6x6_SRGB: return true;
		case CqFormat_ASTC_8x5_UNORM: return true;
		case CqFormat_ASTC_8x5_SRGB: return true;
		case CqFormat_ASTC_8x6_UNORM: return true;
		case CqFormat_ASTC_8x6_SRGB: return true;
		case CqFormat_ASTC_8x8_UNORM: return true;
		case CqFormat_ASTC_8x8_SRGB: return true;
		case CqFormat_ASTC_10x5_UNORM: return true;
		case CqFormat_ASTC_10x5_SRGB: return true;
		case CqFormat_ASTC_10x6_UNORM: return true;
		case CqFormat_ASTC_10x6_SRGB: return true;
		case CqFormat_ASTC_10x8_UNORM: return true;
		case CqFormat_ASTC_10x8_SRGB: return true;
		case CqFormat_ASTC_10x10_UNORM: return true;
		case CqFormat_ASTC_10x10_SRGB: return true;
		case CqFormat_ASTC_12x10_UNORM: return true;
		case CqFormat_ASTC_12x10_SRGB: return true;
		case CqFormat_ASTC_12x12_UNORM: return true;
		case CqFormat_ASTC_12x12_SRGB: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsSigned(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_R8_SNORM: return true;
		case CqFormat_R8_SINT: return true;
		case CqFormat_R8G8_SNORM: return true;
		case CqFormat_G8R8_SNORM: return true;
		case CqFormat_R8G8_SINT: return true;
		case CqFormat_R16_SNORM: return true;
		case CqFormat_R16_SINT: return true;
		case CqFormat_R16_SFLOAT: return true;
		case CqFormat_R16_SBFLOAT: return true;
		case CqFormat_R8G8B8_SNORM: return true;
		case CqFormat_R8G8B8_SINT: return true;
		case CqFormat_B8G8R8_SNORM: return true;
		case CqFormat_B8G8R8_SINT: return true;
		case CqFormat_R8G8B8A8_SNORM: return true;
		case CqFormat_R8G8B8A8_SINT: return true;
		case CqFormat_B8G8R8A8_SNORM: return true;
		case CqFormat_B8G8R8A8_SINT: return true;
		case CqFormat_R16G16_SNORM: return true;
		case CqFormat_G16R16_SNORM: return true;
		case CqFormat_R16G16_SINT: return true;
		case CqFormat_R16G16_SFLOAT: return true;
		case CqFormat_R16G16_SBFLOAT: return true;
		case CqFormat_R32_SINT: return true;
		case CqFormat_R32_SFLOAT: return true;
		case CqFormat_A2R10G10B10_SNORM: return true;
		case CqFormat_A2R10G10B10_SINT: return true;
		case CqFormat_A2B10G10R10_SNORM: return true;
		case CqFormat_A2B10G10R10_SINT: return true;
		case CqFormat_R10G10B10A2_SNORM: return true;
		case CqFormat_R10G10B10A2_SINT: return true;
		case CqFormat_B10G10R10A2_SNORM: return true;
		case CqFormat_B10G10R10A2_SINT: return true;
		case CqFormat_R16G16B16_SNORM: return true;
		case CqFormat_R16G16B16_SINT: return true;
		case CqFormat_R16G16B16_SFLOAT: return true;
		case CqFormat_R16G16B16_SBFLOAT: return true;
		case CqFormat_R16G16B16A16_SNORM: return true;
		case CqFormat_R16G16B16A16_SINT: return true;
		case CqFormat_R16G16B16A16_SFLOAT: return true;
		case CqFormat_R16G16B16A16_SBFLOAT: return true;
		case CqFormat_R32G32_SINT: return true;
		case CqFormat_R32G32_SFLOAT: return true;
		case CqFormat_R32G32B32_SINT: return true;
		case CqFormat_R32G32B32_SFLOAT: return true;
		case CqFormat_R32G32B32A32_SINT: return true;
		case CqFormat_R32G32B32A32_SFLOAT: return true;
		case CqFormat_R64_SINT: return true;
		case CqFormat_R64_SFLOAT: return true;
		case CqFormat_R64G64_SINT: return true;
		case CqFormat_R64G64_SFLOAT: return true;
		case CqFormat_R64G64B64_SINT: return true;
		case CqFormat_R64G64B64_SFLOAT: return true;
		case CqFormat_R64G64B64A64_SINT: return true;
		case CqFormat_R64G64B64A64_SFLOAT: return true;
		case CqFormat_D32_SFLOAT: return true;
		case CqFormat_D32_SFLOAT_S8_UINT: return true;
		case CqFormat_DXBC4_SNORM: return true;
		case CqFormat_DXBC5_SNORM: return true;
		case CqFormat_DXBC6H_SFLOAT: return true;
		case CqFormat_ETC2_EAC_R11_SNORM: return true;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsSRGB(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_R8_SRGB: return true;
		case CqFormat_R8G8_SRGB: return true;
		case CqFormat_R8G8B8_SRGB: return true;
		case CqFormat_B8G8R8_SRGB: return true;
		case CqFormat_R8G8B8A8_SRGB: return true;
		case CqFormat_B8G8R8A8_SRGB: return true;
		case CqFormat_DXBC1_RGB_SRGB: return true;
		case CqFormat_DXBC1_RGBA_SRGB: return true;
		case CqFormat_DXBC2_SRGB: return true;
		case CqFormat_DXBC3_SRGB: return true;
		case CqFormat_DXBC7_SRGB: return true;
		case CqFormat_PVRTC1_2BPP_SRGB: return true;
		case CqFormat_PVRTC1_4BPP_SRGB: return true;
		case CqFormat_PVRTC2_2BPP_SRGB: return true;
		case CqFormat_PVRTC2_4BPP_SRGB: return true;
		case CqFormat_ETC2_R8G8B8_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return true;
		case CqFormat_ASTC_4x4_SRGB: return true;
		case CqFormat_ASTC_5x4_SRGB: return true;
		case CqFormat_ASTC_5x5_SRGB: return true;
		case CqFormat_ASTC_6x5_SRGB: return true;
		case CqFormat_ASTC_6x6_SRGB: return true;
		case CqFormat_ASTC_8x5_SRGB: return true;
		case CqFormat_ASTC_8x6_SRGB: return true;
		case CqFormat_ASTC_8x8_SRGB: return true;
		case CqFormat_ASTC_10x5_SRGB: return true;
		case CqFormat_ASTC_10x6_SRGB: return true;
		case CqFormat_ASTC_10x8_SRGB: return true;
		case CqFormat_ASTC_10x10_SRGB: return true;
		case CqFormat_ASTC_12x10_SRGB: return true;
		case CqFormat_ASTC_12x12_SRGB: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsCompressed(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_DXBC1_RGB_UNORM: return true;
		case CqFormat_DXBC1_RGB_SRGB: return true;
		case CqFormat_DXBC1_RGBA_UNORM: return true;
		case CqFormat_DXBC1_RGBA_SRGB: return true;
		case CqFormat_DXBC2_UNORM: return true;
		case CqFormat_DXBC2_SRGB: return true;
		case CqFormat_DXBC3_UNORM: return true;
		case CqFormat_DXBC3_SRGB: return true;
		case CqFormat_DXBC4_UNORM: return true;
		case CqFormat_DXBC4_SNORM: return true;
		case CqFormat_DXBC5_UNORM: return true;
		case CqFormat_DXBC5_SNORM: return true;
		case CqFormat_DXBC6H_UFLOAT: return true;
		case CqFormat_DXBC6H_SFLOAT: return true;
		case CqFormat_DXBC7_UNORM: return true;
		case CqFormat_DXBC7_SRGB: return true;
		case CqFormat_PVRTC1_2BPP_UNORM: return true;
		case CqFormat_PVRTC1_4BPP_UNORM: return true;
		case CqFormat_PVRTC2_2BPP_UNORM: return true;
		case CqFormat_PVRTC2_4BPP_UNORM: return true;
		case CqFormat_PVRTC1_2BPP_SRGB: return true;
		case CqFormat_PVRTC1_4BPP_SRGB: return true;
		case CqFormat_PVRTC2_2BPP_SRGB: return true;
		case CqFormat_PVRTC2_4BPP_SRGB: return true;
		case CqFormat_ETC2_R8G8B8_UNORM: return true;
		case CqFormat_ETC2_R8G8B8_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return true;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return true;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return true;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return true;
		case CqFormat_ETC2_EAC_R11_UNORM: return true;
		case CqFormat_ETC2_EAC_R11_SNORM: return true;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return true;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return true;
		case CqFormat_ASTC_4x4_UNORM: return true;
		case CqFormat_ASTC_4x4_SRGB: return true;
		case CqFormat_ASTC_5x4_UNORM: return true;
		case CqFormat_ASTC_5x4_SRGB: return true;
		case CqFormat_ASTC_5x5_UNORM: return true;
		case CqFormat_ASTC_5x5_SRGB: return true;
		case CqFormat_ASTC_6x5_UNORM: return true;
		case CqFormat_ASTC_6x5_SRGB: return true;
		case CqFormat_ASTC_6x6_UNORM: return true;
		case CqFormat_ASTC_6x6_SRGB: return true;
		case CqFormat_ASTC_8x5_UNORM: return true;
		case CqFormat_ASTC_8x5_SRGB: return true;
		case CqFormat_ASTC_8x6_UNORM: return true;
		case CqFormat_ASTC_8x6_SRGB: return true;
		case CqFormat_ASTC_8x8_UNORM: return true;
		case CqFormat_ASTC_8x8_SRGB: return true;
		case CqFormat_ASTC_10x5_UNORM: return true;
		case CqFormat_ASTC_10x5_SRGB: return true;
		case CqFormat_ASTC_10x6_UNORM: return true;
		case CqFormat_ASTC_10x6_SRGB: return true;
		case CqFormat_ASTC_10x8_UNORM: return true;
		case CqFormat_ASTC_10x8_SRGB: return true;
		case CqFormat_ASTC_10x10_UNORM: return true;
		case CqFormat_ASTC_10x10_SRGB: return true;
		case CqFormat_ASTC_12x10_UNORM: return true;
		case CqFormat_ASTC_12x10_SRGB: return true;
		case CqFormat_ASTC_12x12_UNORM: return true;
		case CqFormat_ASTC_12x12_SRGB: return true;
		default: return false;
	}
}

CQ_FORMAT_CONSTEXPR inline bool CqFormat_IsHomogenous(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return false;
		case CqFormat_B2G3R3_UNORM: return false;
		case CqFormat_X4R4G4B4_UNORM: return false;
		case CqFormat_X4B4G4R4_UNORM: return false;
		case CqFormat_R5G6B5_UNORM: return false;
		case CqFormat_B5G6R5_UNORM: return false;
		case CqFormat_R5G5B5A1_UNORM: return false;
		case CqFormat_B5G5R5A1_UNORM: return false;
		case CqFormat_A1B5G5R5_UNORM: return false;
		case CqFormat_A1R5G5B5_UNORM: return false;
		case CqFormat_R5G5B5X1_UNORM: return false;
		case CqFormat_B5G5R5X1_UNORM: return false;
		case CqFormat_X1R5G5B5_UNORM: return false;
		case CqFormat_X1B5G5R5_UNORM: return false;
		case CqFormat_B2G3R3A8_UNORM: return false;
		case CqFormat_R8G8B8A8_SRGB: return false;
		case CqFormat_B8G8R8A8_SRGB: return false;
		case CqFormat_A2R10G10B10_UNORM: return false;
		case CqFormat_A2R10G10B10_UINT: return false;
		case CqFormat_A2R10G10B10_SNORM: return false;
		case CqFormat_A2R10G10B10_SINT: return false;
		case CqFormat_A2B10G10R10_UNORM: return false;
		case CqFormat_A2B10G10R10_UINT: return false;
		case CqFormat_A2B10G10R10_SNORM: return false;
		case CqFormat_A2B10G10R10_SINT: return false;
		case CqFormat_R10G10B10A2_UNORM: return false;
		case CqFormat_R10G10B10A2_UINT: return false;
		case CqFormat_R10G10B10A2_SNORM: return false;
		case CqFormat_R10G10B10A2_SINT: return false;
		case CqFormat_B10G10R10A2_UNORM: return false;
		case CqFormat_B10G10R10A2_UINT: return false;
		case CqFormat_B10G10R10A2_SNORM: return false;
		case CqFormat_B10G10R10A2_SINT: return false;
		case CqFormat_B10G11R11_UFLOAT: return false;
		case CqFormat_E5B9G9R9_UFLOAT: return false;
		case CqFormat_X8_D24_UNORM: return false;
		case CqFormat_D16_UNORM_S8_UINT: return false;
		case CqFormat_D24_UNORM_S8_UINT: return false;
		case CqFormat_D32_SFLOAT_S8_UINT: return false;
		case CqFormat_DXBC1_RGB_UNORM: return false;
		case CqFormat_DXBC1_RGB_SRGB: return false;
		case CqFormat_DXBC1_RGBA_UNORM: return false;
		case CqFormat_DXBC1_RGBA_SRGB: return false;
		case CqFormat_DXBC2_UNORM: return false;
		case CqFormat_DXBC2_SRGB: return false;
		case CqFormat_DXBC3_UNORM: return false;
		case CqFormat_DXBC3_SRGB: return false;
		case CqFormat_DXBC4_UNORM: return false;
		case CqFormat_DXBC4_SNORM: return false;
		case CqFormat_DXBC5_UNORM: return false;
		case CqFormat_DXBC5_SNORM: return false;
		case CqFormat_DXBC6H_UFLOAT: return false;
		case CqFormat_DXBC6H_SFLOAT: return false;
		case CqFormat_DXBC7_UNORM: return false;
		case CqFormat_DXBC7_SRGB: return false;
		case CqFormat_PVRTC1_2BPP_UNORM: return false;
		case CqFormat_PVRTC1_4BPP_UNORM: return false;
		case CqFormat_PVRTC2_2BPP_UNORM: return false;
		case CqFormat_PVRTC2_4BPP_UNORM: return false;
		case CqFormat_PVRTC1_2BPP_SRGB: return false;
		case CqFormat_PVRTC1_4BPP_SRGB: return false;
		case CqFormat_PVRTC2_2BPP_SRGB: return false;
		case CqFormat_PVRTC2_4BPP_SRGB: return false;
		case CqFormat_ETC2_R8G8B8_UNORM: return false;
		case CqFormat_ETC2_R8G8B8_SRGB: return false;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return false;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return false;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return false;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return false;
		case CqFormat_ETC2_EAC_R11_UNORM: return false;
		case CqFormat_ETC2_EAC_R11_SNORM: return false;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return false;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return false;
		case CqFormat_ASTC_4x4_UNORM: return false;
		case CqFormat_ASTC_4x4_SRGB: return false;
		case CqFormat_ASTC_5x4_UNORM: return false;
		case CqFormat_ASTC_5x4_SRGB: return false;
		case CqFormat_ASTC_5x5_UNORM: return false;
		case CqFormat_ASTC_5x5_SRGB: return false;
		case CqFormat_ASTC_6x5_UNORM: return false;
		case CqFormat_ASTC_6x5_SRGB: return false;
		case CqFormat_ASTC_6x6_UNORM: return false;
		case CqFormat_ASTC_6x6_SRGB: return false;
		case CqFormat_ASTC_8x5_UNORM: return false;
		case CqFormat_ASTC_8x5_SRGB: return false;
		case CqFormat_ASTC_8x6_UNORM: return false;
		case CqFormat_ASTC_8x6_SRGB: return false;
		case CqFormat_ASTC_8x8_UNORM: return false;
		case CqFormat_ASTC_8x8_SRGB: return false;
		case CqFormat_ASTC_10x5_UNORM: return false;
		case CqFormat_ASTC_10x5_SRGB: return false;
		case CqFormat_ASTC_10x6_UNORM: return false;
		case CqFormat_ASTC_10x6_SRGB: return false;
		case CqFormat_ASTC_10x8_UNORM: return false;
		case CqFormat_ASTC_10x8_SRGB: return false;
		case CqFormat_ASTC_10x10_UNORM: return false;
		case CqFormat_ASTC_10x10_SRGB: return false;
		case CqFormat_ASTC_12x10_UNORM: return false;
		case CqFormat_ASTC_12x10_SRGB: return false;
		case CqFormat_ASTC_12x12_UNORM: return false;
		case CqFormat_ASTC_12x12_SRGB: return false;
		case CqFormat_CLUT_P4: return false;
		case CqFormat_CLUT_P4A4: return false;
		case CqFormat_CLUT_P8: return false;
		case CqFormat_CLUT_P8A8: return false;
		default: return true;
	}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isDepthOnly(Format const fmt) {
	switch(fmt) {
		case Format::D16_UNORM: return true;
		case Format::X8_D24_UNORM: return true;
		case Format::D32_SFLOAT: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isStencilOnly(Format const fmt) {
	switch(fmt) {
		case Format::S8_UINT: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isDepthAndStencil(Format const fmt) {
	switch(fmt) {
		case Format::D16_UNORM_S8_UINT: return true;
		case Format::D24_UNORM_S8_UINT: return true;
		case Format::D32_SFLOAT_S8_UINT: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isCLUT(Format const fmt) {
	switch(fmt) {
		case Format::CLUT_P4: return true;
		case Format::CLUT_P4A4: return true;
		case Format::CLUT_P8: return true;
		case Format::CLUT_P8A8: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isFloat(Format const fmt) {
	switch(fmt) {
		case Format::R16_SFLOAT: return true;
		case Format::R16_SBFLOAT: return true;
		case Format::R16G16_SFLOAT: return true;
		case Format::R16G16_SBFLOAT: return true;
		case Format::R32_SFLOAT: return true;
		case Format::B10G11R11_UFLOAT: return true;
		case Format::E5B9G9R9_UFLOAT: return true;
		case Format::R16G16B16_SFLOAT: return true;
		case Format::R16G16B16_SBFLOAT: return true;
		case Format::R16G16B16A16_SFLOAT: return true;
		case Format::R16G16B16A16_SBFLOAT: return true;
		case Format::R32G32_SFLOAT: return true;
		case Format::R32G32B32_SFLOAT: return true;
		case Format::R32G32B32A32_SFLOAT: return true;
		case Format::R64_SFLOAT: return true;
		case Format::R64G64_SFLOAT: return true;
		case Format::R64G64B64_SFLOAT: return true;
		case Format::R64G64B64A64_SFLOAT: return true;
		case Format::D32_SFLOAT: return true;
		case Format::D32_SFLOAT_S8_UINT: return true;
		case Format::DXBC6H_UFLOAT: return true;
		case Format::DXBC6H_SFLOAT: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isNormalised(Format const fmt) {
	switch(fmt) {
		case Format::R1_UNORM: return true;
		case Format::R2_UNORM: return true;
		case Format::R4_UNORM: return true;
		case Format::R4G4_UNORM: return true;
		case Format::G4R4_UNORM: return true;
		case Format::A8_UNORM: return true;
		case Format::R8_UNORM: return true;
		case Format::R8_SNORM: return true;
		case Format::R8_SRGB: return true;
		case Format::B2G3R3_UNORM: return true;
		case Format::R4G4B4A4_UNORM: return true;
		case Format::R4G4B4X4_UNORM: return true;
		case Format::B4G4R4A4_UNORM: return true;
		case Format::B4G4R4X4_UNORM: return true;
		case Format::A4R4G4B4_UNORM: return true;
		case Format::X4R4G4B4_UNORM: return true;
		case Format::A4B4G4R4_UNORM: return true;
		case Format::X4B4G4R4_UNORM: return true;
		case Format::R5G6B5_UNORM: return true;
		case Format::B5G6R5_UNORM: return true;
		case Format::R5G5B5A1_UNORM: return true;
		case Format::B5G5R5A1_UNORM: return true;
		case Format::A1B5G5R5_UNORM: return true;
		case Format::A1R5G5B5_UNORM: return true;
		case Format::R5G5B5X1_UNORM: return true;
		case Format::B5G5R5X1_UNORM: return true;
		case Format::X1R5G5B5_UNORM: return true;
		case Format::X1B5G5R5_UNORM: return true;
		case Format::B2G3R3A8_UNORM: return true;
		case Format::R8G8_UNORM: return true;
		case Format::R8G8_SNORM: return true;
		case Format::G8R8_UNORM: return true;
		case Format::G8R8_SNORM: return true;
		case Format::R8G8_SRGB: return true;
		case Format::R16_UNORM: return true;
		case Format::R16_SNORM: return true;
		case Format::R8G8B8_UNORM: return true;
		case Format::R8G8B8_SNORM: return true;
		case Format::R8G8B8_SRGB: return true;
		case Format::B8G8R8_UNORM: return true;
		case Format::B8G8R8_SNORM: return true;
		case Format::B8G8R8_SRGB: return true;
		case Format::R8G8B8A8_UNORM: return true;
		case Format::R8G8B8A8_SNORM: return true;
		case Format::R8G8B8A8_SRGB: return true;
		case Format::B8G8R8A8_UNORM: return true;
		case Format::B8G8R8A8_SNORM: return true;
		case Format::B8G8R8A8_SRGB: return true;
		case Format::R8G8B8X8_UNORM: return true;
		case Format::B8G8R8X8_UNORM: return true;
		case Format::R16G16_UNORM: return true;
		case Format::G16R16_UNORM: return true;
		case Format::R16G16_SNORM: return true;
		case Format::G16R16_SNORM: return true;
		case Format::A2R10G10B10_UNORM: return true;
		case Format::A2R10G10B10_SNORM: return true;
		case Format::A2B10G10R10_UNORM: return true;
		case Format::A2B10G10R10_SNORM: return true;
		case Format::R10G10B10A2_UNORM: return true;
		case Format::R10G10B10A2_SNORM: return true;
		case Format::B10G10R10A2_UNORM: return true;
		case Format::B10G10R10A2_SNORM: return true;
		case Format::R16G16B16_UNORM: return true;
		case Format::R16G16B16_SNORM: return true;
		case Format::R16G16B16A16_UNORM: return true;
		case Format::R16G16B16A16_SNORM: return true;
		case Format::D16_UNORM: return true;
		case Format::X8_D24_UNORM: return true;
		case Format::D16_UNORM_S8_UINT: return true;
		case Format::D24_UNORM_S8_UINT: return true;
		case Format::DXBC1_RGB_UNORM: return true;
		case Format::DXBC1_RGB_SRGB: return true;
		case Format::DXBC1_RGBA_UNORM: return true;
		case Format::DXBC1_RGBA_SRGB: return true;
		case Format::DXBC2_UNORM: return true;
		case Format::DXBC2_SRGB: return true;
		case Format::DXBC3_UNORM: return true;
		case Format::DXBC3_SRGB: return true;
		case Format::DXBC4_UNORM: return true;
		case Format::DXBC4_SNORM: return true;
		case Format::DXBC5_UNORM: return true;
		case Format::DXBC5_SNORM: return true;
		case Format::DXBC7_UNORM: return true;
		case Format::DXBC7_SRGB: return true;
		case Format::PVRTC1_2BPP_UNORM: return true;
		case Format::PVRTC1_4BPP_UNORM: return true;
		case Format::PVRTC2_2BPP_UNORM: return true;
		case Format::PVRTC2_4BPP_UNORM: return true;
		case Format::PVRTC1_2BPP_SRGB: return true;
		case Format::PVRTC1_4BPP_SRGB: return true;
		case Format::PVRTC2_2BPP_SRGB: return true;
		case Format::PVRTC2_4BPP_SRGB: return true;
		case Format::ETC2_R8G8B8_UNORM: return true;
		case Format::ETC2_R8G8B8_SRGB: return true;
		case Format::ETC2_R8G8B8A1_UNORM: return true;
		case Format::ETC2_R8G8B8A1_SRGB: return true;
		case Format::ETC2_R8G8B8A8_UNORM: return true;
		case Format::ETC2_R8G8B8A8_SRGB: return true;
		case Format::ETC2_EAC_R11_UNORM: return true;
		case Format::ETC2_EAC_R11_SNORM: return true;
		case Format::ETC2_EAC_R11G11_UNORM: return true;
		case Format::ETC2_EAC_R11G11_SNORM: return true;
		case Format::ASTC_4x4_UNORM: return true;
		case Format::ASTC_4x4_SRGB: return true;
		case Format::ASTC_5x4_UNORM: return true;
		case Format::ASTC_5x4_SRGB: return true;
		case Format::ASTC_5x5_UNORM: return true;
		case Format::ASTC_5x5_SRGB: return true;
		case Format::ASTC_6x5_UNORM: return true;
		case Format::ASTC_6x5_SRGB: return true;
		case Format::ASTC_6x6_UNORM: return true;
		case Format::ASTC_6x6_SRGB: return true;
		case Format::ASTC_8x5_UNORM: return true;
		case Format::ASTC_8x5_SRGB: return true;
		case Format::ASTC_8x6_UNORM: return true;
		case Format::ASTC_8x6_SRGB: return true;
		case Format::ASTC_8x8_UNORM: return true;
		case Format::ASTC_8x8_SRGB: return true;
		case Format::ASTC_10x5_UNORM: return true;
		case Format::ASTC_10x5_SRGB: return true;
		case Format::ASTC_10x6_UNORM: return true;
		case Format::ASTC_10x6_SRGB: return true;
		case Format::ASTC_10x8_UNORM: return true;
		case Format::ASTC_10x8_SRGB: return true;
		case Format::ASTC_10x10_UNORM: return true;
		case Format::ASTC_10x10_SRGB: return true;
		case Format::ASTC_12x10_UNORM: return true;
		case Format::ASTC_12x10_SRGB: return true;
		case Format::ASTC_12x12_UNORM: return true;
		case Format::ASTC_12x12_SRGB: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isSigned(Format const fmt) {
	switch(fmt) {
		case Format::R8_SNORM: return true;
		case Format::R8_SINT: return true;
		case Format::R8G8_SNORM: return true;
		case Format::G8R8_SNORM: return true;
		case Format::R8G8_SINT: return true;
		case Format::R16_SNORM: return true;
		case Format::R16_SINT: return true;
		case Format::R16_SFLOAT: return true;
		case Format::R16_SBFLOAT: return true;
		case Format::R8G8B8_SNORM: return true;
		case Format::R8G8B8_SINT: return true;
		case Format::B8G8R8_SNORM: return true;
		case Format::B8G8R8_SINT: return true;
		case Format::R8G8B8A8_SNORM: return true;
		case Format::R8G8B8A8_SINT: return true;
		case Format::B8G8R8A8_SNORM: return true;
		case Format::B8G8R8A8_SINT: return true;
		case Format::R16G16_SNORM: return true;
		case Format::G16R16_SNORM: return true;
		case Format::R16G16_SINT: return true;
		case Format::R16G16_SFLOAT: return true;
		case Format::R16G16_SBFLOAT: return true;
		case Format::R32_SINT: return true;
		case Format::R32_SFLOAT: return true;
		case Format::A2R10G10B10_SNORM: return true;
		case Format::A2R10G10B10_SINT: return true;
		case Format::A2B10G10R10_SNORM: return true;
		case Format::A2B10G10R10_SINT: return true;
		case Format::R10G10B10A2_SNORM: return true;
		case Format::R10G10B10A2_SINT: return true;
		case Format::B10G10R10A2_SNORM: return true;
		case Format::B10G10R10A2_SINT: return true;
		case Format::R16G16B16_SNORM: return true;
		case Format::R16G16B16_SINT: return true;
		case Format::R16G16B16_SFLOAT: return true;
		case Format::R16G16B16_SBFLOAT: return true;
		case Format::R16G16B16A16_SNORM: return true;
		case Format::R16G16B16A16_SINT: return true;
		case Format::R16G16B16A16_SFLOAT: return true;
		case Format::R16G16B16A16_SBFLOAT: return true;
		case Format::R32G32_SINT: return true;
		case Format::R32G32_SFLOAT: return true;
		case Format::R32G32B32_SINT: return true;
		case Format::R32G32B32_SFLOAT: return true;
		case Format::R32G32B32A32_SINT: return true;
		case Format::R32G32B32A32_SFLOAT: return true;
		case Format::R64_SINT: return true;
		case Format::R64_SFLOAT: return true;
		case Format::R64G64_SINT: return true;
		case Format::R64G64_SFLOAT: return true;
		case Format::R64G64B64_SINT: return true;
		case Format::R64G64B64_SFLOAT: return true;
		case Format::R64G64B64A64_SINT: return true;
		case Format::R64G64B64A64_SFLOAT: return true;
		case Format::D32_SFLOAT: return true;
		case Format::D32_SFLOAT_S8_UINT: return true;
		case Format::DXBC4_SNORM: return true;
		case Format::DXBC5_SNORM: return true;
		case Format::DXBC6H_SFLOAT: return true;
		case Format::ETC2_EAC_R11_SNORM: return true;
		case Format::ETC2_EAC_R11G11_SNORM: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isSRGB(Format const fmt) {
	switch(fmt) {
		case Format::R8_SRGB: return true;
		case Format::R8G8_SRGB: return true;
		case Format::R8G8B8_SRGB: return true;
		case Format::B8G8R8_SRGB: return true;
		case Format::R8G8B8A8_SRGB: return true;
		case Format::B8G8R8A8_SRGB: return true;
		case Format::DXBC1_RGB_SRGB: return true;
		case Format::DXBC1_RGBA_SRGB: return true;
		case Format::DXBC2_SRGB: return true;
		case Format::DXBC3_SRGB: return true;
		case Format::DXBC7_SRGB: return true;
		case Format::PVRTC1_2BPP_SRGB: return true;
		case Format::PVRTC1_4BPP_SRGB: return true;
		case Format::PVRTC2_2BPP_SRGB: return true;
		case Format::PVRTC2_4BPP_SRGB: return true;
		case Format::ETC2_R8G8B8_SRGB: return true;
		case Format::ETC2_R8G8B8A1_SRGB: return true;
		case Format::ETC2_R8G8B8A8_SRGB: return true;
		case Format::ASTC_4x4_SRGB: return true;
		case Format::ASTC_5x4_SRGB: return true;
		case Format::ASTC_5x5_SRGB: return true;
		case Format::ASTC_6x5_SRGB: return true;
		case Format::ASTC_6x6_SRGB: return true;
		case Format::ASTC_8x5_SRGB: return true;
		case Format::ASTC_8x6_SRGB: return true;
		case Format::ASTC_8x8_SRGB: return true;
		case Format::ASTC_10x5_SRGB: return true;
		case Format::ASTC_10x6_SRGB: return true;
		case Format::ASTC_10x8_SRGB: return true;
		case Format::ASTC_10x10_SRGB: return true;
		case Format::ASTC_12x10_SRGB: return true;
		case Format::ASTC_12x12_SRGB: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isCompressed(Format const fmt) {
	switch(fmt) {
		case Format::DXBC1_RGB_UNORM: return true;
		case Format::DXBC1_RGB_SRGB: return true;
		case Format::DXBC1_RGBA_UNORM: return true;
		case Format::DXBC1_RGBA_SRGB: return true;
		case Format::DXBC2_UNORM: return true;
		case Format::DXBC2_SRGB: return true;
		case Format::DXBC3_UNORM: return true;
		case Format::DXBC3_SRGB: return true;
		case Format::DXBC4_UNORM: return true;
		case Format::DXBC4_SNORM: return true;
		case Format::DXBC5_UNORM: return true;
		case Format::DXBC5_SNORM: return true;
		case Format::DXBC6H_UFLOAT: return true;
		case Format::DXBC6H_SFLOAT: return true;
		case Format::DXBC7_UNORM: return true;
		case Format::DXBC7_SRGB: return true;
		case Format::PVRTC1_2BPP_UNORM: return true;
		case Format::PVRTC1_4BPP_UNORM: return true;
		case Format::PVRTC2_2BPP_UNORM: return true;
		case Format::PVRTC2_4BPP_UNORM: return true;
		case Format::PVRTC1_2BPP_SRGB: return true;
		case Format::PVRTC1_4BPP_SRGB: return true;
		case Format::PVRTC2_2BPP_SRGB: return true;
		case Format::PVRTC2_4BPP_SRGB: return true;
		case Format::ETC2_R8G8B8_UNORM: return true;
		case Format::ETC2_R8G8B8_SRGB: return true;
		case Format::ETC2_R8G8B8A1_UNORM: return true;
		case Format::ETC2_R8G8B8A1_SRGB: return true;
		case Format::ETC2_R8G8B8A8_UNORM: return true;
		case Format::ETC2_R8G8B8A8_SRGB: return true;
		case Format::ETC2_EAC_R11_UNORM: return true;
		case Format::ETC2_EAC_R11_SNORM: return true;
		case Format::ETC2_EAC_R11G11_UNORM: return true;
		case Format::ETC2_EAC_R11G11_SNORM: return true;
		case Format::ASTC_4x4_UNORM: return true;
		case Format::ASTC_4x4_SRGB: return true;
		case Format::ASTC_5x4_UNORM: return true;
		case Format::ASTC_5x4_SRGB: return true;
		case Format::ASTC_5x5_UNORM: return true;
		case Format::ASTC_5x5_SRGB: return true;
		case Format::ASTC_6x5_UNORM: return true;
		case Format::ASTC_6x5_SRGB: return true;
		case Format::ASTC_6x6_UNORM: return true;
		case Format::ASTC_6x6_SRGB: return true;
		case Format::ASTC_8x5_UNORM: return true;
		case Format::ASTC_8x5_SRGB: return true;
		case Format::ASTC_8x6_UNORM: return true;
		case Format::ASTC_8x6_SRGB: return true;
		case Format::ASTC_8x8_UNORM: return true;
		case Format::ASTC_8x8_SRGB: return true;
		case Format::ASTC_10x5_UNORM: return true;
		case Format::ASTC_10x5_SRGB: return true;
		case Format::ASTC_10x6_UNORM: return true;
		case Format::ASTC_10x6_SRGB: return true;
		case Format::ASTC_10x8_UNORM: return true;
		case Format::ASTC_10x8_SRGB: return true;
		case Format::ASTC_10x10_UNORM: return true;
		case Format::ASTC_10x10_SRGB: return true;
		case Format::ASTC_12x10_UNORM: return true;
		case Format::ASTC_12x10_SRGB: return true;
		case Format::ASTC_12x12_UNORM: return true;
		case Format::ASTC_12x12_SRGB: return true;
		default: return false;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline bool isHomogenous(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return false;
		case Format::B2G3R3_UNORM: return false;
		case Format::X4R4G4B4_UNORM: return false;
		case Format::X4B4G4R4_UNORM: return false;
		case Format::R5G6B5_UNORM: return false;
		case Format::B5G6R5_UNORM: return false;
		case Format::R5G5B5A1_UNORM: return false;
		case Format::B5G5R5A1_UNORM: return false;
		case Format::A1B5G5R5_UNORM: return false;
		case Format::A1R5G5B5_UNORM: return false;
		case Format::R5G5B5X1_UNORM: return false;
		case Format::B5G5R5X1_UNORM: return false;
		case Format::X1R5G5B5_UNORM: return false;
		case Format::X1B5G5R5_UNORM: return false;
		case Format::B2G3R3A8_UNORM: return false;
		case Format::R8G8B8A8_SRGB: return false;
		case Format::B8G8R8A8_SRGB: return false;
		case Format::A2R10G10B10_UNORM: return false;
		case Format::A2R10G10B10_UINT: return false;
		case Format::A2R10G10B10_SNORM: return false;
		case Format::A2R10G10B10_SINT: return false;
		case Format::A2B10G10R10_UNORM: return false;
		case Format::A2B10G10R10_UINT: return false;
		case Format::A2B10G10R10_SNORM: return false;
		case Format::A2B10G10R10_SINT: return false;
		case Format::R10G10B10A2_UNORM: return false;
		case Format::R10G10B10A2_UINT: return false;
		case Format::R10G10B10A2_SNORM: return false;
		case Format::R10G10B10A2_SINT: return false;
		case Format::B10G10R10A2_UNORM: return false;
		case Format::B10G10R10A2_UINT: return false;
		case Format::B10G10R10A2_SNORM: return false;
		case Format::B10G10R10A2_SINT: return false;
		case Format::B10G11R11_UFLOAT: return false;
		case Format::E5B9G9R9_UFLOAT: return false;
		case Format::X8_D24_UNORM: return false;
		case Format::D16_UNORM_S8_UINT: return false;
		case Format::D24_UNORM_S8_UINT: return false;
		case Format::D32_SFLOAT_S8_UINT: return false;
		case Format::DXBC1_RGB_UNORM: return false;
		case Format::DXBC1_RGB_SRGB: return false;
		case Format::DXBC1_RGBA_UNORM: return false;
		case Format::DXBC1_RGBA_SRGB: return false;
		case Format::DXBC2_UNORM: return false;
		case Format::DXBC2_SRGB: return false;
		case Format::DXBC3_UNORM: return false;
		case Format::DXBC3_SRGB: return false;
		case Format::DXBC4_UNORM: return false;
		case Format::DXBC4_SNORM: return false;
		case Format::DXBC5_UNORM: return false;
		case Format::DXBC5_SNORM: return false;
		case Format::DXBC6H_UFLOAT: return false;
		case Format::DXBC6H_SFLOAT: return false;
		case Format::DXBC7_UNORM: return false;
		case Format::DXBC7_SRGB: return false;
		case Format::PVRTC1_2BPP_UNORM: return false;
		case Format::PVRTC1_4BPP_UNORM: return false;
		case Format::PVRTC2_2BPP_UNORM: return false;
		case Format::PVRTC2_4BPP_UNORM: return false;
		case Format::PVRTC1_2BPP_SRGB: return false;
		case Format::PVRTC1_4BPP_SRGB: return false;
		case Format::PVRTC2_2BPP_SRGB: return false;
		case Format::PVRTC2_4BPP_SRGB: return false;
		case Format::ETC2_R8G8B8_UNORM: return false;
		case Format::ETC2_R8G8B8_SRGB: return false;
		case Format::ETC2_R8G8B8A1_UNORM: return false;
		case Format::ETC2_R8G8B8A1_SRGB: return false;
		case Format::ETC2_R8G8B8A8_UNORM: return false;
		case Format::ETC2_R8G8B8A8_SRGB: return false;
		case Format::ETC2_EAC_R11_UNORM: return false;
		case Format::ETC2_EAC_R11_SNORM: return false;
		case Format::ETC2_EAC_R11G11_UNORM: return false;
		case Format::ETC2_EAC_R11G11_SNORM: return false;
		case Format::ASTC_4x4_UNORM: return false;
		case Format::ASTC_4x4_SRGB: return false;
		case Format::ASTC_5x4_UNORM: return false;
		case Format::ASTC_5x4_SRGB: return false;
		case Format::ASTC_5x5_UNORM: return false;
		case Format::ASTC_5x5_SRGB: return false;
		case Format::ASTC_6x5_UNORM: return false;
		case Format::ASTC_6x5_SRGB: return false;
		case Format::ASTC_6x6_UNORM: return false;
		case Format::ASTC_6x6_SRGB: return false;
		case Format::ASTC_8x5_UNORM: return false;
		case Format::ASTC_8x5_SRGB: return false;
		case Format::ASTC_8x6_UNORM: return false;
		case Format::ASTC_8x6_SRGB: return false;
		case Format::ASTC_8x8_UNORM: return false;
		case Format::ASTC_8x8_SRGB: return false;
		case Format::ASTC_10x5_UNORM: return false;
		case Format::ASTC_10x5_SRGB: return false;
		case Format::ASTC_10x6_UNORM: return false;
		case Format::ASTC_10x6_SRGB: return false;
		case Format::ASTC_10x8_UNORM: return false;
		case Format::ASTC_10x8_SRGB: return false;
		case Format::ASTC_10x10_UNORM: return false;
		case Format::ASTC_10x10_SRGB: return false;
		case Format::ASTC_12x10_UNORM: return false;
		case Format::ASTC_12x10_SRGB: return false;
		case Format::ASTC_12x12_UNORM: return false;
		case Format::ASTC_12x12_SRGB: return false;
		case Format::CLUT_P4: return false;
		case Format::CLUT_P4A4: return false;
		case Format::CLUT_P8: return false;
		case Format::CLUT_P8A8: return false;
		default: return true;
	}
}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_WidthOfBlock(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0;
		case CqFormat_R1_UNORM: return 8;
		case CqFormat_R2_UNORM: return 4;
		case CqFormat_R4_UNORM: return 2;
		case CqFormat_DXBC1_RGB_UNORM: return 4;
		case CqFormat_DXBC1_RGB_SRGB: return 4;
		case CqFormat_DXBC1_RGBA_UNORM: return 4;
		case CqFormat_DXBC1_RGBA_SRGB: return 4;
		case CqFormat_DXBC2_UNORM: return 4;
		case CqFormat_DXBC2_SRGB: return 4;
		case CqFormat_DXBC3_UNORM: return 4;
		case CqFormat_DXBC3_SRGB: return 4;
		case CqFormat_DXBC4_UNORM: return 4;
		case CqFormat_DXBC4_SNORM: return 4;
		case CqFormat_DXBC5_UNORM: return 4;
		case CqFormat_DXBC5_SNORM: return 4;
		case CqFormat_DXBC6H_UFLOAT: return 4;
		case CqFormat_DXBC6H_SFLOAT: return 4;
		case CqFormat_DXBC7_UNORM: return 4;
		case CqFormat_DXBC7_SRGB: return 4;
		case CqFormat_PVRTC1_2BPP_UNORM: return 8;
		case CqFormat_PVRTC1_4BPP_UNORM: return 4;
		case CqFormat_PVRTC2_2BPP_UNORM: return 8;
		case CqFormat_PVRTC2_4BPP_UNORM: return 4;
		case CqFormat_PVRTC1_2BPP_SRGB: return 8;
		case CqFormat_PVRTC1_4BPP_SRGB: return 4;
		case CqFormat_PVRTC2_2BPP_SRGB: return 8;
		case CqFormat_PVRTC2_4BPP_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return 4;
		case CqFormat_ETC2_EAC_R11_UNORM: return 4;
		case CqFormat_ETC2_EAC_R11_SNORM: return 4;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return 4;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return 4;
		case CqFormat_ASTC_4x4_UNORM: return 4;
		case CqFormat_ASTC_4x4_SRGB: return 4;
		case CqFormat_ASTC_5x4_UNORM: return 5;
		case CqFormat_ASTC_5x4_SRGB: return 5;
		case CqFormat_ASTC_5x5_UNORM: return 5;
		case CqFormat_ASTC_5x5_SRGB: return 5;
		case CqFormat_ASTC_6x5_UNORM: return 6;
		case CqFormat_ASTC_6x5_SRGB: return 6;
		case CqFormat_ASTC_6x6_UNORM: return 6;
		case CqFormat_ASTC_6x6_SRGB: return 6;
		case CqFormat_ASTC_8x5_UNORM: return 8;
		case CqFormat_ASTC_8x5_SRGB: return 8;
		case CqFormat_ASTC_8x6_UNORM: return 8;
		case CqFormat_ASTC_8x6_SRGB: return 8;
		case CqFormat_ASTC_8x8_UNORM: return 8;
		case CqFormat_ASTC_8x8_SRGB: return 8;
		case CqFormat_ASTC_10x5_UNORM: return 10;
		case CqFormat_ASTC_10x5_SRGB: return 10;
		case CqFormat_ASTC_10x6_UNORM: return 10;
		case CqFormat_ASTC_10x6_SRGB: return 10;
		case CqFormat_ASTC_10x8_UNORM: return 10;
		case CqFormat_ASTC_10x8_SRGB: return 10;
		case CqFormat_ASTC_10x10_UNORM: return 10;
		case CqFormat_ASTC_10x10_SRGB: return 10;
		case CqFormat_ASTC_12x10_UNORM: return 12;
		case CqFormat_ASTC_12x10_SRGB: return 12;
		case CqFormat_ASTC_12x12_UNORM: return 12;
		case CqFormat_ASTC_12x12_SRGB: return 12;
		case CqFormat_CLUT_P4: return 2;
		default: return 1;
	}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_HeightOfBlock(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0;
		case CqFormat_DXBC1_RGB_UNORM: return 4;
		case CqFormat_DXBC1_RGB_SRGB: return 4;
		case CqFormat_DXBC1_RGBA_UNORM: return 4;
		case CqFormat_DXBC1_RGBA_SRGB: return 4;
		case CqFormat_DXBC2_UNORM: return 4;
		case CqFormat_DXBC2_SRGB: return 4;
		case CqFormat_DXBC3_UNORM: return 4;
		case CqFormat_DXBC3_SRGB: return 4;
		case CqFormat_DXBC4_UNORM: return 4;
		case CqFormat_DXBC4_SNORM: return 4;
		case CqFormat_DXBC5_UNORM: return 4;
		case CqFormat_DXBC5_SNORM: return 4;
		case CqFormat_DXBC6H_UFLOAT: return 4;
		case CqFormat_DXBC6H_SFLOAT: return 4;
		case CqFormat_DXBC7_UNORM: return 4;
		case CqFormat_DXBC7_SRGB: return 4;
		case CqFormat_PVRTC1_2BPP_UNORM: return 4;
		case CqFormat_PVRTC1_4BPP_UNORM: return 4;
		case CqFormat_PVRTC2_2BPP_UNORM: return 4;
		case CqFormat_PVRTC2_4BPP_UNORM: return 4;
		case CqFormat_PVRTC1_2BPP_SRGB: return 4;
		case CqFormat_PVRTC1_4BPP_SRGB: return 4;
		case CqFormat_PVRTC2_2BPP_SRGB: return 4;
		case CqFormat_PVRTC2_4BPP_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return 4;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return 4;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return 4;
		case CqFormat_ETC2_EAC_R11_UNORM: return 4;
		case CqFormat_ETC2_EAC_R11_SNORM: return 4;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return 4;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return 4;
		case CqFormat_ASTC_4x4_UNORM: return 4;
		case CqFormat_ASTC_4x4_SRGB: return 4;
		case CqFormat_ASTC_5x4_UNORM: return 4;
		case CqFormat_ASTC_5x4_SRGB: return 4;
		case CqFormat_ASTC_5x5_UNORM: return 5;
		case CqFormat_ASTC_5x5_SRGB: return 5;
		case CqFormat_ASTC_6x5_UNORM: return 5;
		case CqFormat_ASTC_6x5_SRGB: return 5;
		case CqFormat_ASTC_6x6_UNORM: return 6;
		case CqFormat_ASTC_6x6_SRGB: return 6;
		case CqFormat_ASTC_8x5_UNORM: return 5;
		case CqFormat_ASTC_8x5_SRGB: return 5;
		case CqFormat_ASTC_8x6_UNORM: return 6;
		case CqFormat_ASTC_8x6_SRGB: return 6;
		case CqFormat_ASTC_8x8_UNORM: return 8;
		case CqFormat_ASTC_8x8_SRGB: return 8;
		case CqFormat_ASTC_10x5_UNORM: return 5;
		case CqFormat_ASTC_10x5_SRGB: return 5;
		case CqFormat_ASTC_10x6_UNORM: return 6;
		case CqFormat_ASTC_10x6_SRGB: return 6;
		case CqFormat_ASTC_10x8_UNORM: return 8;
		case CqFormat_ASTC_10x8_SRGB: return 8;
		case CqFormat_ASTC_10x10_UNORM: return 10;
		case CqFormat_ASTC_10x10_SRGB: return 10;
		case CqFormat_ASTC_12x10_UNORM: return 10;
		case CqFormat_ASTC_12x10_SRGB: return 10;
		case CqFormat_ASTC_12x12_UNORM: return 12;
		case CqFormat_ASTC_12x12_SRGB: return 12;
		default: return 1;
	}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_DepthOfBlock(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0;
		default: return 1;
	}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_BitSizeOfBlock(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0;
		case CqFormat_R1_UNORM: return 8;
		case CqFormat_R2_UNORM: return 8;
		case CqFormat_R4_UNORM: return 8;
		case CqFormat_R4G4_UNORM: return 8;
		case CqFormat_G4R4_UNORM: return 8;
		case CqFormat_A8_UNORM: return 8;
		case CqFormat_R8_UNORM: return 8;
		case CqFormat_R8_SNORM: return 8;
		case CqFormat_R8_UINT: return 8;
		case CqFormat_R8_SINT: return 8;
		case CqFormat_R8_SRGB: return 8;
		case CqFormat_B2G3R3_UNORM: return 8;
		case CqFormat_R4G4B4A4_UNORM: return 16;
		case CqFormat_R4G4B4X4_UNORM: return 16;
		case CqFormat_B4G4R4A4_UNORM: return 16;
		case CqFormat_B4G4R4X4_UNORM: return 16;
		case CqFormat_A4R4G4B4_UNORM: return 16;
		case CqFormat_X4R4G4B4_UNORM: return 16;
		case CqFormat_A4B4G4R4_UNORM: return 16;
		case CqFormat_X4B4G4R4_UNORM: return 16;
		case CqFormat_R5G6B5_UNORM: return 16;
		case CqFormat_B5G6R5_UNORM: return 16;
		case CqFormat_R5G5B5A1_UNORM: return 16;
		case CqFormat_B5G5R5A1_UNORM: return 16;
		case CqFormat_A1B5G5R5_UNORM: return 16;
		case CqFormat_A1R5G5B5_UNORM: return 16;
		case CqFormat_R5G5B5X1_UNORM: return 16;
		case CqFormat_B5G5R5X1_UNORM: return 16;
		case CqFormat_X1R5G5B5_UNORM: return 16;
		case CqFormat_X1B5G5R5_UNORM: return 16;
		case CqFormat_B2G3R3A8_UNORM: return 16;
		case CqFormat_R8G8_UNORM: return 16;
		case CqFormat_R8G8_SNORM: return 16;
		case CqFormat_G8R8_UNORM: return 16;
		case CqFormat_G8R8_SNORM: return 16;
		case CqFormat_R8G8_UINT: return 16;
		case CqFormat_R8G8_SINT: return 16;
		case CqFormat_R8G8_SRGB: return 16;
		case CqFormat_R16_UNORM: return 16;
		case CqFormat_R16_SNORM: return 16;
		case CqFormat_R16_UINT: return 16;
		case CqFormat_R16_SINT: return 16;
		case CqFormat_R16_SFLOAT: return 16;
		case CqFormat_R16_SBFLOAT: return 16;
		case CqFormat_R8G8B8_UNORM: return 24;
		case CqFormat_R8G8B8_SNORM: return 24;
		case CqFormat_R8G8B8_UINT: return 24;
		case CqFormat_R8G8B8_SINT: return 24;
		case CqFormat_R8G8B8_SRGB: return 24;
		case CqFormat_B8G8R8_UNORM: return 24;
		case CqFormat_B8G8R8_SNORM: return 24;
		case CqFormat_B8G8R8_UINT: return 24;
		case CqFormat_B8G8R8_SINT: return 24;
		case CqFormat_B8G8R8_SRGB: return 24;
		case CqFormat_R16G16B16_UNORM: return 48;
		case CqFormat_R16G16B16_SNORM: return 48;
		case CqFormat_R16G16B16_UINT: return 48;
		case CqFormat_R16G16B16_SINT: return 48;
		case CqFormat_R16G16B16_SFLOAT: return 48;
		case CqFormat_R16G16B16_SBFLOAT: return 48;
		case CqFormat_R16G16B16A16_UNORM: return 64;
		case CqFormat_R16G16B16A16_SNORM: return 64;
		case CqFormat_R16G16B16A16_UINT: return 64;
		case CqFormat_R16G16B16A16_SINT: return 64;
		case CqFormat_R16G16B16A16_SFLOAT: return 64;
		case CqFormat_R16G16B16A16_SBFLOAT: return 64;
		case CqFormat_R32G32_UINT: return 64;
		case CqFormat_R32G32_SINT: return 64;
		case CqFormat_R32G32_SFLOAT: return 64;
		case CqFormat_R32G32B32_UINT: return 96;
		case CqFormat_R32G32B32_SINT: return 96;
		case CqFormat_R32G32B32_SFLOAT: return 96;
		case CqFormat_R32G32B32A32_UINT: return 128;
		case CqFormat_R32G32B32A32_SINT: return 128;
		case CqFormat_R32G32B32A32_SFLOAT: return 128;
		case CqFormat_R64_UINT: return 64;
		case CqFormat_R64_SINT: return 64;
		case CqFormat_R64_SFLOAT: return 64;
		case CqFormat_R64G64_UINT: return 128;
		case CqFormat_R64G64_SINT: return 128;
		case CqFormat_R64G64_SFLOAT: return 128;
		case CqFormat_R64G64B64_UINT: return 192;
		case CqFormat_R64G64B64_SINT: return 192;
		case CqFormat_R64G64B64_SFLOAT: return 192;
		case CqFormat_R64G64B64A64_UINT: return 256;
		case CqFormat_R64G64B64A64_SINT: return 256;
		case CqFormat_R64G64B64A64_SFLOAT: return 256;
		case CqFormat_D16_UNORM: return 16;
		case CqFormat_S8_UINT: return 8;
		case CqFormat_D32_SFLOAT_S8_UINT: return 64;
		case CqFormat_DXBC1_RGB_UNORM: return 64;
		case CqFormat_DXBC1_RGB_SRGB: return 64;
		case CqFormat_DXBC1_RGBA_UNORM: return 64;
		case CqFormat_DXBC1_RGBA_SRGB: return 64;
		case CqFormat_DXBC2_UNORM: return 128;
		case CqFormat_DXBC2_SRGB: return 128;
		case CqFormat_DXBC3_UNORM: return 128;
		case CqFormat_DXBC3_SRGB: return 128;
		case CqFormat_DXBC4_UNORM: return 64;
		case CqFormat_DXBC4_SNORM: return 64;
		case CqFormat_DXBC5_UNORM: return 128;
		case CqFormat_DXBC5_SNORM: return 128;
		case CqFormat_DXBC6H_UFLOAT: return 128;
		case CqFormat_DXBC6H_SFLOAT: return 128;
		case CqFormat_DXBC7_UNORM: return 128;
		case CqFormat_DXBC7_SRGB: return 128;
		case CqFormat_PVRTC1_2BPP_UNORM: return 64;
		case CqFormat_PVRTC1_4BPP_UNORM: return 64;
		case CqFormat_PVRTC2_2BPP_UNORM: return 64;
		case CqFormat_PVRTC2_4BPP_UNORM: return 64;
		case CqFormat_PVRTC1_2BPP_SRGB: return 64;
		case CqFormat_PVRTC1_4BPP_SRGB: return 64;
		case CqFormat_PVRTC2_2BPP_SRGB: return 64;
		case CqFormat_PVRTC2_4BPP_SRGB: return 64;
		case CqFormat_ETC2_R8G8B8_UNORM: return 64;
		case CqFormat_ETC2_R8G8B8_SRGB: return 64;
		case CqFormat_ETC2_R8G8B8A1_UNORM: return 64;
		case CqFormat_ETC2_R8G8B8A1_SRGB: return 64;
		case CqFormat_ETC2_R8G8B8A8_UNORM: return 64;
		case CqFormat_ETC2_R8G8B8A8_SRGB: return 64;
		case CqFormat_ETC2_EAC_R11_UNORM: return 64;
		case CqFormat_ETC2_EAC_R11_SNORM: return 64;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return 64;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return 64;
		case CqFormat_ASTC_4x4_UNORM: return 128;
		case CqFormat_ASTC_4x4_SRGB: return 128;
		case CqFormat_ASTC_5x4_UNORM: return 128;
		case CqFormat_ASTC_5x4_SRGB: return 128;
		case CqFormat_ASTC_5x5_UNORM: return 128;
		case CqFormat_ASTC_5x5_SRGB: return 128;
		case CqFormat_ASTC_6x5_UNORM: return 128;
		case CqFormat_ASTC_6x5_SRGB: return 128;
		case CqFormat_ASTC_6x6_UNORM: return 128;
		case CqFormat_ASTC_6x6_SRGB: return 128;
		case CqFormat_ASTC_8x5_UNORM: return 128;
		case CqFormat_ASTC_8x5_SRGB: return 128;
		case CqFormat_ASTC_8x6_UNORM: return 128;
		case CqFormat_ASTC_8x6_SRGB: return 128;
		case CqFormat_ASTC_8x8_UNORM: return 128;
		case CqFormat_ASTC_8x8_SRGB: return 128;
		case CqFormat_ASTC_10x5_UNORM: return 128;
		case CqFormat_ASTC_10x5_SRGB: return 128;
		case CqFormat_ASTC_10x6_UNORM: return 128;
		case CqFormat_ASTC_10x6_SRGB: return 128;
		case CqFormat_ASTC_10x8_UNORM: return 128;
		case CqFormat_ASTC_10x8_SRGB: return 128;
		case CqFormat_ASTC_10x10_UNORM: return 128;
		case CqFormat_ASTC_10x10_SRGB: return 128;
		case CqFormat_ASTC_12x10_UNORM: return 128;
		case CqFormat_ASTC_12x10_SRGB: return 128;
		case CqFormat_ASTC_12x12_UNORM: return 128;
		case CqFormat_ASTC_12x12_SRGB: return 128;
		case CqFormat_CLUT_P4: return 8;
		case CqFormat_CLUT_P4A4: return 8;
		case CqFormat_CLUT_P8: return 8;
		case CqFormat_CLUT_P8A8: return 16;
		default: return 32;
	}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_ChannelCount(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return 0;
		case CqFormat_R1_UNORM: return 1;
		case CqFormat_R2_UNORM: return 1;
		case CqFormat_R4_UNORM: return 1;
		case CqFormat_R4G4_UNORM: return 2;
		case CqFormat_G4R4_UNORM: return 2;
		case CqFormat_A8_UNORM: return 1;
		case CqFormat_R8_UNORM: return 1;
		case CqFormat_R8_SNORM: return 1;
		case CqFormat_R8_UINT: return 1;
		case CqFormat_R8_SINT: return 1;
		case CqFormat_R8_SRGB: return 1;
		case CqFormat_B2G3R3_UNORM: return 3;
		case CqFormat_R5G6B5_UNORM: return 3;
		case CqFormat_B5G6R5_UNORM: return 3;
		case CqFormat_R8G8_UNORM: return 2;
		case CqFormat_R8G8_SNORM: return 2;
		case CqFormat_G8R8_UNORM: return 2;
		case CqFormat_G8R8_SNORM: return 2;
		case CqFormat_R8G8_UINT: return 2;
		case CqFormat_R8G8_SINT: return 2;
		case CqFormat_R8G8_SRGB: return 2;
		case CqFormat_R16_UNORM: return 1;
		case CqFormat_R16_SNORM: return 1;
		case CqFormat_R16_UINT: return 1;
		case CqFormat_R16_SINT: return 1;
		case CqFormat_R16_SFLOAT: return 1;
		case CqFormat_R16_SBFLOAT: return 1;
		case CqFormat_R8G8B8_UNORM: return 3;
		case CqFormat_R8G8B8_SNORM: return 3;
		case CqFormat_R8G8B8_UINT: return 3;
		case CqFormat_R8G8B8_SINT: return 3;
		case CqFormat_R8G8B8_SRGB: return 3;
		case CqFormat_B8G8R8_UNORM: return 3;
		case CqFormat_B8G8R8_SNORM: return 3;
		case CqFormat_B8G8R8_UINT: return 3;
		case CqFormat_B8G8R8_SINT: return 3;
		case CqFormat_B8G8R8_SRGB: return 3;
		case CqFormat_R16G16_UNORM: return 2;
		case CqFormat_G16R16_UNORM: return 2;
		case CqFormat_R16G16_SNORM: return 2;
		case CqFormat_G16R16_SNORM: return 2;
		case CqFormat_R16G16_UINT: return 2;
		case CqFormat_R16G16_SINT: return 2;
		case CqFormat_R16G16_SFLOAT: return 2;
		case CqFormat_R16G16_SBFLOAT: return 2;
		case CqFormat_R32_UINT: return 1;
		case CqFormat_R32_SINT: return 1;
		case CqFormat_R32_SFLOAT: return 1;
		case CqFormat_B10G11R11_UFLOAT: return 3;
		case CqFormat_R16G16B16_UNORM: return 3;
		case CqFormat_R16G16B16_SNORM: return 3;
		case CqFormat_R16G16B16_UINT: return 3;
		case CqFormat_R16G16B16_SINT: return 3;
		case CqFormat_R16G16B16_SFLOAT: return 3;
		case CqFormat_R16G16B16_SBFLOAT: return 3;
		case CqFormat_R32G32_UINT: return 2;
		case CqFormat_R32G32_SINT: return 2;
		case CqFormat_R32G32_SFLOAT: return 2;
		case CqFormat_R32G32B32_UINT: return 3;
		case CqFormat_R32G32B32_SINT: return 3;
		case CqFormat_R32G32B32_SFLOAT: return 3;
		case CqFormat_R64_UINT: return 1;
		case CqFormat_R64_SINT: return 1;
		case CqFormat_R64_SFLOAT: return 1;
		case CqFormat_R64G64_UINT: return 2;
		case CqFormat_R64G64_SINT: return 2;
		case CqFormat_R64G64_SFLOAT: return 2;
		case CqFormat_R64G64B64_UINT: return 3;
		case CqFormat_R64G64B64_SINT: return 3;
		case CqFormat_R64G64B64_SFLOAT: return 3;
		case CqFormat_D16_UNORM: return 1;
		case CqFormat_X8_D24_UNORM: return 2;
		case CqFormat_D32_SFLOAT: return 1;
		case CqFormat_S8_UINT: return 1;
		case CqFormat_D16_UNORM_S8_UINT: return 2;
		case CqFormat_D24_UNORM_S8_UINT: return 2;
		case CqFormat_D32_SFLOAT_S8_UINT: return 2;
		case CqFormat_DXBC1_RGB_UNORM: return 3;
		case CqFormat_DXBC1_RGB_SRGB: return 3;
		case CqFormat_DXBC4_UNORM: return 1;
		case CqFormat_DXBC4_SNORM: return 1;
		case CqFormat_DXBC5_UNORM: return 2;
		case CqFormat_DXBC5_SNORM: return 2;
		case CqFormat_DXBC6H_UFLOAT: return 3;
		case CqFormat_DXBC6H_SFLOAT: return 3;
		case CqFormat_ETC2_R8G8B8_UNORM: return 3;
		case CqFormat_ETC2_R8G8B8_SRGB: return 3;
		case CqFormat_ETC2_EAC_R11_UNORM: return 1;
		case CqFormat_ETC2_EAC_R11_SNORM: return 1;
		case CqFormat_ETC2_EAC_R11G11_UNORM: return 2;
		case CqFormat_ETC2_EAC_R11G11_SNORM: return 2;
		case CqFormat_CLUT_P4: return 1;
		case CqFormat_CLUT_P4A4: return 2;
		case CqFormat_CLUT_P8: return 1;
		case CqFormat_CLUT_P8A8: return 2;
		default: return 4;
	}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getWidthOfBlock(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return 0;
		case Format::R1_UNORM: return 8;
		case Format::R2_UNORM: return 4;
		case Format::R4_UNORM: return 2;
		case Format::DXBC1_RGB_UNORM: return 4;
		case Format::DXBC1_RGB_SRGB: return 4;
		case Format::DXBC1_RGBA_UNORM: return 4;
		case Format::DXBC1_RGBA_SRGB: return 4;
		case Format::DXBC2_UNORM: return 4;
		case Format::DXBC2_SRGB: return 4;
		case Format::DXBC3_UNORM: return 4;
		case Format::DXBC3_SRGB: return 4;
		case Format::DXBC4_UNORM: return 4;
		case Format::DXBC4_SNORM: return 4;
		case Format::DXBC5_UNORM: return 4;
		case Format::DXBC5_SNORM: return 4;
		case Format::DXBC6H_UFLOAT: return 4;
		case Format::DXBC6H_SFLOAT: return 4;
		case Format::DXBC7_UNORM: return 4;
		case Format::DXBC7_SRGB: return 4;
		case Format::PVRTC1_2BPP_UNORM: return 8;
		case Format::PVRTC1_4BPP_UNORM: return 4;
		case Format::PVRTC2_2BPP_UNORM: return 8;
		case Format::PVRTC2_4BPP_UNORM: return 4;
		case Format::PVRTC1_2BPP_SRGB: return 8;
		case Format::PVRTC1_4BPP_SRGB: return 4;
		case Format::PVRTC2_2BPP_SRGB: return 8;
		case Format::PVRTC2_4BPP_SRGB: return 4;
		case Format::ETC2_R8G8B8_UNORM: return 4;
		case Format::ETC2_R8G8B8_SRGB: return 4;
		case Format::ETC2_R8G8B8A1_UNORM: return 4;
		case Format::ETC2_R8G8B8A1_SRGB: return 4;
		case Format::ETC2_R8G8B8A8_UNORM: return 4;
		case Format::ETC2_R8G8B8A8_SRGB: return 4;
		case Format::ETC2_EAC_R11_UNORM: return 4;
		case Format::ETC2_EAC_R11_SNORM: return 4;
		case Format::ETC2_EAC_R11G11_UNORM: return 4;
		case Format::ETC2_EAC_R11G11_SNORM: return 4;
		case Format::ASTC_4x4_UNORM: return 4;
		case Format::ASTC_4x4_SRGB: return 4;
		case Format::ASTC_5x4_UNORM: return 5;
		case Format::ASTC_5x4_SRGB: return 5;
		case Format::ASTC_5x5_UNORM: return 5;
		case Format::ASTC_5x5_SRGB: return 5;
		case Format::ASTC_6x5_UNORM: return 6;
		case Format::ASTC_6x5_SRGB: return 6;
		case Format::ASTC_6x6_UNORM: return 6;
		case Format::ASTC_6x6_SRGB: return 6;
		case Format::ASTC_8x5_UNORM: return 8;
		case Format::ASTC_8x5_SRGB: return 8;
		case Format::ASTC_8x6_UNORM: return 8;
		case Format::ASTC_8x6_SRGB: return 8;
		case Format::ASTC_8x8_UNORM: return 8;
		case Format::ASTC_8x8_SRGB: return 8;
		case Format::ASTC_10x5_UNORM: return 10;
		case Format::ASTC_10x5_SRGB: return 10;
		case Format::ASTC_10x6_UNORM: return 10;
		case Format::ASTC_10x6_SRGB: return 10;
		case Format::ASTC_10x8_UNORM: return 10;
		case Format::ASTC_10x8_SRGB: return 10;
		case Format::ASTC_10x10_UNORM: return 10;
		case Format::ASTC_10x10_SRGB: return 10;
		case Format::ASTC_12x10_UNORM: return 12;
		case Format::ASTC_12x10_SRGB: return 12;
		case Format::ASTC_12x12_UNORM: return 12;
		case Format::ASTC_12x12_SRGB: return 12;
		case Format::CLUT_P4: return 2;
		default: return 1;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getHeightOfBlock(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return 0;
		case Format::DXBC1_RGB_UNORM: return 4;
		case Format::DXBC1_RGB_SRGB: return 4;
		case Format::DXBC1_RGBA_UNORM: return 4;
		case Format::DXBC1_RGBA_SRGB: return 4;
		case Format::DXBC2_UNORM: return 4;
		case Format::DXBC2_SRGB: return 4;
		case Format::DXBC3_UNORM: return 4;
		case Format::DXBC3_SRGB: return 4;
		case Format::DXBC4_UNORM: return 4;
		case Format::DXBC4_SNORM: return 4;
		case Format::DXBC5_UNORM: return 4;
		case Format::DXBC5_SNORM: return 4;
		case Format::DXBC6H_UFLOAT: return 4;
		case Format::DXBC6H_SFLOAT: return 4;
		case Format::DXBC7_UNORM: return 4;
		case Format::DXBC7_SRGB: return 4;
		case Format::PVRTC1_2BPP_UNORM: return 4;
		case Format::PVRTC1_4BPP_UNORM: return 4;
		case Format::PVRTC2_2BPP_UNORM: return 4;
		case Format::PVRTC2_4BPP_UNORM: return 4;
		case Format::PVRTC1_2BPP_SRGB: return 4;
		case Format::PVRTC1_4BPP_SRGB: return 4;
		case Format::PVRTC2_2BPP_SRGB: return 4;
		case Format::PVRTC2_4BPP_SRGB: return 4;
		case Format::ETC2_R8G8B8_UNORM: return 4;
		case Format::ETC2_R8G8B8_SRGB: return 4;
		case Format::ETC2_R8G8B8A1_UNORM: return 4;
		case Format::ETC2_R8G8B8A1_SRGB: return 4;
		case Format::ETC2_R8G8B8A8_UNORM: return 4;
		case Format::ETC2_R8G8B8A8_SRGB: return 4;
		case Format::ETC2_EAC_R11_UNORM: return 4;
		case Format::ETC2_EAC_R11_SNORM: return 4;
		case Format::ETC2_EAC_R11G11_UNORM: return 4;
		case Format::ETC2_EAC_R11G11_SNORM: return 4;
		case Format::ASTC_4x4_UNORM: return 4;
		case Format::ASTC_4x4_SRGB: return 4;
		case Format::ASTC_5x4_UNORM: return 4;
		case Format::ASTC_5x4_SRGB: return 4;
		case Format::ASTC_5x5_UNORM: return 5;
		case Format::ASTC_5x5_SRGB: return 5;
		case Format::ASTC_6x5_UNORM: return 5;
		case Format::ASTC_6x5_SRGB: return 5;
		case Format::ASTC_6x6_UNORM: return 6;
		case Format::ASTC_6x6_SRGB: return 6;
		case Format::ASTC_8x5_UNORM: return 5;
		case Format::ASTC_8x5_SRGB: return 5;
		case Format::ASTC_8x6_UNORM: return 6;
		case Format::ASTC_8x6_SRGB: return 6;
		case Format::ASTC_8x8_UNORM: return 8;
		case Format::ASTC_8x8_SRGB: return 8;
		case Format::ASTC_10x5_UNORM: return 5;
		case Format::ASTC_10x5_SRGB: return 5;
		case Format::ASTC_10x6_UNORM: return 6;
		case Format::ASTC_10x6_SRGB: return 6;
		case Format::ASTC_10x8_UNORM: return 8;
		case Format::ASTC_10x8_SRGB: return 8;
		case Format::ASTC_10x10_UNORM: return 10;
		case Format::ASTC_10x10_SRGB: return 10;
		case Format::ASTC_12x10_UNORM: return 10;
		case Format::ASTC_12x10_SRGB: return 10;
		case Format::ASTC_12x12_UNORM: return 12;
		case Format::ASTC_12x12_SRGB: return 12;
		default: return 1;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getDepthOfBlock(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return 0;
		default: return 1;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getBitSizeOfBlock(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return 0;
		case Format::R1_UNORM: return 8;
		case Format::R2_UNORM: return 8;
		case Format::R4_UNORM: return 8;
		case Format::R4G4_UNORM: return 8;
		case Format::G4R4_UNORM: return 8;
		case Format::A8_UNORM: return 8;
		case Format::R8_UNORM: return 8;
		case Format::R8_SNORM: return 8;
		case Format::R8_UINT: return 8;
		case Format::R8_SINT: return 8;
		case Format::R8_SRGB: return 8;
		case Format::B2G3R3_UNORM: return 8;
		case Format::R4G4B4A4_UNORM: return 16;
		case Format::R4G4B4X4_UNORM: return 16;
		case Format::B4G4R4A4_UNORM: return 16;
		case Format::B4G4R4X4_UNORM: return 16;
		case Format::A4R4G4B4_UNORM: return 16;
		case Format::X4R4G4B4_UNORM: return 16;
		case Format::A4B4G4R4_UNORM: return 16;
		case Format::X4B4G4R4_UNORM: return 16;
		case Format::R5G6B5_UNORM: return 16;
		case Format::B5G6R5_UNORM: return 16;
		case Format::R5G5B5A1_UNORM: return 16;
		case Format::B5G5R5A1_UNORM: return 16;
		case Format::A1B5G5R5_UNORM: return 16;
		case Format::A1R5G5B5_UNORM: return 16;
		case Format::R5G5B5X1_UNORM: return 16;
		case Format::B5G5R5X1_UNORM: return 16;
		case Format::X1R5G5B5_UNORM: return 16;
		case Format::X1B5G5R5_UNORM: return 16;
		case Format::B2G3R3A8_UNORM: return 16;
		case Format::R8G8_UNORM: return 16;
		case Format::R8G8_SNORM: return 16;
		case Format::G8R8_UNORM: return 16;
		case Format::G8R8_SNORM: return 16;
		case Format::R8G8_UINT: return 16;
		case Format::R8G8_SINT: return 16;
		case Format::R8G8_SRGB: return 16;
		case Format::R16_UNORM: return 16;
		case Format::R16_SNORM: return 16;
		case Format::R16_UINT: return 16;
		case Format::R16_SINT: return 16;
		case Format::R16_SFLOAT: return 16;
		case Format::R16_SBFLOAT: return 16;
		case Format::R8G8B8_UNORM: return 24;
		case Format::R8G8B8_SNORM: return 24;
		case Format::R8G8B8_UINT: return 24;
		case Format::R8G8B8_SINT: return 24;
		case Format::R8G8B8_SRGB: return 24;
		case Format::B8G8R8_UNORM: return 24;
		case Format::B8G8R8_SNORM: return 24;
		case Format::B8G8R8_UINT: return 24;
		case Format::B8G8R8_SINT: return 24;
		case Format::B8G8R8_SRGB: return 24;
		case Format::R16G16B16_UNORM: return 48;
		case Format::R16G16B16_SNORM: return 48;
		case Format::R16G16B16_UINT: return 48;
		case Format::R16G16B16_SINT: return 48;
		case Format::R16G16B16_SFLOAT: return 48;
		case Format::R16G16B16_SBFLOAT: return 48;
		case Format::R16G16B16A16_UNORM: return 64;
		case Format::R16G16B16A16_SNORM: return 64;
		case Format::R16G16B16A16_UINT: return 64;
		case Format::R16G16B16A16_SINT: return 64;
		case Format::R16G16B16A16_SFLOAT: return 64;
		case Format::R16G16B16A16_SBFLOAT: return 64;
		case Format::R32G32_UINT: return 64;
		case Format::R32G32_SINT: return 64;
		case Format::R32G32_SFLOAT: return 64;
		case Format::R32G32B32_UINT: return 96;
		case Format::R32G32B32_SINT: return 96;
		case Format::R32G32B32_SFLOAT: return 96;
		case Format::R32G32B32A32_UINT: return 128;
		case Format::R32G32B32A32_SINT: return 128;
		case Format::R32G32B32A32_SFLOAT: return 128;
		case Format::R64_UINT: return 64;
		case Format::R64_SINT: return 64;
		case Format::R64_SFLOAT: return 64;
		case Format::R64G64_UINT: return 128;
		case Format::R64G64_SINT: return 128;
		case Format::R64G64_SFLOAT: return 128;
		case Format::R64G64B64_UINT: return 192;
		case Format::R64G64B64_SINT: return 192;
		case Format::R64G64B64_SFLOAT: return 192;
		case Format::R64G64B64A64_UINT: return 256;
		case Format::R64G64B64A64_SINT: return 256;
		case Format::R64G64B64A64_SFLOAT: return 256;
		case Format::D16_UNORM: return 16;
		case Format::S8_UINT: return 8;
		case Format::D32_SFLOAT_S8_UINT: return 64;
		case Format::DXBC1_RGB_UNORM: return 64;
		case Format::DXBC1_RGB_SRGB: return 64;
		case Format::DXBC1_RGBA_UNORM: return 64;
		case Format::DXBC1_RGBA_SRGB: return 64;
		case Format::DXBC2_UNORM: return 128;
		case Format::DXBC2_SRGB: return 128;
		case Format::DXBC3_UNORM: return 128;
		case Format::DXBC3_SRGB: return 128;
		case Format::DXBC4_UNORM: return 64;
		case Format::DXBC4_SNORM: return 64;
		case Format::DXBC5_UNORM: return 128;
		case Format::DXBC5_SNORM: return 128;
		case Format::DXBC6H_UFLOAT: return 128;
		case Format::DXBC6H_SFLOAT: return 128;
		case Format::DXBC7_UNORM: return 128;
		case Format::DXBC7_SRGB: return 128;
		case Format::PVRTC1_2BPP_UNORM: return 64;
		case Format::PVRTC1_4BPP_UNORM: return 64;
		case Format::PVRTC2_2BPP_UNORM: return 64;
		case Format::PVRTC2_4BPP_UNORM: return 64;
		case Format::PVRTC1_2BPP_SRGB: return 64;
		case Format::PVRTC1_4BPP_SRGB: return 64;
		case Format::PVRTC2_2BPP_SRGB: return 64;
		case Format::PVRTC2_4BPP_SRGB: return 64;
		case Format::ETC2_R8G8B8_UNORM: return 64;
		case Format::ETC2_R8G8B8_SRGB: return 64;
		case Format::ETC2_R8G8B8A1_UNORM: return 64;
		case Format::ETC2_R8G8B8A1_SRGB: return 64;
		case Format::ETC2_R8G8B8A8_UNORM: return 64;
		case Format::ETC2_R8G8B8A8_SRGB: return 64;
		case Format::ETC2_EAC_R11_UNORM: return 64;
		case Format::ETC2_EAC_R11_SNORM: return 64;
		case Format::ETC2_EAC_R11G11_UNORM: return 64;
		case Format::ETC2_EAC_R11G11_SNORM: return 64;
		case Format::ASTC_4x4_UNORM: return 128;
		case Format::ASTC_4x4_SRGB: return 128;
		case Format::ASTC_5x4_UNORM: return 128;
		case Format::ASTC_5x4_SRGB: return 128;
		case Format::ASTC_5x5_UNORM: return 128;
		case Format::ASTC_5x5_SRGB: return 128;
		case Format::ASTC_6x5_UNORM: return 128;
		case Format::ASTC_6x5_SRGB: return 128;
		case Format::ASTC_6x6_UNORM: return 128;
		case Format::ASTC_6x6_SRGB: return 128;
		case Format::ASTC_8x5_UNORM: return 128;
		case Format::ASTC_8x5_SRGB: return 128;
		case Format::ASTC_8x6_UNORM: return 128;
		case Format::ASTC_8x6_SRGB: return 128;
		case Format::ASTC_8x8_UNORM: return 128;
		case Format::ASTC_8x8_SRGB: return 128;
		case Format::ASTC_10x5_UNORM: return 128;
		case Format::ASTC_10x5_SRGB: return 128;
		case Format::ASTC_10x6_UNORM: return 128;
		case Format::ASTC_10x6_SRGB: return 128;
		case Format::ASTC_10x8_UNORM: return 128;
		case Format::ASTC_10x8_SRGB: return 128;
		case Format::ASTC_10x10_UNORM: return 128;
		case Format::ASTC_10x10_SRGB: return 128;
		case Format::ASTC_12x10_UNORM: return 128;
		case Format::ASTC_12x10_SRGB: return 128;
		case Format::ASTC_12x12_UNORM: return 128;
		case Format::ASTC_12x12_SRGB: return 128;
		case Format::CLUT_P4: return 8;
		case Format::CLUT_P4A4: return 8;
		case Format::CLUT_P8: return 8;
		case Format::CLUT_P8A8: return 16;
		default: return 32;
	}
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getChannelCount(Format const fmt) {
	switch(fmt) {
		case Format::UNDEFINED: return 0;
		case Format::R1_UNORM: return 1;
		case Format::R2_UNORM: return 1;
		case Format::R4_UNORM: return 1;
		case Format::R4G4_UNORM: return 2;
		case Format::G4R4_UNORM: return 2;
		case Format::A8_UNORM: return 1;
		case Format::R8_UNORM: return 1;
		case Format::R8_SNORM: return 1;
		case Format::R8_UINT: return 1;
		case Format::R8_SINT: return 1;
		case Format::R8_SRGB: return 1;
		case Format::B2G3R3_UNORM: return 3;
		case Format::R5G6B5_UNORM: return 3;
		case Format::B5G6R5_UNORM: return 3;
		case Format::R8G8_UNORM: return 2;
		case Format::R8G8_SNORM: return 2;
		case Format::G8R8_UNORM: return 2;
		case Format::G8R8_SNORM: return 2;
		case Format::R8G8_UINT: return 2;
		case Format::R8G8_SINT: return 2;
		case Format::R8G8_SRGB: return 2;
		case Format::R16_UNORM: return 1;
		case Format::R16_SNORM: return 1;
		case Format::R16_UINT: return 1;
		case Format::R16_SINT: return 1;
		case Format::R16_SFLOAT: return 1;
		case Format::R16_SBFLOAT: return 1;
		case Format::R8G8B8_UNORM: return 3;
		case Format::R8G8B8_SNORM: return 3;
		case Format::R8G8B8_UINT: return 3;
		case Format::R8G8B8_SINT: return 3;
		case Format::R8G8B8_SRGB: return 3;
		case Format::B8G8R8_UNORM: return 3;
		case Format::B8G8R8_SNORM: return 3;
		case Format::B8G8R8_UINT: return 3;
		case Format::B8G8R8_SINT: return 3;
		case Format::B8G8R8_SRGB: return 3;
		case Format::R16G16_UNORM: return 2;
		case Format::G16R16_UNORM: return 2;
		case Format::R16G16_SNORM: return 2;
		case Format::G16R16_SNORM: return 2;
		case Format::R16G16_UINT: return 2;
		case Format::R16G16_SINT: return 2;
		case Format::R16G16_SFLOAT: return 2;
		case Format::R16G16_SBFLOAT: return 2;
		case Format::R32_UINT: return 1;
		case Format::R32_SINT: return 1;
		case Format::R32_SFLOAT: return 1;
		case Format::B10G11R11_UFLOAT: return 3;
		case Format::R16G16B16_UNORM: return 3;
		case Format::R16G16B16_SNORM: return 3;
		case Format::R16G16B16_UINT: return 3;
		case Format::R16G16B16_SINT: return 3;
		case Format::R16G16B16_SFLOAT: return 3;
		case Format::R16G16B16_SBFLOAT: return 3;
		case Format::R32G32_UINT: return 2;
		case Format::R32G32_SINT: return 2;
		case Format::R32G32_SFLOAT: return 2;
		case Format::R32G32B32_UINT: return 3;
		case Format::R32G32B32_SINT: return 3;
		case Format::R32G32B32_SFLOAT: return 3;
		case Format::R64_UINT: return 1;
		case Format::R64_SINT: return 1;
		case Format::R64_SFLOAT: return 1;
		case Format::R64G64_UINT: return 2;
		case Format::R64G64_SINT: return 2;
		case Format::R64G64_SFLOAT: return 2;
		case Format::R64G64B64_UINT: return 3;
		case Format::R64G64B64_SINT: return 3;
		case Format::R64G64B64_SFLOAT: return 3;
		case Format::D16_UNORM: return 1;
		case Format::X8_D24_UNORM: return 2;
		case Format::D32_SFLOAT: return 1;
		case Format::S8_UINT: return 1;
		case Format::D16_UNORM_S8_UINT: return 2;
		case Format::D24_UNORM_S8_UINT: return 2;
		case Format::D32_SFLOAT_S8_UINT: return 2;
		case Format::DXBC1_RGB_UNORM: return 3;
		case Format::DXBC1_RGB_SRGB: return 3;
		case Format::DXBC4_UNORM: return 1;
		case Format::DXBC4_SNORM: return 1;
		case Format::DXBC5_UNORM: return 2;
		case Format::DXBC5_SNORM: return 2;
		case Format::DXBC6H_UFLOAT: return 3;
		case Format::DXBC6H_SFLOAT: return 3;
		case Format::ETC2_R8G8B8_UNORM: return 3;
		case Format::ETC2_R8G8B8_SRGB: return 3;
		case Format::ETC2_EAC_R11_UNORM: return 1;
		case Format::ETC2_EAC_R11_SNORM: return 1;
		case Format::ETC2_EAC_R11G11_UNORM: return 2;
		case Format::ETC2_EAC_R11G11_SNORM: return 2;
		case Format::CLUT_P4: return 1;
		case Format::CLUT_P4A4: return 2;
		case Format::CLUT_P8: return 1;
		case Format::CLUT_P8A8: return 2;
		default: return 4;
	}
}
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_ChannelBitWidthAtPhysical(CqFormat const fmt, uint32_t const channel) {
	if(CqFormat_IsHomogenous(fmt) || channel == 0) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return 0;
			case CqFormat_R1_UNORM: return 1;
			case CqFormat_R2_UNORM: return 2;
			case CqFormat_R4_UNORM: return 4;
			case CqFormat_R4G4_UNORM: return 4;
			case CqFormat_G4R4_UNORM: return 4;
			case CqFormat_B2G3R3_UNORM: return 2;
			case CqFormat_R4G4B4A4_UNORM: return 4;
			case CqFormat_R4G4B4X4_UNORM: return 4;
			case CqFormat_B4G4R4A4_UNORM: return 4;
			case CqFormat_B4G4R4X4_UNORM: return 4;
			case CqFormat_A4R4G4B4_UNORM: return 4;
			case CqFormat_X4R4G4B4_UNORM: return 4;
			case CqFormat_A4B4G4R4_UNORM: return 4;
			case CqFormat_X4B4G4R4_UNORM: return 4;
			case CqFormat_R5G6B5_UNORM: return 5;
			case CqFormat_B5G6R5_UNORM: return 5;
			case CqFormat_R5G5B5A1_UNORM: return 5;
			case CqFormat_B5G5R5A1_UNORM: return 5;
			case CqFormat_A1B5G5R5_UNORM: return 1;
			case CqFormat_A1R5G5B5_UNORM: return 1;
			case CqFormat_R5G5B5X1_UNORM: return 5;
			case CqFormat_B5G5R5X1_UNORM: return 5;
			case CqFormat_X1R5G5B5_UNORM: return 1;
			case CqFormat_X1B5G5R5_UNORM: return 1;
			case CqFormat_B2G3R3A8_UNORM: return 2;
			case CqFormat_R16_UNORM: return 16;
			case CqFormat_R16_SNORM: return 16;
			case CqFormat_R16_UINT: return 16;
			case CqFormat_R16_SINT: return 16;
			case CqFormat_R16_SFLOAT: return 16;
			case CqFormat_R16_SBFLOAT: return 16;
			case CqFormat_R16G16_UNORM: return 16;
			case CqFormat_G16R16_UNORM: return 16;
			case CqFormat_R16G16_SNORM: return 16;
			case CqFormat_G16R16_SNORM: return 16;
			case CqFormat_R16G16_UINT: return 16;
			case CqFormat_R16G16_SINT: return 16;
			case CqFormat_R16G16_SFLOAT: return 16;
			case CqFormat_R16G16_SBFLOAT: return 16;
			case CqFormat_R32_UINT: return 32;
			case CqFormat_R32_SINT: return 32;
			case CqFormat_R32_SFLOAT: return 32;
			case CqFormat_A2R10G10B10_UNORM: return 2;
			case CqFormat_A2R10G10B10_UINT: return 2;
			case CqFormat_A2R10G10B10_SNORM: return 2;
			case CqFormat_A2R10G10B10_SINT: return 2;
			case CqFormat_A2B10G10R10_UNORM: return 2;
			case CqFormat_A2B10G10R10_UINT: return 2;
			case CqFormat_A2B10G10R10_SNORM: return 2;
			case CqFormat_A2B10G10R10_SINT: return 2;
			case CqFormat_R10G10B10A2_UNORM: return 10;
			case CqFormat_R10G10B10A2_UINT: return 10;
			case CqFormat_R10G10B10A2_SNORM: return 10;
			case CqFormat_R10G10B10A2_SINT: return 10;
			case CqFormat_B10G10R10A2_UNORM: return 10;
			case CqFormat_B10G10R10A2_UINT: return 10;
			case CqFormat_B10G10R10A2_SNORM: return 10;
			case CqFormat_B10G10R10A2_SINT: return 10;
			case CqFormat_B10G11R11_UFLOAT: return 10;
			case CqFormat_E5B9G9R9_UFLOAT: return 5;
			case CqFormat_R16G16B16_UNORM: return 16;
			case CqFormat_R16G16B16_SNORM: return 16;
			case CqFormat_R16G16B16_UINT: return 16;
			case CqFormat_R16G16B16_SINT: return 16;
			case CqFormat_R16G16B16_SFLOAT: return 16;
			case CqFormat_R16G16B16_SBFLOAT: return 16;
			case CqFormat_R16G16B16A16_UNORM: return 16;
			case CqFormat_R16G16B16A16_SNORM: return 16;
			case CqFormat_R16G16B16A16_UINT: return 16;
			case CqFormat_R16G16B16A16_SINT: return 16;
			case CqFormat_R16G16B16A16_SFLOAT: return 16;
			case CqFormat_R16G16B16A16_SBFLOAT: return 16;
			case CqFormat_R32G32_UINT: return 32;
			case CqFormat_R32G32_SINT: return 32;
			case CqFormat_R32G32_SFLOAT: return 32;
			case CqFormat_R32G32B32_UINT: return 32;
			case CqFormat_R32G32B32_SINT: return 32;
			case CqFormat_R32G32B32_SFLOAT: return 32;
			case CqFormat_R32G32B32A32_UINT: return 32;
			case CqFormat_R32G32B32A32_SINT: return 32;
			case CqFormat_R32G32B32A32_SFLOAT: return 32;
			case CqFormat_R64_UINT: return 64;
			case CqFormat_R64_SINT: return 64;
			case CqFormat_R64_SFLOAT: return 64;
			case CqFormat_R64G64_UINT: return 64;
			case CqFormat_R64G64_SINT: return 64;
			case CqFormat_R64G64_SFLOAT: return 64;
			case CqFormat_R64G64B64_UINT: return 64;
			case CqFormat_R64G64B64_SINT: return 64;
			case CqFormat_R64G64B64_SFLOAT: return 64;
			case CqFormat_R64G64B64A64_UINT: return 64;
			case CqFormat_R64G64B64A64_SINT: return 64;
			case CqFormat_R64G64B64A64_SFLOAT: return 64;
			case CqFormat_D16_UNORM: return 16;
			case CqFormat_D32_SFLOAT: return 32;
			case CqFormat_D16_UNORM_S8_UINT: return 16;
			case CqFormat_D24_UNORM_S8_UINT: return 24;
			case CqFormat_D32_SFLOAT_S8_UINT: return 32;
			case CqFormat_DXBC1_RGB_UNORM: return 5;
			case CqFormat_DXBC1_RGB_SRGB: return 5;
			case CqFormat_DXBC1_RGBA_UNORM: return 5;
			case CqFormat_DXBC1_RGBA_SRGB: return 5;
			case CqFormat_DXBC2_UNORM: return 5;
			case CqFormat_DXBC2_SRGB: return 5;
			case CqFormat_DXBC3_UNORM: return 5;
			case CqFormat_DXBC3_SRGB: return 5;
			case CqFormat_DXBC6H_UFLOAT: return 16;
			case CqFormat_DXBC6H_SFLOAT: return 16;
			case CqFormat_ETC2_EAC_R11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11_SNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return 11;
			case CqFormat_CLUT_P4: return 4;
			case CqFormat_CLUT_P4A4: return 4;
			default: return 8;
		}
	}	else if(channel == 1) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0;
			case CqFormat_R1_UNORM: return 0;
			case CqFormat_R2_UNORM: return 0;
			case CqFormat_R4_UNORM: return 0;
			case CqFormat_R4G4_UNORM: return 4;
			case CqFormat_G4R4_UNORM: return 4;
			case CqFormat_A8_UNORM: return 0;
			case CqFormat_R8_UNORM: return 0;
			case CqFormat_R8_SNORM: return 0;
			case CqFormat_R8_UINT: return 0;
			case CqFormat_R8_SINT: return 0;
			case CqFormat_R8_SRGB: return 0;
			case CqFormat_B2G3R3_UNORM: return 3;
			case CqFormat_R4G4B4A4_UNORM: return 4;
			case CqFormat_R4G4B4X4_UNORM: return 4;
			case CqFormat_B4G4R4A4_UNORM: return 4;
			case CqFormat_B4G4R4X4_UNORM: return 4;
			case CqFormat_A4R4G4B4_UNORM: return 4;
			case CqFormat_X4R4G4B4_UNORM: return 4;
			case CqFormat_A4B4G4R4_UNORM: return 4;
			case CqFormat_X4B4G4R4_UNORM: return 4;
			case CqFormat_R5G6B5_UNORM: return 6;
			case CqFormat_B5G6R5_UNORM: return 6;
			case CqFormat_R5G5B5A1_UNORM: return 5;
			case CqFormat_B5G5R5A1_UNORM: return 5;
			case CqFormat_A1B5G5R5_UNORM: return 5;
			case CqFormat_A1R5G5B5_UNORM: return 5;
			case CqFormat_R5G5B5X1_UNORM: return 5;
			case CqFormat_B5G5R5X1_UNORM: return 5;
			case CqFormat_X1R5G5B5_UNORM: return 5;
			case CqFormat_X1B5G5R5_UNORM: return 5;
			case CqFormat_B2G3R3A8_UNORM: return 3;
			case CqFormat_R16_UNORM: return 0;
			case CqFormat_R16_SNORM: return 0;
			case CqFormat_R16_UINT: return 0;
			case CqFormat_R16_SINT: return 0;
			case CqFormat_R16_SFLOAT: return 0;
			case CqFormat_R16_SBFLOAT: return 0;
			case CqFormat_R16G16_UNORM: return 16;
			case CqFormat_G16R16_UNORM: return 16;
			case CqFormat_R16G16_SNORM: return 16;
			case CqFormat_G16R16_SNORM: return 16;
			case CqFormat_R16G16_UINT: return 16;
			case CqFormat_R16G16_SINT: return 16;
			case CqFormat_R16G16_SFLOAT: return 16;
			case CqFormat_R16G16_SBFLOAT: return 16;
			case CqFormat_R32_UINT: return 0;
			case CqFormat_R32_SINT: return 0;
			case CqFormat_R32_SFLOAT: return 0;
			case CqFormat_A2R10G10B10_UNORM: return 10;
			case CqFormat_A2R10G10B10_UINT: return 10;
			case CqFormat_A2R10G10B10_SNORM: return 10;
			case CqFormat_A2R10G10B10_SINT: return 10;
			case CqFormat_A2B10G10R10_UNORM: return 10;
			case CqFormat_A2B10G10R10_UINT: return 10;
			case CqFormat_A2B10G10R10_SNORM: return 10;
			case CqFormat_A2B10G10R10_SINT: return 10;
			case CqFormat_R10G10B10A2_UNORM: return 10;
			case CqFormat_R10G10B10A2_UINT: return 10;
			case CqFormat_R10G10B10A2_SNORM: return 10;
			case CqFormat_R10G10B10A2_SINT: return 10;
			case CqFormat_B10G10R10A2_UNORM: return 10;
			case CqFormat_B10G10R10A2_UINT: return 10;
			case CqFormat_B10G10R10A2_SNORM: return 10;
			case CqFormat_B10G10R10A2_SINT: return 10;
			case CqFormat_B10G11R11_UFLOAT: return 11;
			case CqFormat_E5B9G9R9_UFLOAT: return 9;
			case CqFormat_R16G16B16_UNORM: return 16;
			case CqFormat_R16G16B16_SNORM: return 16;
			case CqFormat_R16G16B16_UINT: return 16;
			case CqFormat_R16G16B16_SINT: return 16;
			case CqFormat_R16G16B16_SFLOAT: return 16;
			case CqFormat_R16G16B16_SBFLOAT: return 16;
			case CqFormat_R16G16B16A16_UNORM: return 16;
			case CqFormat_R16G16B16A16_SNORM: return 16;
			case CqFormat_R16G16B16A16_UINT: return 16;
			case CqFormat_R16G16B16A16_SINT: return 16;
			case CqFormat_R16G16B16A16_SFLOAT: return 16;
			case CqFormat_R16G16B16A16_SBFLOAT: return 16;
			case CqFormat_R32G32_UINT: return 32;
			case CqFormat_R32G32_SINT: return 32;
			case CqFormat_R32G32_SFLOAT: return 32;
			case CqFormat_R32G32B32_UINT: return 32;
			case CqFormat_R32G32B32_SINT: return 32;
			case CqFormat_R32G32B32_SFLOAT: return 32;
			case CqFormat_R32G32B32A32_UINT: return 32;
			case CqFormat_R32G32B32A32_SINT: return 32;
			case CqFormat_R32G32B32A32_SFLOAT: return 32;
			case CqFormat_R64_UINT: return 0;
			case CqFormat_R64_SINT: return 0;
			case CqFormat_R64_SFLOAT: return 0;
			case CqFormat_R64G64_UINT: return 64;
			case CqFormat_R64G64_SINT: return 64;
			case CqFormat_R64G64_SFLOAT: return 64;
			case CqFormat_R64G64B64_UINT: return 64;
			case CqFormat_R64G64B64_SINT: return 64;
			case CqFormat_R64G64B64_SFLOAT: return 64;
			case CqFormat_R64G64B64A64_UINT: return 64;
			case CqFormat_R64G64B64A64_SINT: return 64;
			case CqFormat_R64G64B64A64_SFLOAT: return 64;
			case CqFormat_D16_UNORM: return 0;
			case CqFormat_X8_D24_UNORM: return 24;
			case CqFormat_D32_SFLOAT: return 0;
			case CqFormat_S8_UINT: return 0;
			case CqFormat_DXBC1_RGB_UNORM: return 6;
			case CqFormat_DXBC1_RGB_SRGB: return 6;
			case CqFormat_DXBC1_RGBA_UNORM: return 6;
			case CqFormat_DXBC1_RGBA_SRGB: return 6;
			case CqFormat_DXBC2_UNORM: return 6;
			case CqFormat_DXBC2_SRGB: return 6;
			case CqFormat_DXBC3_UNORM: return 6;
			case CqFormat_DXBC3_SRGB: return 6;
			case CqFormat_DXBC6H_UFLOAT: return 16;
			case CqFormat_DXBC6H_SFLOAT: return 16;
			case CqFormat_ETC2_EAC_R11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11_SNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return 11;
			case CqFormat_CLUT_P4: return 0;
			case CqFormat_CLUT_P4A4: return 4;
			case CqFormat_CLUT_P8: return 0;
			default: return 8;
		}
	}	else if(channel == 2) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0;
			case CqFormat_R1_UNORM: return 0;
			case CqFormat_R2_UNORM: return 0;
			case CqFormat_R4_UNORM: return 0;
			case CqFormat_R4G4_UNORM: return 0;
			case CqFormat_G4R4_UNORM: return 0;
			case CqFormat_A8_UNORM: return 0;
			case CqFormat_R8_UNORM: return 0;
			case CqFormat_R8_SNORM: return 0;
			case CqFormat_R8_UINT: return 0;
			case CqFormat_R8_SINT: return 0;
			case CqFormat_R8_SRGB: return 0;
			case CqFormat_B2G3R3_UNORM: return 3;
			case CqFormat_R4G4B4A4_UNORM: return 4;
			case CqFormat_R4G4B4X4_UNORM: return 4;
			case CqFormat_B4G4R4A4_UNORM: return 4;
			case CqFormat_B4G4R4X4_UNORM: return 4;
			case CqFormat_A4R4G4B4_UNORM: return 4;
			case CqFormat_X4R4G4B4_UNORM: return 4;
			case CqFormat_A4B4G4R4_UNORM: return 4;
			case CqFormat_X4B4G4R4_UNORM: return 4;
			case CqFormat_R5G6B5_UNORM: return 5;
			case CqFormat_B5G6R5_UNORM: return 5;
			case CqFormat_R5G5B5A1_UNORM: return 5;
			case CqFormat_B5G5R5A1_UNORM: return 5;
			case CqFormat_A1B5G5R5_UNORM: return 5;
			case CqFormat_A1R5G5B5_UNORM: return 5;
			case CqFormat_R5G5B5X1_UNORM: return 5;
			case CqFormat_B5G5R5X1_UNORM: return 5;
			case CqFormat_X1R5G5B5_UNORM: return 5;
			case CqFormat_X1B5G5R5_UNORM: return 5;
			case CqFormat_B2G3R3A8_UNORM: return 3;
			case CqFormat_R8G8_UNORM: return 0;
			case CqFormat_R8G8_SNORM: return 0;
			case CqFormat_G8R8_UNORM: return 0;
			case CqFormat_G8R8_SNORM: return 0;
			case CqFormat_R8G8_UINT: return 0;
			case CqFormat_R8G8_SINT: return 0;
			case CqFormat_R8G8_SRGB: return 0;
			case CqFormat_R16_UNORM: return 0;
			case CqFormat_R16_SNORM: return 0;
			case CqFormat_R16_UINT: return 0;
			case CqFormat_R16_SINT: return 0;
			case CqFormat_R16_SFLOAT: return 0;
			case CqFormat_R16_SBFLOAT: return 0;
			case CqFormat_R16G16_UNORM: return 0;
			case CqFormat_G16R16_UNORM: return 0;
			case CqFormat_R16G16_SNORM: return 0;
			case CqFormat_G16R16_SNORM: return 0;
			case CqFormat_R16G16_UINT: return 0;
			case CqFormat_R16G16_SINT: return 0;
			case CqFormat_R16G16_SFLOAT: return 0;
			case CqFormat_R16G16_SBFLOAT: return 0;
			case CqFormat_R32_UINT: return 0;
			case CqFormat_R32_SINT: return 0;
			case CqFormat_R32_SFLOAT: return 0;
			case CqFormat_A2R10G10B10_UNORM: return 10;
			case CqFormat_A2R10G10B10_UINT: return 10;
			case CqFormat_A2R10G10B10_SNORM: return 10;
			case CqFormat_A2R10G10B10_SINT: return 10;
			case CqFormat_A2B10G10R10_UNORM: return 10;
			case CqFormat_A2B10G10R10_UINT: return 10;
			case CqFormat_A2B10G10R10_SNORM: return 10;
			case CqFormat_A2B10G10R10_SINT: return 10;
			case CqFormat_R10G10B10A2_UNORM: return 10;
			case CqFormat_R10G10B10A2_UINT: return 10;
			case CqFormat_R10G10B10A2_SNORM: return 10;
			case CqFormat_R10G10B10A2_SINT: return 10;
			case CqFormat_B10G10R10A2_UNORM: return 10;
			case CqFormat_B10G10R10A2_UINT: return 10;
			case CqFormat_B10G10R10A2_SNORM: return 10;
			case CqFormat_B10G10R10A2_SINT: return 10;
			case CqFormat_B10G11R11_UFLOAT: return 11;
			case CqFormat_E5B9G9R9_UFLOAT: return 9;
			case CqFormat_R16G16B16_UNORM: return 16;
			case CqFormat_R16G16B16_SNORM: return 16;
			case CqFormat_R16G16B16_UINT: return 16;
			case CqFormat_R16G16B16_SINT: return 16;
			case CqFormat_R16G16B16_SFLOAT: return 16;
			case CqFormat_R16G16B16_SBFLOAT: return 16;
			case CqFormat_R16G16B16A16_UNORM: return 16;
			case CqFormat_R16G16B16A16_SNORM: return 16;
			case CqFormat_R16G16B16A16_UINT: return 16;
			case CqFormat_R16G16B16A16_SINT: return 16;
			case CqFormat_R16G16B16A16_SFLOAT: return 16;
			case CqFormat_R16G16B16A16_SBFLOAT: return 16;
			case CqFormat_R32G32_UINT: return 0;
			case CqFormat_R32G32_SINT: return 0;
			case CqFormat_R32G32_SFLOAT: return 0;
			case CqFormat_R32G32B32_UINT: return 32;
			case CqFormat_R32G32B32_SINT: return 32;
			case CqFormat_R32G32B32_SFLOAT: return 32;
			case CqFormat_R32G32B32A32_UINT: return 32;
			case CqFormat_R32G32B32A32_SINT: return 32;
			case CqFormat_R32G32B32A32_SFLOAT: return 32;
			case CqFormat_R64_UINT: return 0;
			case CqFormat_R64_SINT: return 0;
			case CqFormat_R64_SFLOAT: return 0;
			case CqFormat_R64G64_UINT: return 0;
			case CqFormat_R64G64_SINT: return 0;
			case CqFormat_R64G64_SFLOAT: return 0;
			case CqFormat_R64G64B64_UINT: return 64;
			case CqFormat_R64G64B64_SINT: return 64;
			case CqFormat_R64G64B64_SFLOAT: return 64;
			case CqFormat_R64G64B64A64_UINT: return 64;
			case CqFormat_R64G64B64A64_SINT: return 64;
			case CqFormat_R64G64B64A64_SFLOAT: return 64;
			case CqFormat_D16_UNORM: return 0;
			case CqFormat_X8_D24_UNORM: return 0;
			case CqFormat_D32_SFLOAT: return 0;
			case CqFormat_S8_UINT: return 0;
			case CqFormat_D16_UNORM_S8_UINT: return 0;
			case CqFormat_D24_UNORM_S8_UINT: return 0;
			case CqFormat_D32_SFLOAT_S8_UINT: return 0;
			case CqFormat_DXBC1_RGB_UNORM: return 5;
			case CqFormat_DXBC1_RGB_SRGB: return 5;
			case CqFormat_DXBC1_RGBA_UNORM: return 5;
			case CqFormat_DXBC1_RGBA_SRGB: return 5;
			case CqFormat_DXBC2_UNORM: return 5;
			case CqFormat_DXBC2_SRGB: return 5;
			case CqFormat_DXBC3_UNORM: return 5;
			case CqFormat_DXBC3_SRGB: return 5;
			case CqFormat_DXBC6H_UFLOAT: return 16;
			case CqFormat_DXBC6H_SFLOAT: return 16;
			case CqFormat_ETC2_EAC_R11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11_SNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return 11;
			case CqFormat_CLUT_P4: return 0;
			case CqFormat_CLUT_P4A4: return 0;
			case CqFormat_CLUT_P8: return 0;
			case CqFormat_CLUT_P8A8: return 0;
			default: return 8;
		}
	}	else if(channel == 3) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0;
			case CqFormat_R1_UNORM: return 0;
			case CqFormat_R2_UNORM: return 0;
			case CqFormat_R4_UNORM: return 0;
			case CqFormat_R4G4_UNORM: return 0;
			case CqFormat_G4R4_UNORM: return 0;
			case CqFormat_A8_UNORM: return 0;
			case CqFormat_R8_UNORM: return 0;
			case CqFormat_R8_SNORM: return 0;
			case CqFormat_R8_UINT: return 0;
			case CqFormat_R8_SINT: return 0;
			case CqFormat_R8_SRGB: return 0;
			case CqFormat_B2G3R3_UNORM: return 0;
			case CqFormat_R4G4B4A4_UNORM: return 4;
			case CqFormat_R4G4B4X4_UNORM: return 4;
			case CqFormat_B4G4R4A4_UNORM: return 4;
			case CqFormat_B4G4R4X4_UNORM: return 4;
			case CqFormat_A4R4G4B4_UNORM: return 4;
			case CqFormat_X4R4G4B4_UNORM: return 4;
			case CqFormat_A4B4G4R4_UNORM: return 4;
			case CqFormat_X4B4G4R4_UNORM: return 4;
			case CqFormat_R5G6B5_UNORM: return 0;
			case CqFormat_B5G6R5_UNORM: return 0;
			case CqFormat_R5G5B5A1_UNORM: return 1;
			case CqFormat_B5G5R5A1_UNORM: return 1;
			case CqFormat_A1B5G5R5_UNORM: return 5;
			case CqFormat_A1R5G5B5_UNORM: return 5;
			case CqFormat_R5G5B5X1_UNORM: return 1;
			case CqFormat_B5G5R5X1_UNORM: return 1;
			case CqFormat_X1R5G5B5_UNORM: return 5;
			case CqFormat_X1B5G5R5_UNORM: return 5;
			case CqFormat_R8G8_UNORM: return 0;
			case CqFormat_R8G8_SNORM: return 0;
			case CqFormat_G8R8_UNORM: return 0;
			case CqFormat_G8R8_SNORM: return 0;
			case CqFormat_R8G8_UINT: return 0;
			case CqFormat_R8G8_SINT: return 0;
			case CqFormat_R8G8_SRGB: return 0;
			case CqFormat_R16_UNORM: return 0;
			case CqFormat_R16_SNORM: return 0;
			case CqFormat_R16_UINT: return 0;
			case CqFormat_R16_SINT: return 0;
			case CqFormat_R16_SFLOAT: return 0;
			case CqFormat_R16_SBFLOAT: return 0;
			case CqFormat_R8G8B8_UNORM: return 0;
			case CqFormat_R8G8B8_SNORM: return 0;
			case CqFormat_R8G8B8_UINT: return 0;
			case CqFormat_R8G8B8_SINT: return 0;
			case CqFormat_R8G8B8_SRGB: return 0;
			case CqFormat_B8G8R8_UNORM: return 0;
			case CqFormat_B8G8R8_SNORM: return 0;
			case CqFormat_B8G8R8_UINT: return 0;
			case CqFormat_B8G8R8_SINT: return 0;
			case CqFormat_B8G8R8_SRGB: return 0;
			case CqFormat_R16G16_UNORM: return 0;
			case CqFormat_G16R16_UNORM: return 0;
			case CqFormat_R16G16_SNORM: return 0;
			case CqFormat_G16R16_SNORM: return 0;
			case CqFormat_R16G16_UINT: return 0;
			case CqFormat_R16G16_SINT: return 0;
			case CqFormat_R16G16_SFLOAT: return 0;
			case CqFormat_R16G16_SBFLOAT: return 0;
			case CqFormat_R32_UINT: return 0;
			case CqFormat_R32_SINT: return 0;
			case CqFormat_R32_SFLOAT: return 0;
			case CqFormat_A2R10G10B10_UNORM: return 10;
			case CqFormat_A2R10G10B10_UINT: return 10;
			case CqFormat_A2R10G10B10_SNORM: return 10;
			case CqFormat_A2R10G10B10_SINT: return 10;
			case CqFormat_A2B10G10R10_UNORM: return 10;
			case CqFormat_A2B10G10R10_UINT: return 10;
			case CqFormat_A2B10G10R10_SNORM: return 10;
			case CqFormat_A2B10G10R10_SINT: return 10;
			case CqFormat_R10G10B10A2_UNORM: return 2;
			case CqFormat_R10G10B10A2_UINT: return 2;
			case CqFormat_R10G10B10A2_SNORM: return 2;
			case CqFormat_R10G10B10A2_SINT: return 2;
			case CqFormat_B10G10R10A2_UNORM: return 2;
			case CqFormat_B10G10R10A2_UINT: return 2;
			case CqFormat_B10G10R10A2_SNORM: return 2;
			case CqFormat_B10G10R10A2_SINT: return 2;
			case CqFormat_B10G11R11_UFLOAT: return 0;
			case CqFormat_E5B9G9R9_UFLOAT: return 9;
			case CqFormat_R16G16B16_UNORM: return 0;
			case CqFormat_R16G16B16_SNORM: return 0;
			case CqFormat_R16G16B16_UINT: return 0;
			case CqFormat_R16G16B16_SINT: return 0;
			case CqFormat_R16G16B16_SFLOAT: return 0;
			case CqFormat_R16G16B16_SBFLOAT: return 0;
			case CqFormat_R16G16B16A16_UNORM: return 16;
			case CqFormat_R16G16B16A16_SNORM: return 16;
			case CqFormat_R16G16B16A16_UINT: return 16;
			case CqFormat_R16G16B16A16_SINT: return 16;
			case CqFormat_R16G16B16A16_SFLOAT: return 16;
			case CqFormat_R16G16B16A16_SBFLOAT: return 16;
			case CqFormat_R32G32_UINT: return 0;
			case CqFormat_R32G32_SINT: return 0;
			case CqFormat_R32G32_SFLOAT: return 0;
			case CqFormat_R32G32B32_UINT: return 0;
			case CqFormat_R32G32B32_SINT: return 0;
			case CqFormat_R32G32B32_SFLOAT: return 0;
			case CqFormat_R32G32B32A32_UINT: return 32;
			case CqFormat_R32G32B32A32_SINT: return 32;
			case CqFormat_R32G32B32A32_SFLOAT: return 32;
			case CqFormat_R64_UINT: return 0;
			case CqFormat_R64_SINT: return 0;
			case CqFormat_R64_SFLOAT: return 0;
			case CqFormat_R64G64_UINT: return 0;
			case CqFormat_R64G64_SINT: return 0;
			case CqFormat_R64G64_SFLOAT: return 0;
			case CqFormat_R64G64B64_UINT: return 0;
			case CqFormat_R64G64B64_SINT: return 0;
			case CqFormat_R64G64B64_SFLOAT: return 0;
			case CqFormat_R64G64B64A64_UINT: return 64;
			case CqFormat_R64G64B64A64_SINT: return 64;
			case CqFormat_R64G64B64A64_SFLOAT: return 64;
			case CqFormat_D16_UNORM: return 0;
			case CqFormat_X8_D24_UNORM: return 0;
			case CqFormat_D32_SFLOAT: return 0;
			case CqFormat_S8_UINT: return 0;
			case CqFormat_D16_UNORM_S8_UINT: return 0;
			case CqFormat_D24_UNORM_S8_UINT: return 0;
			case CqFormat_D32_SFLOAT_S8_UINT: return 0;
			case CqFormat_DXBC1_RGB_UNORM: return 0;
			case CqFormat_DXBC1_RGB_SRGB: return 0;
			case CqFormat_DXBC1_RGBA_UNORM: return 0;
			case CqFormat_DXBC1_RGBA_SRGB: return 0;
			case CqFormat_DXBC2_UNORM: return 4;
			case CqFormat_DXBC2_SRGB: return 4;
			case CqFormat_DXBC3_UNORM: return 4;
			case CqFormat_DXBC3_SRGB: return 4;
			case CqFormat_DXBC6H_UFLOAT: return 16;
			case CqFormat_DXBC6H_SFLOAT: return 16;
			case CqFormat_DXBC7_UNORM: return 4;
			case CqFormat_DXBC7_SRGB: return 4;
			case CqFormat_ETC2_EAC_R11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11_SNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return 11;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return 11;
			case CqFormat_CLUT_P4: return 0;
			case CqFormat_CLUT_P4A4: return 0;
			case CqFormat_CLUT_P8: return 0;
			case CqFormat_CLUT_P8A8: return 0;
			default: return 8;
		}
	}
	 CqFormat_ASSERT(false);
	return 0;
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline uint32_t getChannelBitWidthAtPhysical(Format const fmt, PhysicalChannel const channel) {
	if(isHomogenous(fmt) || channel == PhysicalChannel::_0) {
		switch(fmt) {
			case Format::UNDEFINED: return 0;
			case Format::R1_UNORM: return 1;
			case Format::R2_UNORM: return 2;
			case Format::R4_UNORM: return 4;
			case Format::R4G4_UNORM: return 4;
			case Format::G4R4_UNORM: return 4;
			case Format::B2G3R3_UNORM: return 2;
			case Format::R4G4B4A4_UNORM: return 4;
			case Format::R4G4B4X4_UNORM: return 4;
			case Format::B4G4R4A4_UNORM: return 4;
			case Format::B4G4R4X4_UNORM: return 4;
			case Format::A4R4G4B4_UNORM: return 4;
			case Format::X4R4G4B4_UNORM: return 4;
			case Format::A4B4G4R4_UNORM: return 4;
			case Format::X4B4G4R4_UNORM: return 4;
			case Format::R5G6B5_UNORM: return 5;
			case Format::B5G6R5_UNORM: return 5;
			case Format::R5G5B5A1_UNORM: return 5;
			case Format::B5G5R5A1_UNORM: return 5;
			case Format::A1B5G5R5_UNORM: return 1;
			case Format::A1R5G5B5_UNORM: return 1;
			case Format::R5G5B5X1_UNORM: return 5;
			case Format::B5G5R5X1_UNORM: return 5;
			case Format::X1R5G5B5_UNORM: return 1;
			case Format::X1B5G5R5_UNORM: return 1;
			case Format::B2G3R3A8_UNORM: return 2;
			case Format::R16_UNORM: return 16;
			case Format::R16_SNORM: return 16;
			case Format::R16_UINT: return 16;
			case Format::R16_SINT: return 16;
			case Format::R16_SFLOAT: return 16;
			case Format::R16_SBFLOAT: return 16;
			case Format::R16G16_UNORM: return 16;
			case Format::G16R16_UNORM: return 16;
			case Format::R16G16_SNORM: return 16;
			case Format::G16R16_SNORM: return 16;
			case Format::R16G16_UINT: return 16;
			case Format::R16G16_SINT: return 16;
			case Format::R16G16_SFLOAT: return 16;
			case Format::R16G16_SBFLOAT: return 16;
			case Format::R32_UINT: return 32;
			case Format::R32_SINT: return 32;
			case Format::R32_SFLOAT: return 32;
			case Format::A2R10G10B10_UNORM: return 2;
			case Format::A2R10G10B10_UINT: return 2;
			case Format::A2R10G10B10_SNORM: return 2;
			case Format::A2R10G10B10_SINT: return 2;
			case Format::A2B10G10R10_UNORM: return 2;
			case Format::A2B10G10R10_UINT: return 2;
			case Format::A2B10G10R10_SNORM: return 2;
			case Format::A2B10G10R10_SINT: return 2;
			case Format::R10G10B10A2_UNORM: return 10;
			case Format::R10G10B10A2_UINT: return 10;
			case Format::R10G10B10A2_SNORM: return 10;
			case Format::R10G10B10A2_SINT: return 10;
			case Format::B10G10R10A2_UNORM: return 10;
			case Format::B10G10R10A2_UINT: return 10;
			case Format::B10G10R10A2_SNORM: return 10;
			case Format::B10G10R10A2_SINT: return 10;
			case Format::B10G11R11_UFLOAT: return 10;
			case Format::E5B9G9R9_UFLOAT: return 5;
			case Format::R16G16B16_UNORM: return 16;
			case Format::R16G16B16_SNORM: return 16;
			case Format::R16G16B16_UINT: return 16;
			case Format::R16G16B16_SINT: return 16;
			case Format::R16G16B16_SFLOAT: return 16;
			case Format::R16G16B16_SBFLOAT: return 16;
			case Format::R16G16B16A16_UNORM: return 16;
			case Format::R16G16B16A16_SNORM: return 16;
			case Format::R16G16B16A16_UINT: return 16;
			case Format::R16G16B16A16_SINT: return 16;
			case Format::R16G16B16A16_SFLOAT: return 16;
			case Format::R16G16B16A16_SBFLOAT: return 16;
			case Format::R32G32_UINT: return 32;
			case Format::R32G32_SINT: return 32;
			case Format::R32G32_SFLOAT: return 32;
			case Format::R32G32B32_UINT: return 32;
			case Format::R32G32B32_SINT: return 32;
			case Format::R32G32B32_SFLOAT: return 32;
			case Format::R32G32B32A32_UINT: return 32;
			case Format::R32G32B32A32_SINT: return 32;
			case Format::R32G32B32A32_SFLOAT: return 32;
			case Format::R64_UINT: return 64;
			case Format::R64_SINT: return 64;
			case Format::R64_SFLOAT: return 64;
			case Format::R64G64_UINT: return 64;
			case Format::R64G64_SINT: return 64;
			case Format::R64G64_SFLOAT: return 64;
			case Format::R64G64B64_UINT: return 64;
			case Format::R64G64B64_SINT: return 64;
			case Format::R64G64B64_SFLOAT: return 64;
			case Format::R64G64B64A64_UINT: return 64;
			case Format::R64G64B64A64_SINT: return 64;
			case Format::R64G64B64A64_SFLOAT: return 64;
			case Format::D16_UNORM: return 16;
			case Format::D32_SFLOAT: return 32;
			case Format::D16_UNORM_S8_UINT: return 16;
			case Format::D24_UNORM_S8_UINT: return 24;
			case Format::D32_SFLOAT_S8_UINT: return 32;
			case Format::DXBC1_RGB_UNORM: return 5;
			case Format::DXBC1_RGB_SRGB: return 5;
			case Format::DXBC1_RGBA_UNORM: return 5;
			case Format::DXBC1_RGBA_SRGB: return 5;
			case Format::DXBC2_UNORM: return 5;
			case Format::DXBC2_SRGB: return 5;
			case Format::DXBC3_UNORM: return 5;
			case Format::DXBC3_SRGB: return 5;
			case Format::DXBC6H_UFLOAT: return 16;
			case Format::DXBC6H_SFLOAT: return 16;
			case Format::ETC2_EAC_R11_UNORM: return 11;
			case Format::ETC2_EAC_R11_SNORM: return 11;
			case Format::ETC2_EAC_R11G11_UNORM: return 11;
			case Format::ETC2_EAC_R11G11_SNORM: return 11;
			case Format::CLUT_P4: return 4;
			case Format::CLUT_P4A4: return 4;
			default: return 8;
		}
	}	else if(channel == PhysicalChannel::_1) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0;
			case Format::R1_UNORM: return 0;
			case Format::R2_UNORM: return 0;
			case Format::R4_UNORM: return 0;
			case Format::R4G4_UNORM: return 4;
			case Format::G4R4_UNORM: return 4;
			case Format::A8_UNORM: return 0;
			case Format::R8_UNORM: return 0;
			case Format::R8_SNORM: return 0;
			case Format::R8_UINT: return 0;
			case Format::R8_SINT: return 0;
			case Format::R8_SRGB: return 0;
			case Format::B2G3R3_UNORM: return 3;
			case Format::R4G4B4A4_UNORM: return 4;
			case Format::R4G4B4X4_UNORM: return 4;
			case Format::B4G4R4A4_UNORM: return 4;
			case Format::B4G4R4X4_UNORM: return 4;
			case Format::A4R4G4B4_UNORM: return 4;
			case Format::X4R4G4B4_UNORM: return 4;
			case Format::A4B4G4R4_UNORM: return 4;
			case Format::X4B4G4R4_UNORM: return 4;
			case Format::R5G6B5_UNORM: return 6;
			case Format::B5G6R5_UNORM: return 6;
			case Format::R5G5B5A1_UNORM: return 5;
			case Format::B5G5R5A1_UNORM: return 5;
			case Format::A1B5G5R5_UNORM: return 5;
			case Format::A1R5G5B5_UNORM: return 5;
			case Format::R5G5B5X1_UNORM: return 5;
			case Format::B5G5R5X1_UNORM: return 5;
			case Format::X1R5G5B5_UNORM: return 5;
			case Format::X1B5G5R5_UNORM: return 5;
			case Format::B2G3R3A8_UNORM: return 3;
			case Format::R16_UNORM: return 0;
			case Format::R16_SNORM: return 0;
			case Format::R16_UINT: return 0;
			case Format::R16_SINT: return 0;
			case Format::R16_SFLOAT: return 0;
			case Format::R16_SBFLOAT: return 0;
			case Format::R16G16_UNORM: return 16;
			case Format::G16R16_UNORM: return 16;
			case Format::R16G16_SNORM: return 16;
			case Format::G16R16_SNORM: return 16;
			case Format::R16G16_UINT: return 16;
			case Format::R16G16_SINT: return 16;
			case Format::R16G16_SFLOAT: return 16;
			case Format::R16G16_SBFLOAT: return 16;
			case Format::R32_UINT: return 0;
			case Format::R32_SINT: return 0;
			case Format::R32_SFLOAT: return 0;
			case Format::A2R10G10B10_UNORM: return 10;
			case Format::A2R10G10B10_UINT: return 10;
			case Format::A2R10G10B10_SNORM: return 10;
			case Format::A2R10G10B10_SINT: return 10;
			case Format::A2B10G10R10_UNORM: return 10;
			case Format::A2B10G10R10_UINT: return 10;
			case Format::A2B10G10R10_SNORM: return 10;
			case Format::A2B10G10R10_SINT: return 10;
			case Format::R10G10B10A2_UNORM: return 10;
			case Format::R10G10B10A2_UINT: return 10;
			case Format::R10G10B10A2_SNORM: return 10;
			case Format::R10G10B10A2_SINT: return 10;
			case Format::B10G10R10A2_UNORM: return 10;
			case Format::B10G10R10A2_UINT: return 10;
			case Format::B10G10R10A2_SNORM: return 10;
			case Format::B10G10R10A2_SINT: return 10;
			case Format::B10G11R11_UFLOAT: return 11;
			case Format::E5B9G9R9_UFLOAT: return 9;
			case Format::R16G16B16_UNORM: return 16;
			case Format::R16G16B16_SNORM: return 16;
			case Format::R16G16B16_UINT: return 16;
			case Format::R16G16B16_SINT: return 16;
			case Format::R16G16B16_SFLOAT: return 16;
			case Format::R16G16B16_SBFLOAT: return 16;
			case Format::R16G16B16A16_UNORM: return 16;
			case Format::R16G16B16A16_SNORM: return 16;
			case Format::R16G16B16A16_UINT: return 16;
			case Format::R16G16B16A16_SINT: return 16;
			case Format::R16G16B16A16_SFLOAT: return 16;
			case Format::R16G16B16A16_SBFLOAT: return 16;
			case Format::R32G32_UINT: return 32;
			case Format::R32G32_SINT: return 32;
			case Format::R32G32_SFLOAT: return 32;
			case Format::R32G32B32_UINT: return 32;
			case Format::R32G32B32_SINT: return 32;
			case Format::R32G32B32_SFLOAT: return 32;
			case Format::R32G32B32A32_UINT: return 32;
			case Format::R32G32B32A32_SINT: return 32;
			case Format::R32G32B32A32_SFLOAT: return 32;
			case Format::R64_UINT: return 0;
			case Format::R64_SINT: return 0;
			case Format::R64_SFLOAT: return 0;
			case Format::R64G64_UINT: return 64;
			case Format::R64G64_SINT: return 64;
			case Format::R64G64_SFLOAT: return 64;
			case Format::R64G64B64_UINT: return 64;
			case Format::R64G64B64_SINT: return 64;
			case Format::R64G64B64_SFLOAT: return 64;
			case Format::R64G64B64A64_UINT: return 64;
			case Format::R64G64B64A64_SINT: return 64;
			case Format::R64G64B64A64_SFLOAT: return 64;
			case Format::D16_UNORM: return 0;
			case Format::X8_D24_UNORM: return 24;
			case Format::D32_SFLOAT: return 0;
			case Format::S8_UINT: return 0;
			case Format::DXBC1_RGB_UNORM: return 6;
			case Format::DXBC1_RGB_SRGB: return 6;
			case Format::DXBC1_RGBA_UNORM: return 6;
			case Format::DXBC1_RGBA_SRGB: return 6;
			case Format::DXBC2_UNORM: return 6;
			case Format::DXBC2_SRGB: return 6;
			case Format::DXBC3_UNORM: return 6;
			case Format::DXBC3_SRGB: return 6;
			case Format::DXBC6H_UFLOAT: return 16;
			case Format::DXBC6H_SFLOAT: return 16;
			case Format::ETC2_EAC_R11_UNORM: return 11;
			case Format::ETC2_EAC_R11_SNORM: return 11;
			case Format::ETC2_EAC_R11G11_UNORM: return 11;
			case Format::ETC2_EAC_R11G11_SNORM: return 11;
			case Format::CLUT_P4: return 0;
			case Format::CLUT_P4A4: return 4;
			case Format::CLUT_P8: return 0;
			default: return 8;
		}
	}	else if(channel == PhysicalChannel::_2) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0;
			case Format::R1_UNORM: return 0;
			case Format::R2_UNORM: return 0;
			case Format::R4_UNORM: return 0;
			case Format::R4G4_UNORM: return 0;
			case Format::G4R4_UNORM: return 0;
			case Format::A8_UNORM: return 0;
			case Format::R8_UNORM: return 0;
			case Format::R8_SNORM: return 0;
			case Format::R8_UINT: return 0;
			case Format::R8_SINT: return 0;
			case Format::R8_SRGB: return 0;
			case Format::B2G3R3_UNORM: return 3;
			case Format::R4G4B4A4_UNORM: return 4;
			case Format::R4G4B4X4_UNORM: return 4;
			case Format::B4G4R4A4_UNORM: return 4;
			case Format::B4G4R4X4_UNORM: return 4;
			case Format::A4R4G4B4_UNORM: return 4;
			case Format::X4R4G4B4_UNORM: return 4;
			case Format::A4B4G4R4_UNORM: return 4;
			case Format::X4B4G4R4_UNORM: return 4;
			case Format::R5G6B5_UNORM: return 5;
			case Format::B5G6R5_UNORM: return 5;
			case Format::R5G5B5A1_UNORM: return 5;
			case Format::B5G5R5A1_UNORM: return 5;
			case Format::A1B5G5R5_UNORM: return 5;
			case Format::A1R5G5B5_UNORM: return 5;
			case Format::R5G5B5X1_UNORM: return 5;
			case Format::B5G5R5X1_UNORM: return 5;
			case Format::X1R5G5B5_UNORM: return 5;
			case Format::X1B5G5R5_UNORM: return 5;
			case Format::B2G3R3A8_UNORM: return 3;
			case Format::R8G8_UNORM: return 0;
			case Format::R8G8_SNORM: return 0;
			case Format::G8R8_UNORM: return 0;
			case Format::G8R8_SNORM: return 0;
			case Format::R8G8_UINT: return 0;
			case Format::R8G8_SINT: return 0;
			case Format::R8G8_SRGB: return 0;
			case Format::R16_UNORM: return 0;
			case Format::R16_SNORM: return 0;
			case Format::R16_UINT: return 0;
			case Format::R16_SINT: return 0;
			case Format::R16_SFLOAT: return 0;
			case Format::R16_SBFLOAT: return 0;
			case Format::R16G16_UNORM: return 0;
			case Format::G16R16_UNORM: return 0;
			case Format::R16G16_SNORM: return 0;
			case Format::G16R16_SNORM: return 0;
			case Format::R16G16_UINT: return 0;
			case Format::R16G16_SINT: return 0;
			case Format::R16G16_SFLOAT: return 0;
			case Format::R16G16_SBFLOAT: return 0;
			case Format::R32_UINT: return 0;
			case Format::R32_SINT: return 0;
			case Format::R32_SFLOAT: return 0;
			case Format::A2R10G10B10_UNORM: return 10;
			case Format::A2R10G10B10_UINT: return 10;
			case Format::A2R10G10B10_SNORM: return 10;
			case Format::A2R10G10B10_SINT: return 10;
			case Format::A2B10G10R10_UNORM: return 10;
			case Format::A2B10G10R10_UINT: return 10;
			case Format::A2B10G10R10_SNORM: return 10;
			case Format::A2B10G10R10_SINT: return 10;
			case Format::R10G10B10A2_UNORM: return 10;
			case Format::R10G10B10A2_UINT: return 10;
			case Format::R10G10B10A2_SNORM: return 10;
			case Format::R10G10B10A2_SINT: return 10;
			case Format::B10G10R10A2_UNORM: return 10;
			case Format::B10G10R10A2_UINT: return 10;
			case Format::B10G10R10A2_SNORM: return 10;
			case Format::B10G10R10A2_SINT: return 10;
			case Format::B10G11R11_UFLOAT: return 11;
			case Format::E5B9G9R9_UFLOAT: return 9;
			case Format::R16G16B16_UNORM: return 16;
			case Format::R16G16B16_SNORM: return 16;
			case Format::R16G16B16_UINT: return 16;
			case Format::R16G16B16_SINT: return 16;
			case Format::R16G16B16_SFLOAT: return 16;
			case Format::R16G16B16_SBFLOAT: return 16;
			case Format::R16G16B16A16_UNORM: return 16;
			case Format::R16G16B16A16_SNORM: return 16;
			case Format::R16G16B16A16_UINT: return 16;
			case Format::R16G16B16A16_SINT: return 16;
			case Format::R16G16B16A16_SFLOAT: return 16;
			case Format::R16G16B16A16_SBFLOAT: return 16;
			case Format::R32G32_UINT: return 0;
			case Format::R32G32_SINT: return 0;
			case Format::R32G32_SFLOAT: return 0;
			case Format::R32G32B32_UINT: return 32;
			case Format::R32G32B32_SINT: return 32;
			case Format::R32G32B32_SFLOAT: return 32;
			case Format::R32G32B32A32_UINT: return 32;
			case Format::R32G32B32A32_SINT: return 32;
			case Format::R32G32B32A32_SFLOAT: return 32;
			case Format::R64_UINT: return 0;
			case Format::R64_SINT: return 0;
			case Format::R64_SFLOAT: return 0;
			case Format::R64G64_UINT: return 0;
			case Format::R64G64_SINT: return 0;
			case Format::R64G64_SFLOAT: return 0;
			case Format::R64G64B64_UINT: return 64;
			case Format::R64G64B64_SINT: return 64;
			case Format::R64G64B64_SFLOAT: return 64;
			case Format::R64G64B64A64_UINT: return 64;
			case Format::R64G64B64A64_SINT: return 64;
			case Format::R64G64B64A64_SFLOAT: return 64;
			case Format::D16_UNORM: return 0;
			case Format::X8_D24_UNORM: return 0;
			case Format::D32_SFLOAT: return 0;
			case Format::S8_UINT: return 0;
			case Format::D16_UNORM_S8_UINT: return 0;
			case Format::D24_UNORM_S8_UINT: return 0;
			case Format::D32_SFLOAT_S8_UINT: return 0;
			case Format::DXBC1_RGB_UNORM: return 5;
			case Format::DXBC1_RGB_SRGB: return 5;
			case Format::DXBC1_RGBA_UNORM: return 5;
			case Format::DXBC1_RGBA_SRGB: return 5;
			case Format::DXBC2_UNORM: return 5;
			case Format::DXBC2_SRGB: return 5;
			case Format::DXBC3_UNORM: return 5;
			case Format::DXBC3_SRGB: return 5;
			case Format::DXBC6H_UFLOAT: return 16;
			case Format::DXBC6H_SFLOAT: return 16;
			case Format::ETC2_EAC_R11_UNORM: return 11;
			case Format::ETC2_EAC_R11_SNORM: return 11;
			case Format::ETC2_EAC_R11G11_UNORM: return 11;
			case Format::ETC2_EAC_R11G11_SNORM: return 11;
			case Format::CLUT_P4: return 0;
			case Format::CLUT_P4A4: return 0;
			case Format::CLUT_P8: return 0;
			case Format::CLUT_P8A8: return 0;
			default: return 8;
		}
	}	else if(channel == PhysicalChannel::_3) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0;
			case Format::R1_UNORM: return 0;
			case Format::R2_UNORM: return 0;
			case Format::R4_UNORM: return 0;
			case Format::R4G4_UNORM: return 0;
			case Format::G4R4_UNORM: return 0;
			case Format::A8_UNORM: return 0;
			case Format::R8_UNORM: return 0;
			case Format::R8_SNORM: return 0;
			case Format::R8_UINT: return 0;
			case Format::R8_SINT: return 0;
			case Format::R8_SRGB: return 0;
			case Format::B2G3R3_UNORM: return 0;
			case Format::R4G4B4A4_UNORM: return 4;
			case Format::R4G4B4X4_UNORM: return 4;
			case Format::B4G4R4A4_UNORM: return 4;
			case Format::B4G4R4X4_UNORM: return 4;
			case Format::A4R4G4B4_UNORM: return 4;
			case Format::X4R4G4B4_UNORM: return 4;
			case Format::A4B4G4R4_UNORM: return 4;
			case Format::X4B4G4R4_UNORM: return 4;
			case Format::R5G6B5_UNORM: return 0;
			case Format::B5G6R5_UNORM: return 0;
			case Format::R5G5B5A1_UNORM: return 1;
			case Format::B5G5R5A1_UNORM: return 1;
			case Format::A1B5G5R5_UNORM: return 5;
			case Format::A1R5G5B5_UNORM: return 5;
			case Format::R5G5B5X1_UNORM: return 1;
			case Format::B5G5R5X1_UNORM: return 1;
			case Format::X1R5G5B5_UNORM: return 5;
			case Format::X1B5G5R5_UNORM: return 5;
			case Format::R8G8_UNORM: return 0;
			case Format::R8G8_SNORM: return 0;
			case Format::G8R8_UNORM: return 0;
			case Format::G8R8_SNORM: return 0;
			case Format::R8G8_UINT: return 0;
			case Format::R8G8_SINT: return 0;
			case Format::R8G8_SRGB: return 0;
			case Format::R16_UNORM: return 0;
			case Format::R16_SNORM: return 0;
			case Format::R16_UINT: return 0;
			case Format::R16_SINT: return 0;
			case Format::R16_SFLOAT: return 0;
			case Format::R16_SBFLOAT: return 0;
			case Format::R8G8B8_UNORM: return 0;
			case Format::R8G8B8_SNORM: return 0;
			case Format::R8G8B8_UINT: return 0;
			case Format::R8G8B8_SINT: return 0;
			case Format::R8G8B8_SRGB: return 0;
			case Format::B8G8R8_UNORM: return 0;
			case Format::B8G8R8_SNORM: return 0;
			case Format::B8G8R8_UINT: return 0;
			case Format::B8G8R8_SINT: return 0;
			case Format::B8G8R8_SRGB: return 0;
			case Format::R16G16_UNORM: return 0;
			case Format::G16R16_UNORM: return 0;
			case Format::R16G16_SNORM: return 0;
			case Format::G16R16_SNORM: return 0;
			case Format::R16G16_UINT: return 0;
			case Format::R16G16_SINT: return 0;
			case Format::R16G16_SFLOAT: return 0;
			case Format::R16G16_SBFLOAT: return 0;
			case Format::R32_UINT: return 0;
			case Format::R32_SINT: return 0;
			case Format::R32_SFLOAT: return 0;
			case Format::A2R10G10B10_UNORM: return 10;
			case Format::A2R10G10B10_UINT: return 10;
			case Format::A2R10G10B10_SNORM: return 10;
			case Format::A2R10G10B10_SINT: return 10;
			case Format::A2B10G10R10_UNORM: return 10;
			case Format::A2B10G10R10_UINT: return 10;
			case Format::A2B10G10R10_SNORM: return 10;
			case Format::A2B10G10R10_SINT: return 10;
			case Format::R10G10B10A2_UNORM: return 2;
			case Format::R10G10B10A2_UINT: return 2;
			case Format::R10G10B10A2_SNORM: return 2;
			case Format::R10G10B10A2_SINT: return 2;
			case Format::B10G10R10A2_UNORM: return 2;
			case Format::B10G10R10A2_UINT: return 2;
			case Format::B10G10R10A2_SNORM: return 2;
			case Format::B10G10R10A2_SINT: return 2;
			case Format::B10G11R11_UFLOAT: return 0;
			case Format::E5B9G9R9_UFLOAT: return 9;
			case Format::R16G16B16_UNORM: return 0;
			case Format::R16G16B16_SNORM: return 0;
			case Format::R16G16B16_UINT: return 0;
			case Format::R16G16B16_SINT: return 0;
			case Format::R16G16B16_SFLOAT: return 0;
			case Format::R16G16B16_SBFLOAT: return 0;
			case Format::R16G16B16A16_UNORM: return 16;
			case Format::R16G16B16A16_SNORM: return 16;
			case Format::R16G16B16A16_UINT: return 16;
			case Format::R16G16B16A16_SINT: return 16;
			case Format::R16G16B16A16_SFLOAT: return 16;
			case Format::R16G16B16A16_SBFLOAT: return 16;
			case Format::R32G32_UINT: return 0;
			case Format::R32G32_SINT: return 0;
			case Format::R32G32_SFLOAT: return 0;
			case Format::R32G32B32_UINT: return 0;
			case Format::R32G32B32_SINT: return 0;
			case Format::R32G32B32_SFLOAT: return 0;
			case Format::R32G32B32A32_UINT: return 32;
			case Format::R32G32B32A32_SINT: return 32;
			case Format::R32G32B32A32_SFLOAT: return 32;
			case Format::R64_UINT: return 0;
			case Format::R64_SINT: return 0;
			case Format::R64_SFLOAT: return 0;
			case Format::R64G64_UINT: return 0;
			case Format::R64G64_SINT: return 0;
			case Format::R64G64_SFLOAT: return 0;
			case Format::R64G64B64_UINT: return 0;
			case Format::R64G64B64_SINT: return 0;
			case Format::R64G64B64_SFLOAT: return 0;
			case Format::R64G64B64A64_UINT: return 64;
			case Format::R64G64B64A64_SINT: return 64;
			case Format::R64G64B64A64_SFLOAT: return 64;
			case Format::D16_UNORM: return 0;
			case Format::X8_D24_UNORM: return 0;
			case Format::D32_SFLOAT: return 0;
			case Format::S8_UINT: return 0;
			case Format::D16_UNORM_S8_UINT: return 0;
			case Format::D24_UNORM_S8_UINT: return 0;
			case Format::D32_SFLOAT_S8_UINT: return 0;
			case Format::DXBC1_RGB_UNORM: return 0;
			case Format::DXBC1_RGB_SRGB: return 0;
			case Format::DXBC1_RGBA_UNORM: return 0;
			case Format::DXBC1_RGBA_SRGB: return 0;
			case Format::DXBC2_UNORM: return 4;
			case Format::DXBC2_SRGB: return 4;
			case Format::DXBC3_UNORM: return 4;
			case Format::DXBC3_SRGB: return 4;
			case Format::DXBC6H_UFLOAT: return 16;
			case Format::DXBC6H_SFLOAT: return 16;
			case Format::DXBC7_UNORM: return 4;
			case Format::DXBC7_SRGB: return 4;
			case Format::ETC2_EAC_R11_UNORM: return 11;
			case Format::ETC2_EAC_R11_SNORM: return 11;
			case Format::ETC2_EAC_R11G11_UNORM: return 11;
			case Format::ETC2_EAC_R11G11_SNORM: return 11;
			case Format::CLUT_P4: return 0;
			case Format::CLUT_P4A4: return 0;
			case Format::CLUT_P8: return 0;
			case Format::CLUT_P8A8: return 0;
			default: return 8;
		}
	}
	 CqFormat_ASSERT(false);
	return 0;
}
}

CQ_FORMAT_CONSTEXPR inline double CqFormat_MinAtPhysical(CqFormat const fmt, uint32_t const channel) {
	if(CqFormat_IsHomogenous(fmt) || channel == 0) {
		switch(fmt) {
			case CqFormat_R8_SNORM: return -1.000000;
			case CqFormat_R8_SINT: return -128.000000;
			case CqFormat_R8G8_SNORM: return -1.000000;
			case CqFormat_G8R8_SNORM: return -1.000000;
			case CqFormat_R8G8_SINT: return -128.000000;
			case CqFormat_R16_SNORM: return -1.000000;
			case CqFormat_R16_SINT: return -32768.000000;
			case CqFormat_R16_SFLOAT: return -65504.000000;
			case CqFormat_R8G8B8_SNORM: return -1.000000;
			case CqFormat_R8G8B8_SINT: return -128.000000;
			case CqFormat_B8G8R8_SNORM: return -1.000000;
			case CqFormat_B8G8R8_SINT: return -128.000000;
			case CqFormat_R8G8B8A8_SNORM: return -1.000000;
			case CqFormat_R8G8B8A8_SINT: return -128.000000;
			case CqFormat_B8G8R8A8_SNORM: return -1.000000;
			case CqFormat_B8G8R8A8_SINT: return -128.000000;
			case CqFormat_R16G16_SNORM: return -1.000000;
			case CqFormat_G16R16_SNORM: return -1.000000;
			case CqFormat_R16G16_SINT: return -32768.000000;
			case CqFormat_R16G16_SFLOAT: return -65504.000000;
			case CqFormat_R32_SINT: return -2147483648.000000;
			case CqFormat_R32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_A2R10G10B10_SNORM: return -1.000000;
			case CqFormat_A2R10G10B10_SINT: return -2.000000;
			case CqFormat_A2B10G10R10_SNORM: return -1.000000;
			case CqFormat_A2B10G10R10_SINT: return -2.000000;
			case CqFormat_R10G10B10A2_SNORM: return -1.000000;
			case CqFormat_R10G10B10A2_SINT: return -512.000000;
			case CqFormat_B10G10R10A2_SNORM: return -1.000000;
			case CqFormat_B10G10R10A2_SINT: return -512.000000;
			case CqFormat_R16G16B16_SNORM: return -1.000000;
			case CqFormat_R16G16B16_SINT: return -32768.000000;
			case CqFormat_R16G16B16_SFLOAT: return -65504.000000;
			case CqFormat_R16G16B16A16_SNORM: return -1.000000;
			case CqFormat_R16G16B16A16_SINT: return -32768.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return -65504.000000;
			case CqFormat_R32G32_SINT: return -2147483648.000000;
			case CqFormat_R32G32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_D32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_D32_SFLOAT_S8_UINT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_DXBC4_SNORM: return -1.000000;
			case CqFormat_DXBC5_SNORM: return -1.000000;
			case CqFormat_DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_ETC2_EAC_R11_SNORM: return -1.000000;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == 1) {
		switch(fmt) { 
			case CqFormat_R8G8_SNORM: return -1.000000;
			case CqFormat_G8R8_SNORM: return -1.000000;
			case CqFormat_R8G8_SINT: return -128.000000;
			case CqFormat_R8G8B8_SNORM: return -1.000000;
			case CqFormat_R8G8B8_SINT: return -128.000000;
			case CqFormat_B8G8R8_SNORM: return -1.000000;
			case CqFormat_B8G8R8_SINT: return -128.000000;
			case CqFormat_R8G8B8A8_SNORM: return -1.000000;
			case CqFormat_R8G8B8A8_SINT: return -128.000000;
			case CqFormat_B8G8R8A8_SNORM: return -1.000000;
			case CqFormat_B8G8R8A8_SINT: return -128.000000;
			case CqFormat_R16G16_SNORM: return -1.000000;
			case CqFormat_G16R16_SNORM: return -1.000000;
			case CqFormat_R16G16_SINT: return -32768.000000;
			case CqFormat_R16G16_SFLOAT: return -65504.000000;
			case CqFormat_A2R10G10B10_SNORM: return -1.000000;
			case CqFormat_A2R10G10B10_SINT: return -512.000000;
			case CqFormat_A2B10G10R10_SNORM: return -1.000000;
			case CqFormat_A2B10G10R10_SINT: return -512.000000;
			case CqFormat_R10G10B10A2_SNORM: return -1.000000;
			case CqFormat_R10G10B10A2_SINT: return -512.000000;
			case CqFormat_B10G10R10A2_SNORM: return -1.000000;
			case CqFormat_B10G10R10A2_SINT: return -512.000000;
			case CqFormat_R16G16B16_SNORM: return -1.000000;
			case CqFormat_R16G16B16_SINT: return -32768.000000;
			case CqFormat_R16G16B16_SFLOAT: return -65504.000000;
			case CqFormat_R16G16B16A16_SNORM: return -1.000000;
			case CqFormat_R16G16B16A16_SINT: return -32768.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return -65504.000000;
			case CqFormat_R32G32_SINT: return -2147483648.000000;
			case CqFormat_R32G32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R64G64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_DXBC4_SNORM: return -1.000000;
			case CqFormat_DXBC5_SNORM: return -1.000000;
			case CqFormat_DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_ETC2_EAC_R11_SNORM: return -1.000000;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == 2) {
		switch(fmt) { 
			case CqFormat_R8G8B8_SNORM: return -1.000000;
			case CqFormat_R8G8B8_SINT: return -128.000000;
			case CqFormat_B8G8R8_SNORM: return -1.000000;
			case CqFormat_B8G8R8_SINT: return -128.000000;
			case CqFormat_R8G8B8A8_SNORM: return -1.000000;
			case CqFormat_R8G8B8A8_SINT: return -128.000000;
			case CqFormat_B8G8R8A8_SNORM: return -1.000000;
			case CqFormat_B8G8R8A8_SINT: return -128.000000;
			case CqFormat_A2R10G10B10_SNORM: return -1.000000;
			case CqFormat_A2R10G10B10_SINT: return -512.000000;
			case CqFormat_A2B10G10R10_SNORM: return -1.000000;
			case CqFormat_A2B10G10R10_SINT: return -512.000000;
			case CqFormat_R10G10B10A2_SNORM: return -1.000000;
			case CqFormat_R10G10B10A2_SINT: return -512.000000;
			case CqFormat_B10G10R10A2_SNORM: return -1.000000;
			case CqFormat_B10G10R10A2_SINT: return -512.000000;
			case CqFormat_R16G16B16_SNORM: return -1.000000;
			case CqFormat_R16G16B16_SINT: return -32768.000000;
			case CqFormat_R16G16B16_SFLOAT: return -65504.000000;
			case CqFormat_R16G16B16A16_SNORM: return -1.000000;
			case CqFormat_R16G16B16A16_SINT: return -32768.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return -65504.000000;
			case CqFormat_R32G32B32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R64G64B64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_DXBC4_SNORM: return -1.000000;
			case CqFormat_DXBC5_SNORM: return -1.000000;
			case CqFormat_DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_ETC2_EAC_R11_SNORM: return -1.000000;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == 3) {
		switch(fmt) { 
			case CqFormat_R8G8B8A8_SNORM: return -1.000000;
			case CqFormat_R8G8B8A8_SINT: return -128.000000;
			case CqFormat_B8G8R8A8_SNORM: return -1.000000;
			case CqFormat_B8G8R8A8_SINT: return -128.000000;
			case CqFormat_A2R10G10B10_SNORM: return -1.000000;
			case CqFormat_A2R10G10B10_SINT: return -512.000000;
			case CqFormat_A2B10G10R10_SNORM: return -1.000000;
			case CqFormat_A2B10G10R10_SINT: return -512.000000;
			case CqFormat_R10G10B10A2_SNORM: return -1.000000;
			case CqFormat_R10G10B10A2_SINT: return -2.000000;
			case CqFormat_B10G10R10A2_SNORM: return -1.000000;
			case CqFormat_B10G10R10A2_SINT: return -2.000000;
			case CqFormat_R16G16B16A16_SNORM: return -1.000000;
			case CqFormat_R16G16B16A16_SINT: return -32768.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return -65504.000000;
			case CqFormat_R32G32B32A32_SINT: return -2147483648.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_R64G64B64A64_SINT: return -9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_DXBC4_SNORM: return -1.000000;
			case CqFormat_DXBC5_SNORM: return -1.000000;
			case CqFormat_DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case CqFormat_ETC2_EAC_R11_SNORM: return -1.000000;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}
	 CqFormat_ASSERT(false);
	return 0.0;
}

CQ_FORMAT_CONSTEXPR inline double CqFormat_MaxAtPhysical(CqFormat const fmt, uint32_t const channel) {
	if(CqFormat_IsHomogenous(fmt) || channel == 0) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return 0.000000;
			case CqFormat_R8_UINT: return 255.000000;
			case CqFormat_R8_SINT: return 127.000000;
			case CqFormat_X4R4G4B4_UNORM: return 15.000000;
			case CqFormat_X4B4G4R4_UNORM: return 15.000000;
			case CqFormat_R8G8_UINT: return 255.000000;
			case CqFormat_R8G8_SINT: return 127.000000;
			case CqFormat_R16_UINT: return 65535.000000;
			case CqFormat_R16_SINT: return 32767.000000;
			case CqFormat_R16_SFLOAT: return 65504.000000;
			case CqFormat_R16_SBFLOAT: return 0.000000;
			case CqFormat_R8G8B8_UINT: return 255.000000;
			case CqFormat_R8G8B8_SINT: return 127.000000;
			case CqFormat_B8G8R8_UINT: return 255.000000;
			case CqFormat_B8G8R8_SINT: return 127.000000;
			case CqFormat_R8G8B8A8_UINT: return 255.000000;
			case CqFormat_R8G8B8A8_SINT: return 127.000000;
			case CqFormat_B8G8R8A8_UINT: return 255.000000;
			case CqFormat_B8G8R8A8_SINT: return 127.000000;
			case CqFormat_R16G16_UINT: return 65535.000000;
			case CqFormat_R16G16_SINT: return 32767.000000;
			case CqFormat_R16G16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16_SBFLOAT: return 0.000000;
			case CqFormat_R32_UINT: return 4294967295.000000;
			case CqFormat_R32_SINT: return 2147483647.000000;
			case CqFormat_R32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_A2R10G10B10_UINT: return 3.000000;
			case CqFormat_A2B10G10R10_UINT: return 3.000000;
			case CqFormat_R10G10B10A2_UINT: return 1023.000000;
			case CqFormat_R10G10B10A2_SINT: return 511.000000;
			case CqFormat_B10G10R10A2_UINT: return 1023.000000;
			case CqFormat_B10G10R10A2_SINT: return 511.000000;
			case CqFormat_B10G11R11_UFLOAT: return 65000.000000;
			case CqFormat_E5B9G9R9_UFLOAT: return 31.000000;
			case CqFormat_R16G16B16_UINT: return 65535.000000;
			case CqFormat_R16G16B16_SINT: return 32767.000000;
			case CqFormat_R16G16B16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16_SBFLOAT: return 0.000000;
			case CqFormat_R16G16B16A16_UINT: return 65535.000000;
			case CqFormat_R16G16B16A16_SINT: return 32767.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16A16_SBFLOAT: return 0.000000;
			case CqFormat_R32G32_UINT: return 4294967295.000000;
			case CqFormat_R32G32_SINT: return 2147483647.000000;
			case CqFormat_R32G32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32A32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64A64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_X8_D24_UNORM: return 255.000000;
			case CqFormat_D32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_S8_UINT: return 255.000000;
			case CqFormat_D32_SFLOAT_S8_UINT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_DXBC6H_UFLOAT: return 131008.000000;
			case CqFormat_DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == 1) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0.000000;
			case CqFormat_R1_UNORM: return 0.000000;
			case CqFormat_R2_UNORM: return 0.000000;
			case CqFormat_R4_UNORM: return 0.000000;
			case CqFormat_A8_UNORM: return 0.000000;
			case CqFormat_R8_UNORM: return 0.000000;
			case CqFormat_R8_SNORM: return 0.000000;
			case CqFormat_R8_UINT: return 0.000000;
			case CqFormat_R8_SINT: return 0.000000;
			case CqFormat_R8_SRGB: return 0.000000;
			case CqFormat_R8G8_UINT: return 255.000000;
			case CqFormat_R8G8_SINT: return 127.000000;
			case CqFormat_R16_UNORM: return 0.000000;
			case CqFormat_R16_SNORM: return 0.000000;
			case CqFormat_R16_UINT: return 0.000000;
			case CqFormat_R16_SINT: return 0.000000;
			case CqFormat_R16_SFLOAT: return 0.000000;
			case CqFormat_R16_SBFLOAT: return 0.000000;
			case CqFormat_R8G8B8_UINT: return 255.000000;
			case CqFormat_R8G8B8_SINT: return 127.000000;
			case CqFormat_B8G8R8_UINT: return 255.000000;
			case CqFormat_B8G8R8_SINT: return 127.000000;
			case CqFormat_R8G8B8A8_UINT: return 255.000000;
			case CqFormat_R8G8B8A8_SINT: return 127.000000;
			case CqFormat_B8G8R8A8_UINT: return 255.000000;
			case CqFormat_B8G8R8A8_SINT: return 127.000000;
			case CqFormat_R16G16_UINT: return 65535.000000;
			case CqFormat_R16G16_SINT: return 32767.000000;
			case CqFormat_R16G16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16_SBFLOAT: return 0.000000;
			case CqFormat_R32_UINT: return 0.000000;
			case CqFormat_R32_SINT: return 0.000000;
			case CqFormat_R32_SFLOAT: return 0.000000;
			case CqFormat_A2R10G10B10_UINT: return 1023.000000;
			case CqFormat_A2R10G10B10_SINT: return 511.000000;
			case CqFormat_A2B10G10R10_UINT: return 1023.000000;
			case CqFormat_A2B10G10R10_SINT: return 511.000000;
			case CqFormat_R10G10B10A2_UINT: return 1023.000000;
			case CqFormat_R10G10B10A2_SINT: return 511.000000;
			case CqFormat_B10G10R10A2_UINT: return 1023.000000;
			case CqFormat_B10G10R10A2_SINT: return 511.000000;
			case CqFormat_B10G11R11_UFLOAT: return 65500.000000;
			case CqFormat_E5B9G9R9_UFLOAT: return 65408.000000;
			case CqFormat_R16G16B16_UINT: return 65535.000000;
			case CqFormat_R16G16B16_SINT: return 32767.000000;
			case CqFormat_R16G16B16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16_SBFLOAT: return 0.000000;
			case CqFormat_R16G16B16A16_UINT: return 65535.000000;
			case CqFormat_R16G16B16A16_SINT: return 32767.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16A16_SBFLOAT: return 0.000000;
			case CqFormat_R32G32_UINT: return 4294967295.000000;
			case CqFormat_R32G32_SINT: return 2147483647.000000;
			case CqFormat_R32G32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32A32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R64_UINT: return 0.000000;
			case CqFormat_R64_SINT: return 0.000000;
			case CqFormat_R64_SFLOAT: return 0.000000;
			case CqFormat_R64G64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64A64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_D16_UNORM: return 0.000000;
			case CqFormat_D32_SFLOAT: return 0.000000;
			case CqFormat_S8_UINT: return 0.000000;
			case CqFormat_D16_UNORM_S8_UINT: return 255.000000;
			case CqFormat_D24_UNORM_S8_UINT: return 255.000000;
			case CqFormat_D32_SFLOAT_S8_UINT: return 255.000000;
			case CqFormat_DXBC6H_UFLOAT: return 131008.000000;
			case CqFormat_DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == 2) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0.000000;
			case CqFormat_R1_UNORM: return 0.000000;
			case CqFormat_R2_UNORM: return 0.000000;
			case CqFormat_R4_UNORM: return 0.000000;
			case CqFormat_R4G4_UNORM: return 0.000000;
			case CqFormat_G4R4_UNORM: return 0.000000;
			case CqFormat_A8_UNORM: return 0.000000;
			case CqFormat_R8_UNORM: return 0.000000;
			case CqFormat_R8_SNORM: return 0.000000;
			case CqFormat_R8_UINT: return 0.000000;
			case CqFormat_R8_SINT: return 0.000000;
			case CqFormat_R8_SRGB: return 0.000000;
			case CqFormat_R8G8_UNORM: return 0.000000;
			case CqFormat_R8G8_SNORM: return 0.000000;
			case CqFormat_G8R8_UNORM: return 0.000000;
			case CqFormat_G8R8_SNORM: return 0.000000;
			case CqFormat_R8G8_UINT: return 0.000000;
			case CqFormat_R8G8_SINT: return 0.000000;
			case CqFormat_R8G8_SRGB: return 0.000000;
			case CqFormat_R16_UNORM: return 0.000000;
			case CqFormat_R16_SNORM: return 0.000000;
			case CqFormat_R16_UINT: return 0.000000;
			case CqFormat_R16_SINT: return 0.000000;
			case CqFormat_R16_SFLOAT: return 0.000000;
			case CqFormat_R16_SBFLOAT: return 0.000000;
			case CqFormat_R8G8B8_UINT: return 255.000000;
			case CqFormat_R8G8B8_SINT: return 127.000000;
			case CqFormat_B8G8R8_UINT: return 255.000000;
			case CqFormat_B8G8R8_SINT: return 127.000000;
			case CqFormat_R8G8B8A8_UINT: return 255.000000;
			case CqFormat_R8G8B8A8_SINT: return 127.000000;
			case CqFormat_B8G8R8A8_UINT: return 255.000000;
			case CqFormat_B8G8R8A8_SINT: return 127.000000;
			case CqFormat_R16G16_UNORM: return 0.000000;
			case CqFormat_G16R16_UNORM: return 0.000000;
			case CqFormat_R16G16_SNORM: return 0.000000;
			case CqFormat_G16R16_SNORM: return 0.000000;
			case CqFormat_R16G16_UINT: return 0.000000;
			case CqFormat_R16G16_SINT: return 0.000000;
			case CqFormat_R16G16_SFLOAT: return 0.000000;
			case CqFormat_R16G16_SBFLOAT: return 0.000000;
			case CqFormat_R32_UINT: return 0.000000;
			case CqFormat_R32_SINT: return 0.000000;
			case CqFormat_R32_SFLOAT: return 0.000000;
			case CqFormat_A2R10G10B10_UINT: return 1023.000000;
			case CqFormat_A2R10G10B10_SINT: return 511.000000;
			case CqFormat_A2B10G10R10_UINT: return 1023.000000;
			case CqFormat_A2B10G10R10_SINT: return 511.000000;
			case CqFormat_R10G10B10A2_UINT: return 1023.000000;
			case CqFormat_R10G10B10A2_SINT: return 511.000000;
			case CqFormat_B10G10R10A2_UINT: return 1023.000000;
			case CqFormat_B10G10R10A2_SINT: return 511.000000;
			case CqFormat_B10G11R11_UFLOAT: return 65500.000000;
			case CqFormat_E5B9G9R9_UFLOAT: return 65408.000000;
			case CqFormat_R16G16B16_UINT: return 65535.000000;
			case CqFormat_R16G16B16_SINT: return 32767.000000;
			case CqFormat_R16G16B16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16_SBFLOAT: return 0.000000;
			case CqFormat_R16G16B16A16_UINT: return 65535.000000;
			case CqFormat_R16G16B16A16_SINT: return 32767.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16A16_SBFLOAT: return 0.000000;
			case CqFormat_R32G32_UINT: return 0.000000;
			case CqFormat_R32G32_SINT: return 0.000000;
			case CqFormat_R32G32_SFLOAT: return 0.000000;
			case CqFormat_R32G32B32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R32G32B32A32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32A32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R64_UINT: return 0.000000;
			case CqFormat_R64_SINT: return 0.000000;
			case CqFormat_R64_SFLOAT: return 0.000000;
			case CqFormat_R64G64_UINT: return 0.000000;
			case CqFormat_R64G64_SINT: return 0.000000;
			case CqFormat_R64G64_SFLOAT: return 0.000000;
			case CqFormat_R64G64B64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_R64G64B64A64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64A64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_D16_UNORM: return 0.000000;
			case CqFormat_X8_D24_UNORM: return 0.000000;
			case CqFormat_D32_SFLOAT: return 0.000000;
			case CqFormat_S8_UINT: return 0.000000;
			case CqFormat_D16_UNORM_S8_UINT: return 0.000000;
			case CqFormat_D24_UNORM_S8_UINT: return 0.000000;
			case CqFormat_D32_SFLOAT_S8_UINT: return 0.000000;
			case CqFormat_DXBC6H_UFLOAT: return 131008.000000;
			case CqFormat_DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == 3) {
		switch(fmt) { 
			case CqFormat_UNDEFINED: return 0.000000;
			case CqFormat_R1_UNORM: return 0.000000;
			case CqFormat_R2_UNORM: return 0.000000;
			case CqFormat_R4_UNORM: return 0.000000;
			case CqFormat_R4G4_UNORM: return 0.000000;
			case CqFormat_G4R4_UNORM: return 0.000000;
			case CqFormat_A8_UNORM: return 0.000000;
			case CqFormat_R8_UNORM: return 0.000000;
			case CqFormat_R8_SNORM: return 0.000000;
			case CqFormat_R8_UINT: return 0.000000;
			case CqFormat_R8_SINT: return 0.000000;
			case CqFormat_R8_SRGB: return 0.000000;
			case CqFormat_B2G3R3_UNORM: return 0.000000;
			case CqFormat_R5G6B5_UNORM: return 0.000000;
			case CqFormat_B5G6R5_UNORM: return 0.000000;
			case CqFormat_R8G8_UNORM: return 0.000000;
			case CqFormat_R8G8_SNORM: return 0.000000;
			case CqFormat_G8R8_UNORM: return 0.000000;
			case CqFormat_G8R8_SNORM: return 0.000000;
			case CqFormat_R8G8_UINT: return 0.000000;
			case CqFormat_R8G8_SINT: return 0.000000;
			case CqFormat_R8G8_SRGB: return 0.000000;
			case CqFormat_R16_UNORM: return 0.000000;
			case CqFormat_R16_SNORM: return 0.000000;
			case CqFormat_R16_UINT: return 0.000000;
			case CqFormat_R16_SINT: return 0.000000;
			case CqFormat_R16_SFLOAT: return 0.000000;
			case CqFormat_R16_SBFLOAT: return 0.000000;
			case CqFormat_R8G8B8_UNORM: return 0.000000;
			case CqFormat_R8G8B8_SNORM: return 0.000000;
			case CqFormat_R8G8B8_UINT: return 0.000000;
			case CqFormat_R8G8B8_SINT: return 0.000000;
			case CqFormat_R8G8B8_SRGB: return 0.000000;
			case CqFormat_B8G8R8_UNORM: return 0.000000;
			case CqFormat_B8G8R8_SNORM: return 0.000000;
			case CqFormat_B8G8R8_UINT: return 0.000000;
			case CqFormat_B8G8R8_SINT: return 0.000000;
			case CqFormat_B8G8R8_SRGB: return 0.000000;
			case CqFormat_R8G8B8A8_UINT: return 255.000000;
			case CqFormat_R8G8B8A8_SINT: return 127.000000;
			case CqFormat_B8G8R8A8_UINT: return 255.000000;
			case CqFormat_B8G8R8A8_SINT: return 127.000000;
			case CqFormat_R16G16_UNORM: return 0.000000;
			case CqFormat_G16R16_UNORM: return 0.000000;
			case CqFormat_R16G16_SNORM: return 0.000000;
			case CqFormat_G16R16_SNORM: return 0.000000;
			case CqFormat_R16G16_UINT: return 0.000000;
			case CqFormat_R16G16_SINT: return 0.000000;
			case CqFormat_R16G16_SFLOAT: return 0.000000;
			case CqFormat_R16G16_SBFLOAT: return 0.000000;
			case CqFormat_R32_UINT: return 0.000000;
			case CqFormat_R32_SINT: return 0.000000;
			case CqFormat_R32_SFLOAT: return 0.000000;
			case CqFormat_A2R10G10B10_UINT: return 1023.000000;
			case CqFormat_A2R10G10B10_SINT: return 511.000000;
			case CqFormat_A2B10G10R10_UINT: return 1023.000000;
			case CqFormat_A2B10G10R10_SINT: return 511.000000;
			case CqFormat_R10G10B10A2_UINT: return 3.000000;
			case CqFormat_B10G10R10A2_UINT: return 3.000000;
			case CqFormat_B10G11R11_UFLOAT: return 0.000000;
			case CqFormat_E5B9G9R9_UFLOAT: return 65408.000000;
			case CqFormat_R16G16B16_UNORM: return 0.000000;
			case CqFormat_R16G16B16_SNORM: return 0.000000;
			case CqFormat_R16G16B16_UINT: return 0.000000;
			case CqFormat_R16G16B16_SINT: return 0.000000;
			case CqFormat_R16G16B16_SFLOAT: return 0.000000;
			case CqFormat_R16G16B16_SBFLOAT: return 0.000000;
			case CqFormat_R16G16B16A16_UINT: return 65535.000000;
			case CqFormat_R16G16B16A16_SINT: return 32767.000000;
			case CqFormat_R16G16B16A16_SFLOAT: return 65504.000000;
			case CqFormat_R16G16B16A16_SBFLOAT: return 0.000000;
			case CqFormat_R32G32_UINT: return 0.000000;
			case CqFormat_R32G32_SINT: return 0.000000;
			case CqFormat_R32G32_SFLOAT: return 0.000000;
			case CqFormat_R32G32B32_UINT: return 0.000000;
			case CqFormat_R32G32B32_SINT: return 0.000000;
			case CqFormat_R32G32B32_SFLOAT: return 0.000000;
			case CqFormat_R32G32B32A32_UINT: return 4294967295.000000;
			case CqFormat_R32G32B32A32_SINT: return 2147483647.000000;
			case CqFormat_R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case CqFormat_R64_UINT: return 0.000000;
			case CqFormat_R64_SINT: return 0.000000;
			case CqFormat_R64_SFLOAT: return 0.000000;
			case CqFormat_R64G64_UINT: return 0.000000;
			case CqFormat_R64G64_SINT: return 0.000000;
			case CqFormat_R64G64_SFLOAT: return 0.000000;
			case CqFormat_R64G64B64_UINT: return 0.000000;
			case CqFormat_R64G64B64_SINT: return 0.000000;
			case CqFormat_R64G64B64_SFLOAT: return 0.000000;
			case CqFormat_R64G64B64A64_UINT: return 18446744073709551616.000000;
			case CqFormat_R64G64B64A64_SINT: return 9223372036854775808.000000;
			case CqFormat_R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case CqFormat_D16_UNORM: return 0.000000;
			case CqFormat_X8_D24_UNORM: return 0.000000;
			case CqFormat_D32_SFLOAT: return 0.000000;
			case CqFormat_S8_UINT: return 0.000000;
			case CqFormat_D16_UNORM_S8_UINT: return 0.000000;
			case CqFormat_D24_UNORM_S8_UINT: return 0.000000;
			case CqFormat_D32_SFLOAT_S8_UINT: return 0.000000;
			case CqFormat_DXBC6H_UFLOAT: return 131008.000000;
			case CqFormat_DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}
	 CqFormat_ASSERT(false);
	return 0.0;
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline double getMinAtPhysical(Format const fmt, PhysicalChannel const channel) {
	if(isHomogenous(fmt) || channel == PhysicalChannel::_0) {
		switch(fmt) {
			case Format::R8_SNORM: return -1.000000;
			case Format::R8_SINT: return -128.000000;
			case Format::R8G8_SNORM: return -1.000000;
			case Format::G8R8_SNORM: return -1.000000;
			case Format::R8G8_SINT: return -128.000000;
			case Format::R16_SNORM: return -1.000000;
			case Format::R16_SINT: return -32768.000000;
			case Format::R16_SFLOAT: return -65504.000000;
			case Format::R8G8B8_SNORM: return -1.000000;
			case Format::R8G8B8_SINT: return -128.000000;
			case Format::B8G8R8_SNORM: return -1.000000;
			case Format::B8G8R8_SINT: return -128.000000;
			case Format::R8G8B8A8_SNORM: return -1.000000;
			case Format::R8G8B8A8_SINT: return -128.000000;
			case Format::B8G8R8A8_SNORM: return -1.000000;
			case Format::B8G8R8A8_SINT: return -128.000000;
			case Format::R16G16_SNORM: return -1.000000;
			case Format::G16R16_SNORM: return -1.000000;
			case Format::R16G16_SINT: return -32768.000000;
			case Format::R16G16_SFLOAT: return -65504.000000;
			case Format::R32_SINT: return -2147483648.000000;
			case Format::R32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::A2R10G10B10_SNORM: return -1.000000;
			case Format::A2R10G10B10_SINT: return -2.000000;
			case Format::A2B10G10R10_SNORM: return -1.000000;
			case Format::A2B10G10R10_SINT: return -2.000000;
			case Format::R10G10B10A2_SNORM: return -1.000000;
			case Format::R10G10B10A2_SINT: return -512.000000;
			case Format::B10G10R10A2_SNORM: return -1.000000;
			case Format::B10G10R10A2_SINT: return -512.000000;
			case Format::R16G16B16_SNORM: return -1.000000;
			case Format::R16G16B16_SINT: return -32768.000000;
			case Format::R16G16B16_SFLOAT: return -65504.000000;
			case Format::R16G16B16A16_SNORM: return -1.000000;
			case Format::R16G16B16A16_SINT: return -32768.000000;
			case Format::R16G16B16A16_SFLOAT: return -65504.000000;
			case Format::R32G32_SINT: return -2147483648.000000;
			case Format::R32G32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R32G32B32_SINT: return -2147483648.000000;
			case Format::R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_SINT: return -2147483648.000000;
			case Format::R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R64_SINT: return -9223372036854775808.000000;
			case Format::R64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64_SINT: return -9223372036854775808.000000;
			case Format::R64G64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::D32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::D32_SFLOAT_S8_UINT: return -340282346638528859811704183484516925440.000000;
			case Format::DXBC4_SNORM: return -1.000000;
			case Format::DXBC5_SNORM: return -1.000000;
			case Format::DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::ETC2_EAC_R11_SNORM: return -1.000000;
			case Format::ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == PhysicalChannel::_1) {
		switch(fmt) { 
			case Format::R8G8_SNORM: return -1.000000;
			case Format::G8R8_SNORM: return -1.000000;
			case Format::R8G8_SINT: return -128.000000;
			case Format::R8G8B8_SNORM: return -1.000000;
			case Format::R8G8B8_SINT: return -128.000000;
			case Format::B8G8R8_SNORM: return -1.000000;
			case Format::B8G8R8_SINT: return -128.000000;
			case Format::R8G8B8A8_SNORM: return -1.000000;
			case Format::R8G8B8A8_SINT: return -128.000000;
			case Format::B8G8R8A8_SNORM: return -1.000000;
			case Format::B8G8R8A8_SINT: return -128.000000;
			case Format::R16G16_SNORM: return -1.000000;
			case Format::G16R16_SNORM: return -1.000000;
			case Format::R16G16_SINT: return -32768.000000;
			case Format::R16G16_SFLOAT: return -65504.000000;
			case Format::A2R10G10B10_SNORM: return -1.000000;
			case Format::A2R10G10B10_SINT: return -512.000000;
			case Format::A2B10G10R10_SNORM: return -1.000000;
			case Format::A2B10G10R10_SINT: return -512.000000;
			case Format::R10G10B10A2_SNORM: return -1.000000;
			case Format::R10G10B10A2_SINT: return -512.000000;
			case Format::B10G10R10A2_SNORM: return -1.000000;
			case Format::B10G10R10A2_SINT: return -512.000000;
			case Format::R16G16B16_SNORM: return -1.000000;
			case Format::R16G16B16_SINT: return -32768.000000;
			case Format::R16G16B16_SFLOAT: return -65504.000000;
			case Format::R16G16B16A16_SNORM: return -1.000000;
			case Format::R16G16B16A16_SINT: return -32768.000000;
			case Format::R16G16B16A16_SFLOAT: return -65504.000000;
			case Format::R32G32_SINT: return -2147483648.000000;
			case Format::R32G32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R32G32B32_SINT: return -2147483648.000000;
			case Format::R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_SINT: return -2147483648.000000;
			case Format::R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R64G64_SINT: return -9223372036854775808.000000;
			case Format::R64G64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::DXBC4_SNORM: return -1.000000;
			case Format::DXBC5_SNORM: return -1.000000;
			case Format::DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::ETC2_EAC_R11_SNORM: return -1.000000;
			case Format::ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == PhysicalChannel::_2) {
		switch(fmt) { 
			case Format::R8G8B8_SNORM: return -1.000000;
			case Format::R8G8B8_SINT: return -128.000000;
			case Format::B8G8R8_SNORM: return -1.000000;
			case Format::B8G8R8_SINT: return -128.000000;
			case Format::R8G8B8A8_SNORM: return -1.000000;
			case Format::R8G8B8A8_SINT: return -128.000000;
			case Format::B8G8R8A8_SNORM: return -1.000000;
			case Format::B8G8R8A8_SINT: return -128.000000;
			case Format::A2R10G10B10_SNORM: return -1.000000;
			case Format::A2R10G10B10_SINT: return -512.000000;
			case Format::A2B10G10R10_SNORM: return -1.000000;
			case Format::A2B10G10R10_SINT: return -512.000000;
			case Format::R10G10B10A2_SNORM: return -1.000000;
			case Format::R10G10B10A2_SINT: return -512.000000;
			case Format::B10G10R10A2_SNORM: return -1.000000;
			case Format::B10G10R10A2_SINT: return -512.000000;
			case Format::R16G16B16_SNORM: return -1.000000;
			case Format::R16G16B16_SINT: return -32768.000000;
			case Format::R16G16B16_SFLOAT: return -65504.000000;
			case Format::R16G16B16A16_SNORM: return -1.000000;
			case Format::R16G16B16A16_SINT: return -32768.000000;
			case Format::R16G16B16A16_SFLOAT: return -65504.000000;
			case Format::R32G32B32_SINT: return -2147483648.000000;
			case Format::R32G32B32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_SINT: return -2147483648.000000;
			case Format::R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R64G64B64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::DXBC4_SNORM: return -1.000000;
			case Format::DXBC5_SNORM: return -1.000000;
			case Format::DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::ETC2_EAC_R11_SNORM: return -1.000000;
			case Format::ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}	else if(channel == PhysicalChannel::_3) {
		switch(fmt) { 
			case Format::R8G8B8A8_SNORM: return -1.000000;
			case Format::R8G8B8A8_SINT: return -128.000000;
			case Format::B8G8R8A8_SNORM: return -1.000000;
			case Format::B8G8R8A8_SINT: return -128.000000;
			case Format::A2R10G10B10_SNORM: return -1.000000;
			case Format::A2R10G10B10_SINT: return -512.000000;
			case Format::A2B10G10R10_SNORM: return -1.000000;
			case Format::A2B10G10R10_SINT: return -512.000000;
			case Format::R10G10B10A2_SNORM: return -1.000000;
			case Format::R10G10B10A2_SINT: return -2.000000;
			case Format::B10G10R10A2_SNORM: return -1.000000;
			case Format::B10G10R10A2_SINT: return -2.000000;
			case Format::R16G16B16A16_SNORM: return -1.000000;
			case Format::R16G16B16A16_SINT: return -32768.000000;
			case Format::R16G16B16A16_SFLOAT: return -65504.000000;
			case Format::R32G32B32A32_SINT: return -2147483648.000000;
			case Format::R32G32B32A32_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::R64G64B64A64_SINT: return -9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::DXBC4_SNORM: return -1.000000;
			case Format::DXBC5_SNORM: return -1.000000;
			case Format::DXBC6H_SFLOAT: return -340282346638528859811704183484516925440.000000;
			case Format::ETC2_EAC_R11_SNORM: return -1.000000;
			case Format::ETC2_EAC_R11G11_SNORM: return -1.000000;
			default: return 0.000000;
		}
	}
	 CqFormat_ASSERT(false);
	return 0.0;
}
}

namespace coquelicot {
CQ_FORMAT_CONSTEXPR inline double getMaxAtPhysical(Format const fmt, PhysicalChannel const channel) {
	if(isHomogenous(fmt) || channel == PhysicalChannel::_0) {
		switch(fmt) {
			case Format::UNDEFINED: return 0.000000;
			case Format::R8_UINT: return 255.000000;
			case Format::R8_SINT: return 127.000000;
			case Format::X4R4G4B4_UNORM: return 15.000000;
			case Format::X4B4G4R4_UNORM: return 15.000000;
			case Format::R8G8_UINT: return 255.000000;
			case Format::R8G8_SINT: return 127.000000;
			case Format::R16_UINT: return 65535.000000;
			case Format::R16_SINT: return 32767.000000;
			case Format::R16_SFLOAT: return 65504.000000;
			case Format::R16_SBFLOAT: return 0.000000;
			case Format::R8G8B8_UINT: return 255.000000;
			case Format::R8G8B8_SINT: return 127.000000;
			case Format::B8G8R8_UINT: return 255.000000;
			case Format::B8G8R8_SINT: return 127.000000;
			case Format::R8G8B8A8_UINT: return 255.000000;
			case Format::R8G8B8A8_SINT: return 127.000000;
			case Format::B8G8R8A8_UINT: return 255.000000;
			case Format::B8G8R8A8_SINT: return 127.000000;
			case Format::R16G16_UINT: return 65535.000000;
			case Format::R16G16_SINT: return 32767.000000;
			case Format::R16G16_SFLOAT: return 65504.000000;
			case Format::R16G16_SBFLOAT: return 0.000000;
			case Format::R32_UINT: return 4294967295.000000;
			case Format::R32_SINT: return 2147483647.000000;
			case Format::R32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::A2R10G10B10_UINT: return 3.000000;
			case Format::A2B10G10R10_UINT: return 3.000000;
			case Format::R10G10B10A2_UINT: return 1023.000000;
			case Format::R10G10B10A2_SINT: return 511.000000;
			case Format::B10G10R10A2_UINT: return 1023.000000;
			case Format::B10G10R10A2_SINT: return 511.000000;
			case Format::B10G11R11_UFLOAT: return 65000.000000;
			case Format::E5B9G9R9_UFLOAT: return 31.000000;
			case Format::R16G16B16_UINT: return 65535.000000;
			case Format::R16G16B16_SINT: return 32767.000000;
			case Format::R16G16B16_SFLOAT: return 65504.000000;
			case Format::R16G16B16_SBFLOAT: return 0.000000;
			case Format::R16G16B16A16_UINT: return 65535.000000;
			case Format::R16G16B16A16_SINT: return 32767.000000;
			case Format::R16G16B16A16_SFLOAT: return 65504.000000;
			case Format::R16G16B16A16_SBFLOAT: return 0.000000;
			case Format::R32G32_UINT: return 4294967295.000000;
			case Format::R32G32_SINT: return 2147483647.000000;
			case Format::R32G32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R32G32B32_UINT: return 4294967295.000000;
			case Format::R32G32B32_SINT: return 2147483647.000000;
			case Format::R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_UINT: return 4294967295.000000;
			case Format::R32G32B32A32_SINT: return 2147483647.000000;
			case Format::R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R64_UINT: return 18446744073709551616.000000;
			case Format::R64_SINT: return 9223372036854775808.000000;
			case Format::R64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64_UINT: return 18446744073709551616.000000;
			case Format::R64G64_SINT: return 9223372036854775808.000000;
			case Format::R64G64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64A64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::X8_D24_UNORM: return 255.000000;
			case Format::D32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::S8_UINT: return 255.000000;
			case Format::D32_SFLOAT_S8_UINT: return 340282346638528859811704183484516925440.000000;
			case Format::DXBC6H_UFLOAT: return 131008.000000;
			case Format::DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == PhysicalChannel::_1) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0.000000;
			case Format::R1_UNORM: return 0.000000;
			case Format::R2_UNORM: return 0.000000;
			case Format::R4_UNORM: return 0.000000;
			case Format::A8_UNORM: return 0.000000;
			case Format::R8_UNORM: return 0.000000;
			case Format::R8_SNORM: return 0.000000;
			case Format::R8_UINT: return 0.000000;
			case Format::R8_SINT: return 0.000000;
			case Format::R8_SRGB: return 0.000000;
			case Format::R8G8_UINT: return 255.000000;
			case Format::R8G8_SINT: return 127.000000;
			case Format::R16_UNORM: return 0.000000;
			case Format::R16_SNORM: return 0.000000;
			case Format::R16_UINT: return 0.000000;
			case Format::R16_SINT: return 0.000000;
			case Format::R16_SFLOAT: return 0.000000;
			case Format::R16_SBFLOAT: return 0.000000;
			case Format::R8G8B8_UINT: return 255.000000;
			case Format::R8G8B8_SINT: return 127.000000;
			case Format::B8G8R8_UINT: return 255.000000;
			case Format::B8G8R8_SINT: return 127.000000;
			case Format::R8G8B8A8_UINT: return 255.000000;
			case Format::R8G8B8A8_SINT: return 127.000000;
			case Format::B8G8R8A8_UINT: return 255.000000;
			case Format::B8G8R8A8_SINT: return 127.000000;
			case Format::R16G16_UINT: return 65535.000000;
			case Format::R16G16_SINT: return 32767.000000;
			case Format::R16G16_SFLOAT: return 65504.000000;
			case Format::R16G16_SBFLOAT: return 0.000000;
			case Format::R32_UINT: return 0.000000;
			case Format::R32_SINT: return 0.000000;
			case Format::R32_SFLOAT: return 0.000000;
			case Format::A2R10G10B10_UINT: return 1023.000000;
			case Format::A2R10G10B10_SINT: return 511.000000;
			case Format::A2B10G10R10_UINT: return 1023.000000;
			case Format::A2B10G10R10_SINT: return 511.000000;
			case Format::R10G10B10A2_UINT: return 1023.000000;
			case Format::R10G10B10A2_SINT: return 511.000000;
			case Format::B10G10R10A2_UINT: return 1023.000000;
			case Format::B10G10R10A2_SINT: return 511.000000;
			case Format::B10G11R11_UFLOAT: return 65500.000000;
			case Format::E5B9G9R9_UFLOAT: return 65408.000000;
			case Format::R16G16B16_UINT: return 65535.000000;
			case Format::R16G16B16_SINT: return 32767.000000;
			case Format::R16G16B16_SFLOAT: return 65504.000000;
			case Format::R16G16B16_SBFLOAT: return 0.000000;
			case Format::R16G16B16A16_UINT: return 65535.000000;
			case Format::R16G16B16A16_SINT: return 32767.000000;
			case Format::R16G16B16A16_SFLOAT: return 65504.000000;
			case Format::R16G16B16A16_SBFLOAT: return 0.000000;
			case Format::R32G32_UINT: return 4294967295.000000;
			case Format::R32G32_SINT: return 2147483647.000000;
			case Format::R32G32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R32G32B32_UINT: return 4294967295.000000;
			case Format::R32G32B32_SINT: return 2147483647.000000;
			case Format::R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_UINT: return 4294967295.000000;
			case Format::R32G32B32A32_SINT: return 2147483647.000000;
			case Format::R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R64_UINT: return 0.000000;
			case Format::R64_SINT: return 0.000000;
			case Format::R64_SFLOAT: return 0.000000;
			case Format::R64G64_UINT: return 18446744073709551616.000000;
			case Format::R64G64_SINT: return 9223372036854775808.000000;
			case Format::R64G64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64A64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::D16_UNORM: return 0.000000;
			case Format::D32_SFLOAT: return 0.000000;
			case Format::S8_UINT: return 0.000000;
			case Format::D16_UNORM_S8_UINT: return 255.000000;
			case Format::D24_UNORM_S8_UINT: return 255.000000;
			case Format::D32_SFLOAT_S8_UINT: return 255.000000;
			case Format::DXBC6H_UFLOAT: return 131008.000000;
			case Format::DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == PhysicalChannel::_2) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0.000000;
			case Format::R1_UNORM: return 0.000000;
			case Format::R2_UNORM: return 0.000000;
			case Format::R4_UNORM: return 0.000000;
			case Format::R4G4_UNORM: return 0.000000;
			case Format::G4R4_UNORM: return 0.000000;
			case Format::A8_UNORM: return 0.000000;
			case Format::R8_UNORM: return 0.000000;
			case Format::R8_SNORM: return 0.000000;
			case Format::R8_UINT: return 0.000000;
			case Format::R8_SINT: return 0.000000;
			case Format::R8_SRGB: return 0.000000;
			case Format::R8G8_UNORM: return 0.000000;
			case Format::R8G8_SNORM: return 0.000000;
			case Format::G8R8_UNORM: return 0.000000;
			case Format::G8R8_SNORM: return 0.000000;
			case Format::R8G8_UINT: return 0.000000;
			case Format::R8G8_SINT: return 0.000000;
			case Format::R8G8_SRGB: return 0.000000;
			case Format::R16_UNORM: return 0.000000;
			case Format::R16_SNORM: return 0.000000;
			case Format::R16_UINT: return 0.000000;
			case Format::R16_SINT: return 0.000000;
			case Format::R16_SFLOAT: return 0.000000;
			case Format::R16_SBFLOAT: return 0.000000;
			case Format::R8G8B8_UINT: return 255.000000;
			case Format::R8G8B8_SINT: return 127.000000;
			case Format::B8G8R8_UINT: return 255.000000;
			case Format::B8G8R8_SINT: return 127.000000;
			case Format::R8G8B8A8_UINT: return 255.000000;
			case Format::R8G8B8A8_SINT: return 127.000000;
			case Format::B8G8R8A8_UINT: return 255.000000;
			case Format::B8G8R8A8_SINT: return 127.000000;
			case Format::R16G16_UNORM: return 0.000000;
			case Format::G16R16_UNORM: return 0.000000;
			case Format::R16G16_SNORM: return 0.000000;
			case Format::G16R16_SNORM: return 0.000000;
			case Format::R16G16_UINT: return 0.000000;
			case Format::R16G16_SINT: return 0.000000;
			case Format::R16G16_SFLOAT: return 0.000000;
			case Format::R16G16_SBFLOAT: return 0.000000;
			case Format::R32_UINT: return 0.000000;
			case Format::R32_SINT: return 0.000000;
			case Format::R32_SFLOAT: return 0.000000;
			case Format::A2R10G10B10_UINT: return 1023.000000;
			case Format::A2R10G10B10_SINT: return 511.000000;
			case Format::A2B10G10R10_UINT: return 1023.000000;
			case Format::A2B10G10R10_SINT: return 511.000000;
			case Format::R10G10B10A2_UINT: return 1023.000000;
			case Format::R10G10B10A2_SINT: return 511.000000;
			case Format::B10G10R10A2_UINT: return 1023.000000;
			case Format::B10G10R10A2_SINT: return 511.000000;
			case Format::B10G11R11_UFLOAT: return 65500.000000;
			case Format::E5B9G9R9_UFLOAT: return 65408.000000;
			case Format::R16G16B16_UINT: return 65535.000000;
			case Format::R16G16B16_SINT: return 32767.000000;
			case Format::R16G16B16_SFLOAT: return 65504.000000;
			case Format::R16G16B16_SBFLOAT: return 0.000000;
			case Format::R16G16B16A16_UINT: return 65535.000000;
			case Format::R16G16B16A16_SINT: return 32767.000000;
			case Format::R16G16B16A16_SFLOAT: return 65504.000000;
			case Format::R16G16B16A16_SBFLOAT: return 0.000000;
			case Format::R32G32_UINT: return 0.000000;
			case Format::R32G32_SINT: return 0.000000;
			case Format::R32G32_SFLOAT: return 0.000000;
			case Format::R32G32B32_UINT: return 4294967295.000000;
			case Format::R32G32B32_SINT: return 2147483647.000000;
			case Format::R32G32B32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R32G32B32A32_UINT: return 4294967295.000000;
			case Format::R32G32B32A32_SINT: return 2147483647.000000;
			case Format::R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R64_UINT: return 0.000000;
			case Format::R64_SINT: return 0.000000;
			case Format::R64_SFLOAT: return 0.000000;
			case Format::R64G64_UINT: return 0.000000;
			case Format::R64G64_SINT: return 0.000000;
			case Format::R64G64_SFLOAT: return 0.000000;
			case Format::R64G64B64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::R64G64B64A64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64A64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::D16_UNORM: return 0.000000;
			case Format::X8_D24_UNORM: return 0.000000;
			case Format::D32_SFLOAT: return 0.000000;
			case Format::S8_UINT: return 0.000000;
			case Format::D16_UNORM_S8_UINT: return 0.000000;
			case Format::D24_UNORM_S8_UINT: return 0.000000;
			case Format::D32_SFLOAT_S8_UINT: return 0.000000;
			case Format::DXBC6H_UFLOAT: return 131008.000000;
			case Format::DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}	else if(channel == PhysicalChannel::_3) {
		switch(fmt) { 
			case Format::UNDEFINED: return 0.000000;
			case Format::R1_UNORM: return 0.000000;
			case Format::R2_UNORM: return 0.000000;
			case Format::R4_UNORM: return 0.000000;
			case Format::R4G4_UNORM: return 0.000000;
			case Format::G4R4_UNORM: return 0.000000;
			case Format::A8_UNORM: return 0.000000;
			case Format::R8_UNORM: return 0.000000;
			case Format::R8_SNORM: return 0.000000;
			case Format::R8_UINT: return 0.000000;
			case Format::R8_SINT: return 0.000000;
			case Format::R8_SRGB: return 0.000000;
			case Format::B2G3R3_UNORM: return 0.000000;
			case Format::R5G6B5_UNORM: return 0.000000;
			case Format::B5G6R5_UNORM: return 0.000000;
			case Format::R8G8_UNORM: return 0.000000;
			case Format::R8G8_SNORM: return 0.000000;
			case Format::G8R8_UNORM: return 0.000000;
			case Format::G8R8_SNORM: return 0.000000;
			case Format::R8G8_UINT: return 0.000000;
			case Format::R8G8_SINT: return 0.000000;
			case Format::R8G8_SRGB: return 0.000000;
			case Format::R16_UNORM: return 0.000000;
			case Format::R16_SNORM: return 0.000000;
			case Format::R16_UINT: return 0.000000;
			case Format::R16_SINT: return 0.000000;
			case Format::R16_SFLOAT: return 0.000000;
			case Format::R16_SBFLOAT: return 0.000000;
			case Format::R8G8B8_UNORM: return 0.000000;
			case Format::R8G8B8_SNORM: return 0.000000;
			case Format::R8G8B8_UINT: return 0.000000;
			case Format::R8G8B8_SINT: return 0.000000;
			case Format::R8G8B8_SRGB: return 0.000000;
			case Format::B8G8R8_UNORM: return 0.000000;
			case Format::B8G8R8_SNORM: return 0.000000;
			case Format::B8G8R8_UINT: return 0.000000;
			case Format::B8G8R8_SINT: return 0.000000;
			case Format::B8G8R8_SRGB: return 0.000000;
			case Format::R8G8B8A8_UINT: return 255.000000;
			case Format::R8G8B8A8_SINT: return 127.000000;
			case Format::B8G8R8A8_UINT: return 255.000000;
			case Format::B8G8R8A8_SINT: return 127.000000;
			case Format::R16G16_UNORM: return 0.000000;
			case Format::G16R16_UNORM: return 0.000000;
			case Format::R16G16_SNORM: return 0.000000;
			case Format::G16R16_SNORM: return 0.000000;
			case Format::R16G16_UINT: return 0.000000;
			case Format::R16G16_SINT: return 0.000000;
			case Format::R16G16_SFLOAT: return 0.000000;
			case Format::R16G16_SBFLOAT: return 0.000000;
			case Format::R32_UINT: return 0.000000;
			case Format::R32_SINT: return 0.000000;
			case Format::R32_SFLOAT: return 0.000000;
			case Format::A2R10G10B10_UINT: return 1023.000000;
			case Format::A2R10G10B10_SINT: return 511.000000;
			case Format::A2B10G10R10_UINT: return 1023.000000;
			case Format::A2B10G10R10_SINT: return 511.000000;
			case Format::R10G10B10A2_UINT: return 3.000000;
			case Format::B10G10R10A2_UINT: return 3.000000;
			case Format::B10G11R11_UFLOAT: return 0.000000;
			case Format::E5B9G9R9_UFLOAT: return 65408.000000;
			case Format::R16G16B16_UNORM: return 0.000000;
			case Format::R16G16B16_SNORM: return 0.000000;
			case Format::R16G16B16_UINT: return 0.000000;
			case Format::R16G16B16_SINT: return 0.000000;
			case Format::R16G16B16_SFLOAT: return 0.000000;
			case Format::R16G16B16_SBFLOAT: return 0.000000;
			case Format::R16G16B16A16_UINT: return 65535.000000;
			case Format::R16G16B16A16_SINT: return 32767.000000;
			case Format::R16G16B16A16_SFLOAT: return 65504.000000;
			case Format::R16G16B16A16_SBFLOAT: return 0.000000;
			case Format::R32G32_UINT: return 0.000000;
			case Format::R32G32_SINT: return 0.000000;
			case Format::R32G32_SFLOAT: return 0.000000;
			case Format::R32G32B32_UINT: return 0.000000;
			case Format::R32G32B32_SINT: return 0.000000;
			case Format::R32G32B32_SFLOAT: return 0.000000;
			case Format::R32G32B32A32_UINT: return 4294967295.000000;
			case Format::R32G32B32A32_SINT: return 2147483647.000000;
			case Format::R32G32B32A32_SFLOAT: return 340282346638528859811704183484516925440.000000;
			case Format::R64_UINT: return 0.000000;
			case Format::R64_SINT: return 0.000000;
			case Format::R64_SFLOAT: return 0.000000;
			case Format::R64G64_UINT: return 0.000000;
			case Format::R64G64_SINT: return 0.000000;
			case Format::R64G64_SFLOAT: return 0.000000;
			case Format::R64G64B64_UINT: return 0.000000;
			case Format::R64G64B64_SINT: return 0.000000;
			case Format::R64G64B64_SFLOAT: return 0.000000;
			case Format::R64G64B64A64_UINT: return 18446744073709551616.000000;
			case Format::R64G64B64A64_SINT: return 9223372036854775808.000000;
			case Format::R64G64B64A64_SFLOAT: return 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000;
			case Format::D16_UNORM: return 0.000000;
			case Format::X8_D24_UNORM: return 0.000000;
			case Format::D32_SFLOAT: return 0.000000;
			case Format::S8_UINT: return 0.000000;
			case Format::D16_UNORM_S8_UINT: return 0.000000;
			case Format::D24_UNORM_S8_UINT: return 0.000000;
			case Format::D32_SFLOAT_S8_UINT: return 0.000000;
			case Format::DXBC6H_UFLOAT: return 131008.000000;
			case Format::DXBC6H_SFLOAT: return 65504.000000;
			default: return 1.000000;
		}
	}
	 CqFormat_ASSERT(false);
	return 0.0;
}
}

CQ_FORMAT_CONSTEXPR inline CqFormat_LogicalChannel CqFormat_PhysicalChannelToLogical(CqFormat const fmt, int8_t const channel) {
	 CqFormat_ASSERT(channel != CqFormat_PC_CONST_0);
	 CqFormat_ASSERT(channel != CqFormat_PC_CONST_1);
	if(channel == CqFormat_PC_0) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_LC_0;
			case CqFormat_G4R4_UNORM: return CqFormat_LC_Green;
			case CqFormat_A8_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_B2G3R3_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B4G4R4A4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_LC_1;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_LC_1;
			case CqFormat_B5G6R5_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B5G5R5A1_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_LC_Blue;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_LC_1;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_LC_1;
			case CqFormat_B2G3R3A8_UNORM: return CqFormat_LC_Blue;
			case CqFormat_G8R8_UNORM: return CqFormat_LC_Green;
			case CqFormat_G8R8_SNORM: return CqFormat_LC_Green;
			case CqFormat_B8G8R8_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8_SNORM: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8_UINT: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8_SINT: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8_SRGB: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8A8_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8A8_SNORM: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8A8_UINT: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8A8_SINT: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8A8_SRGB: return CqFormat_LC_Blue;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_LC_Blue;
			case CqFormat_G16R16_UNORM: return CqFormat_LC_Green;
			case CqFormat_G16R16_SNORM: return CqFormat_LC_Green;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_LC_Alpha;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_LC_Alpha;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_LC_Alpha;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_LC_Alpha;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_LC_Alpha;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_LC_Alpha;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_LC_Alpha;
			case CqFormat_B10G10R10A2_UNORM: return CqFormat_LC_Blue;
			case CqFormat_B10G10R10A2_UINT: return CqFormat_LC_Blue;
			case CqFormat_B10G10R10A2_SNORM: return CqFormat_LC_Blue;
			case CqFormat_B10G10R10A2_SINT: return CqFormat_LC_Blue;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_LC_Blue;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_LC_Alpha;
			case CqFormat_X8_D24_UNORM: return CqFormat_LC_0;
			case CqFormat_S8_UINT: return CqFormat_LC_Green;
			default: return CqFormat_LC_Red;
		}
	}	else if(channel == CqFormat_PC_1) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_LC_0;
			case CqFormat_R1_UNORM: return CqFormat_LC_0;
			case CqFormat_R2_UNORM: return CqFormat_LC_0;
			case CqFormat_R4_UNORM: return CqFormat_LC_0;
			case CqFormat_G4R4_UNORM: return CqFormat_LC_Red;
			case CqFormat_A8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8_SNORM: return CqFormat_LC_0;
			case CqFormat_R8_UINT: return CqFormat_LC_0;
			case CqFormat_R8_SINT: return CqFormat_LC_0;
			case CqFormat_R8_SRGB: return CqFormat_LC_0;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_LC_Red;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_LC_Red;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_LC_Red;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_LC_Red;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_LC_Blue;
			case CqFormat_G8R8_UNORM: return CqFormat_LC_Red;
			case CqFormat_G8R8_SNORM: return CqFormat_LC_Red;
			case CqFormat_R16_UNORM: return CqFormat_LC_0;
			case CqFormat_R16_SNORM: return CqFormat_LC_0;
			case CqFormat_R16_UINT: return CqFormat_LC_0;
			case CqFormat_R16_SINT: return CqFormat_LC_0;
			case CqFormat_R16_SFLOAT: return CqFormat_LC_0;
			case CqFormat_R16_SBFLOAT: return CqFormat_LC_0;
			case CqFormat_G16R16_UNORM: return CqFormat_LC_Red;
			case CqFormat_G16R16_SNORM: return CqFormat_LC_Red;
			case CqFormat_R32_UINT: return CqFormat_LC_0;
			case CqFormat_R32_SINT: return CqFormat_LC_0;
			case CqFormat_R32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_LC_Red;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_LC_Red;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_LC_Red;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_LC_Red;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_LC_Blue;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_LC_Blue;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_LC_Blue;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_LC_Blue;
			case CqFormat_R64_UINT: return CqFormat_LC_0;
			case CqFormat_R64_SINT: return CqFormat_LC_0;
			case CqFormat_R64_SFLOAT: return CqFormat_LC_0;
			case CqFormat_D16_UNORM: return CqFormat_LC_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_LC_Red;
			case CqFormat_D32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_S8_UINT: return CqFormat_LC_0;
			case CqFormat_DXBC4_UNORM: return CqFormat_LC_0;
			case CqFormat_DXBC4_SNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_LC_0;
			case CqFormat_CLUT_P4: return CqFormat_LC_0;
			case CqFormat_CLUT_P4A4: return CqFormat_LC_Alpha;
			case CqFormat_CLUT_P8: return CqFormat_LC_0;
			case CqFormat_CLUT_P8A8: return CqFormat_LC_Alpha;
			default: return CqFormat_LC_Green;
		}
	}	else if(channel == CqFormat_PC_2) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_LC_0;
			case CqFormat_R1_UNORM: return CqFormat_LC_0;
			case CqFormat_R2_UNORM: return CqFormat_LC_0;
			case CqFormat_R4_UNORM: return CqFormat_LC_0;
			case CqFormat_R4G4_UNORM: return CqFormat_LC_0;
			case CqFormat_G4R4_UNORM: return CqFormat_LC_0;
			case CqFormat_A8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8_SNORM: return CqFormat_LC_0;
			case CqFormat_R8_UINT: return CqFormat_LC_0;
			case CqFormat_R8_SINT: return CqFormat_LC_0;
			case CqFormat_R8_SRGB: return CqFormat_LC_0;
			case CqFormat_B2G3R3_UNORM: return CqFormat_LC_Red;
			case CqFormat_B4G4R4A4_UNORM: return CqFormat_LC_Red;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_LC_Red;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_LC_Green;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_LC_Green;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_LC_Green;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_LC_Green;
			case CqFormat_B5G6R5_UNORM: return CqFormat_LC_Red;
			case CqFormat_B5G5R5A1_UNORM: return CqFormat_LC_Red;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_LC_Green;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_LC_Green;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_LC_Red;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_LC_Green;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_LC_Green;
			case CqFormat_B2G3R3A8_UNORM: return CqFormat_LC_Red;
			case CqFormat_R8G8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8G8_SNORM: return CqFormat_LC_0;
			case CqFormat_G8R8_UNORM: return CqFormat_LC_0;
			case CqFormat_G8R8_SNORM: return CqFormat_LC_0;
			case CqFormat_R8G8_UINT: return CqFormat_LC_0;
			case CqFormat_R8G8_SINT: return CqFormat_LC_0;
			case CqFormat_R8G8_SRGB: return CqFormat_LC_0;
			case CqFormat_R16_UNORM: return CqFormat_LC_0;
			case CqFormat_R16_SNORM: return CqFormat_LC_0;
			case CqFormat_R16_UINT: return CqFormat_LC_0;
			case CqFormat_R16_SINT: return CqFormat_LC_0;
			case CqFormat_R16_SFLOAT: return CqFormat_LC_0;
			case CqFormat_R16_SBFLOAT: return CqFormat_LC_0;
			case CqFormat_B8G8R8_UNORM: return CqFormat_LC_Red;
			case CqFormat_B8G8R8_SNORM: return CqFormat_LC_Red;
			case CqFormat_B8G8R8_UINT: return CqFormat_LC_Red;
			case CqFormat_B8G8R8_SINT: return CqFormat_LC_Red;
			case CqFormat_B8G8R8_SRGB: return CqFormat_LC_Red;
			case CqFormat_B8G8R8A8_UNORM: return CqFormat_LC_Red;
			case CqFormat_B8G8R8A8_SNORM: return CqFormat_LC_Red;
			case CqFormat_B8G8R8A8_UINT: return CqFormat_LC_Red;
			case CqFormat_B8G8R8A8_SINT: return CqFormat_LC_Red;
			case CqFormat_B8G8R8A8_SRGB: return CqFormat_LC_Red;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_LC_Red;
			case CqFormat_R16G16_UNORM: return CqFormat_LC_0;
			case CqFormat_G16R16_UNORM: return CqFormat_LC_0;
			case CqFormat_R16G16_SNORM: return CqFormat_LC_0;
			case CqFormat_G16R16_SNORM: return CqFormat_LC_0;
			case CqFormat_R16G16_UINT: return CqFormat_LC_0;
			case CqFormat_R16G16_SINT: return CqFormat_LC_0;
			case CqFormat_R16G16_SFLOAT: return CqFormat_LC_0;
			case CqFormat_R16G16_SBFLOAT: return CqFormat_LC_0;
			case CqFormat_R32_UINT: return CqFormat_LC_0;
			case CqFormat_R32_SINT: return CqFormat_LC_0;
			case CqFormat_R32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_LC_Green;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_LC_Green;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_LC_Green;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_LC_Green;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_LC_Green;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_LC_Green;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_LC_Green;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_LC_Green;
			case CqFormat_B10G10R10A2_UNORM: return CqFormat_LC_Red;
			case CqFormat_B10G10R10A2_UINT: return CqFormat_LC_Red;
			case CqFormat_B10G10R10A2_SNORM: return CqFormat_LC_Red;
			case CqFormat_B10G10R10A2_SINT: return CqFormat_LC_Red;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_LC_Red;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_LC_Green;
			case CqFormat_R32G32_UINT: return CqFormat_LC_0;
			case CqFormat_R32G32_SINT: return CqFormat_LC_0;
			case CqFormat_R32G32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_R64_UINT: return CqFormat_LC_0;
			case CqFormat_R64_SINT: return CqFormat_LC_0;
			case CqFormat_R64_SFLOAT: return CqFormat_LC_0;
			case CqFormat_R64G64_UINT: return CqFormat_LC_0;
			case CqFormat_R64G64_SINT: return CqFormat_LC_0;
			case CqFormat_R64G64_SFLOAT: return CqFormat_LC_0;
			case CqFormat_D16_UNORM: return CqFormat_LC_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_LC_0;
			case CqFormat_D32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D16_UNORM_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D24_UNORM_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D32_SFLOAT_S8_UINT: return CqFormat_LC_0;
			case CqFormat_DXBC4_UNORM: return CqFormat_LC_0;
			case CqFormat_DXBC4_SNORM: return CqFormat_LC_0;
			case CqFormat_DXBC5_UNORM: return CqFormat_LC_0;
			case CqFormat_DXBC5_SNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return CqFormat_LC_0;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return CqFormat_LC_0;
			case CqFormat_CLUT_P4: return CqFormat_LC_0;
			case CqFormat_CLUT_P4A4: return CqFormat_LC_0;
			case CqFormat_CLUT_P8: return CqFormat_LC_0;
			case CqFormat_CLUT_P8A8: return CqFormat_LC_0;
			default: return CqFormat_LC_Blue;
		}
	}	else if(channel == CqFormat_PC_3) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_LC_0;
			case CqFormat_R1_UNORM: return CqFormat_LC_1;
			case CqFormat_R2_UNORM: return CqFormat_LC_1;
			case CqFormat_R4_UNORM: return CqFormat_LC_1;
			case CqFormat_R4G4_UNORM: return CqFormat_LC_1;
			case CqFormat_G4R4_UNORM: return CqFormat_LC_1;
			case CqFormat_A8_UNORM: return CqFormat_LC_0;
			case CqFormat_R8_UNORM: return CqFormat_LC_1;
			case CqFormat_R8_SNORM: return CqFormat_LC_1;
			case CqFormat_R8_UINT: return CqFormat_LC_1;
			case CqFormat_R8_SINT: return CqFormat_LC_1;
			case CqFormat_R8_SRGB: return CqFormat_LC_1;
			case CqFormat_B2G3R3_UNORM: return CqFormat_LC_1;
			case CqFormat_R4G4B4X4_UNORM: return CqFormat_LC_1;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_LC_1;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_LC_Red;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_LC_Red;
			case CqFormat_R5G6B5_UNORM: return CqFormat_LC_1;
			case CqFormat_B5G6R5_UNORM: return CqFormat_LC_1;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_LC_Red;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_LC_Blue;
			case CqFormat_R5G5B5X1_UNORM: return CqFormat_LC_1;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_LC_1;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_LC_Blue;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_LC_Red;
			case CqFormat_R8G8_UNORM: return CqFormat_LC_1;
			case CqFormat_R8G8_SNORM: return CqFormat_LC_1;
			case CqFormat_G8R8_UNORM: return CqFormat_LC_1;
			case CqFormat_G8R8_SNORM: return CqFormat_LC_1;
			case CqFormat_R8G8_UINT: return CqFormat_LC_1;
			case CqFormat_R8G8_SINT: return CqFormat_LC_1;
			case CqFormat_R8G8_SRGB: return CqFormat_LC_1;
			case CqFormat_R16_UNORM: return CqFormat_LC_1;
			case CqFormat_R16_SNORM: return CqFormat_LC_1;
			case CqFormat_R16_UINT: return CqFormat_LC_1;
			case CqFormat_R16_SINT: return CqFormat_LC_1;
			case CqFormat_R16_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R16_SBFLOAT: return CqFormat_LC_1;
			case CqFormat_R8G8B8_UNORM: return CqFormat_LC_1;
			case CqFormat_R8G8B8_SNORM: return CqFormat_LC_1;
			case CqFormat_R8G8B8_UINT: return CqFormat_LC_1;
			case CqFormat_R8G8B8_SINT: return CqFormat_LC_1;
			case CqFormat_R8G8B8_SRGB: return CqFormat_LC_1;
			case CqFormat_B8G8R8_UNORM: return CqFormat_LC_1;
			case CqFormat_B8G8R8_SNORM: return CqFormat_LC_1;
			case CqFormat_B8G8R8_UINT: return CqFormat_LC_1;
			case CqFormat_B8G8R8_SINT: return CqFormat_LC_1;
			case CqFormat_B8G8R8_SRGB: return CqFormat_LC_1;
			case CqFormat_R8G8B8X8_UNORM: return CqFormat_LC_1;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_LC_1;
			case CqFormat_R16G16_UNORM: return CqFormat_LC_1;
			case CqFormat_G16R16_UNORM: return CqFormat_LC_1;
			case CqFormat_R16G16_SNORM: return CqFormat_LC_1;
			case CqFormat_G16R16_SNORM: return CqFormat_LC_1;
			case CqFormat_R16G16_UINT: return CqFormat_LC_1;
			case CqFormat_R16G16_SINT: return CqFormat_LC_1;
			case CqFormat_R16G16_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R16G16_SBFLOAT: return CqFormat_LC_1;
			case CqFormat_R32_UINT: return CqFormat_LC_1;
			case CqFormat_R32_SINT: return CqFormat_LC_1;
			case CqFormat_R32_SFLOAT: return CqFormat_LC_1;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_LC_Blue;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_LC_Blue;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_LC_Blue;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_LC_Blue;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_LC_Red;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_LC_Red;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_LC_Red;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_LC_Red;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_LC_1;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_LC_Red;
			case CqFormat_R16G16B16_UNORM: return CqFormat_LC_1;
			case CqFormat_R16G16B16_SNORM: return CqFormat_LC_1;
			case CqFormat_R16G16B16_UINT: return CqFormat_LC_1;
			case CqFormat_R16G16B16_SINT: return CqFormat_LC_1;
			case CqFormat_R16G16B16_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R16G16B16_SBFLOAT: return CqFormat_LC_1;
			case CqFormat_R32G32_UINT: return CqFormat_LC_1;
			case CqFormat_R32G32_SINT: return CqFormat_LC_1;
			case CqFormat_R32G32_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R32G32B32_UINT: return CqFormat_LC_1;
			case CqFormat_R32G32B32_SINT: return CqFormat_LC_1;
			case CqFormat_R32G32B32_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R64_UINT: return CqFormat_LC_1;
			case CqFormat_R64_SINT: return CqFormat_LC_1;
			case CqFormat_R64_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R64G64_UINT: return CqFormat_LC_1;
			case CqFormat_R64G64_SINT: return CqFormat_LC_1;
			case CqFormat_R64G64_SFLOAT: return CqFormat_LC_1;
			case CqFormat_R64G64B64_UINT: return CqFormat_LC_1;
			case CqFormat_R64G64B64_SINT: return CqFormat_LC_1;
			case CqFormat_R64G64B64_SFLOAT: return CqFormat_LC_1;
			case CqFormat_D16_UNORM: return CqFormat_LC_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_LC_0;
			case CqFormat_D32_SFLOAT: return CqFormat_LC_0;
			case CqFormat_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D16_UNORM_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D24_UNORM_S8_UINT: return CqFormat_LC_0;
			case CqFormat_D32_SFLOAT_S8_UINT: return CqFormat_LC_0;
			case CqFormat_DXBC1_RGB_UNORM: return CqFormat_LC_1;
			case CqFormat_DXBC1_RGB_SRGB: return CqFormat_LC_1;
			case CqFormat_DXBC4_UNORM: return CqFormat_LC_1;
			case CqFormat_DXBC4_SNORM: return CqFormat_LC_1;
			case CqFormat_DXBC5_UNORM: return CqFormat_LC_1;
			case CqFormat_DXBC5_SNORM: return CqFormat_LC_1;
			case CqFormat_DXBC6H_UFLOAT: return CqFormat_LC_1;
			case CqFormat_DXBC6H_SFLOAT: return CqFormat_LC_1;
			case CqFormat_ETC2_R8G8B8_UNORM: return CqFormat_LC_1;
			case CqFormat_ETC2_R8G8B8_SRGB: return CqFormat_LC_1;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_LC_1;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_LC_1;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return CqFormat_LC_1;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return CqFormat_LC_1;
			case CqFormat_CLUT_P4: return CqFormat_LC_0;
			case CqFormat_CLUT_P4A4: return CqFormat_LC_0;
			case CqFormat_CLUT_P8: return CqFormat_LC_0;
			case CqFormat_CLUT_P8A8: return CqFormat_LC_0;
			default: return CqFormat_LC_Alpha;
		}
	}
	 CqFormat_ASSERT(false);
	return CqFormat_LC_0;
}

CQ_FORMAT_CONSTEXPR inline int8_t CqFormat_LogicalChannelToPhysical(CqFormat const fmt, CqFormat_LogicalChannel const channel) {
	 CqFormat_ASSERT(channel != CqFormat_LC_0);
	 CqFormat_ASSERT(channel != CqFormat_LC_1);
	if(channel == CqFormat_LC_Red) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_PC_CONST_0;
			case CqFormat_G4R4_UNORM: return CqFormat_PC_1;
			case CqFormat_A8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_B2G3R3_UNORM: return CqFormat_PC_2;
			case CqFormat_B4G4R4A4_UNORM: return CqFormat_PC_2;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_PC_2;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_PC_1;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_PC_1;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_PC_3;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_PC_3;
			case CqFormat_B5G6R5_UNORM: return CqFormat_PC_2;
			case CqFormat_B5G5R5A1_UNORM: return CqFormat_PC_2;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_PC_3;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_PC_1;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_PC_2;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_PC_1;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_PC_3;
			case CqFormat_B2G3R3A8_UNORM: return CqFormat_PC_2;
			case CqFormat_G8R8_UNORM: return CqFormat_PC_1;
			case CqFormat_G8R8_SNORM: return CqFormat_PC_1;
			case CqFormat_B8G8R8_UNORM: return CqFormat_PC_2;
			case CqFormat_B8G8R8_SNORM: return CqFormat_PC_2;
			case CqFormat_B8G8R8_UINT: return CqFormat_PC_2;
			case CqFormat_B8G8R8_SINT: return CqFormat_PC_2;
			case CqFormat_B8G8R8_SRGB: return CqFormat_PC_2;
			case CqFormat_B8G8R8A8_UNORM: return CqFormat_PC_2;
			case CqFormat_B8G8R8A8_SNORM: return CqFormat_PC_2;
			case CqFormat_B8G8R8A8_UINT: return CqFormat_PC_2;
			case CqFormat_B8G8R8A8_SINT: return CqFormat_PC_2;
			case CqFormat_B8G8R8A8_SRGB: return CqFormat_PC_2;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_PC_2;
			case CqFormat_G16R16_UNORM: return CqFormat_PC_1;
			case CqFormat_G16R16_SNORM: return CqFormat_PC_1;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_PC_1;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_PC_1;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_PC_1;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_PC_1;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_PC_3;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_PC_3;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_PC_3;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_PC_3;
			case CqFormat_B10G10R10A2_UNORM: return CqFormat_PC_2;
			case CqFormat_B10G10R10A2_UINT: return CqFormat_PC_2;
			case CqFormat_B10G10R10A2_SNORM: return CqFormat_PC_2;
			case CqFormat_B10G10R10A2_SINT: return CqFormat_PC_2;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_PC_2;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_PC_3;
			case CqFormat_X8_D24_UNORM: return CqFormat_PC_1;
			case CqFormat_S8_UINT: return CqFormat_PC_CONST_0;
			default: return CqFormat_PC_0;
		}
	}	else if(channel == CqFormat_LC_Green) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_PC_CONST_0;
			case CqFormat_R1_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R2_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G4R4_UNORM: return CqFormat_PC_0;
			case CqFormat_A8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SRGB: return CqFormat_PC_CONST_0;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_PC_2;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_PC_2;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_PC_2;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_PC_2;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_PC_2;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_PC_2;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_PC_2;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_PC_2;
			case CqFormat_G8R8_UNORM: return CqFormat_PC_0;
			case CqFormat_G8R8_SNORM: return CqFormat_PC_0;
			case CqFormat_R16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SBFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_G16R16_UNORM: return CqFormat_PC_0;
			case CqFormat_G16R16_SNORM: return CqFormat_PC_0;
			case CqFormat_R32_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_PC_2;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_PC_2;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_PC_2;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_PC_2;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_PC_2;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_PC_2;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_PC_2;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_PC_2;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_PC_2;
			case CqFormat_R64_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_D16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_D32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_S8_UINT: return CqFormat_PC_0;
			case CqFormat_DXBC4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC4_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P4: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P4A4: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P8: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P8A8: return CqFormat_PC_CONST_0;
			default: return CqFormat_PC_1;
		}
	}	else if(channel == CqFormat_LC_Blue) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_PC_CONST_0;
			case CqFormat_R1_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R2_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R4G4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G4R4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_A8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8_SRGB: return CqFormat_PC_CONST_0;
			case CqFormat_B2G3R3_UNORM: return CqFormat_PC_0;
			case CqFormat_B4G4R4A4_UNORM: return CqFormat_PC_0;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_PC_0;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_PC_3;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_PC_3;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_PC_1;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_PC_1;
			case CqFormat_B5G6R5_UNORM: return CqFormat_PC_0;
			case CqFormat_B5G5R5A1_UNORM: return CqFormat_PC_0;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_PC_1;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_PC_3;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_PC_0;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_PC_3;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_PC_1;
			case CqFormat_B2G3R3A8_UNORM: return CqFormat_PC_0;
			case CqFormat_R8G8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8G8_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G8R8_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G8R8_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R8G8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8G8_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R8G8_SRGB: return CqFormat_PC_CONST_0;
			case CqFormat_R16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R16_SBFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_B8G8R8_UNORM: return CqFormat_PC_0;
			case CqFormat_B8G8R8_SNORM: return CqFormat_PC_0;
			case CqFormat_B8G8R8_UINT: return CqFormat_PC_0;
			case CqFormat_B8G8R8_SINT: return CqFormat_PC_0;
			case CqFormat_B8G8R8_SRGB: return CqFormat_PC_0;
			case CqFormat_B8G8R8A8_UNORM: return CqFormat_PC_0;
			case CqFormat_B8G8R8A8_SNORM: return CqFormat_PC_0;
			case CqFormat_B8G8R8A8_UINT: return CqFormat_PC_0;
			case CqFormat_B8G8R8A8_SINT: return CqFormat_PC_0;
			case CqFormat_B8G8R8A8_SRGB: return CqFormat_PC_0;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_PC_0;
			case CqFormat_R16G16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G16R16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16G16_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_G16R16_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_R16G16_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16G16_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R16G16_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R16G16_SBFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R32_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_PC_3;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_PC_3;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_PC_3;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_PC_3;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_PC_1;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_PC_1;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_PC_1;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_PC_1;
			case CqFormat_B10G10R10A2_UNORM: return CqFormat_PC_0;
			case CqFormat_B10G10R10A2_UINT: return CqFormat_PC_0;
			case CqFormat_B10G10R10A2_SNORM: return CqFormat_PC_0;
			case CqFormat_B10G10R10A2_SINT: return CqFormat_PC_0;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_PC_0;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_PC_1;
			case CqFormat_R32G32_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32G32_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R32G32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R64_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_R64G64_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64G64_SINT: return CqFormat_PC_CONST_0;
			case CqFormat_R64G64_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_D16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_D32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D16_UNORM_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D24_UNORM_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D32_SFLOAT_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC4_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC4_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC5_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC5_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P4: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P4A4: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P8: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P8A8: return CqFormat_PC_CONST_0;
			default: return CqFormat_PC_2;
		}
	}	else if(channel == CqFormat_LC_Alpha) {
		switch(fmt) {
			case CqFormat_UNDEFINED: return CqFormat_PC_CONST_0;
			case CqFormat_R1_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R2_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R4G4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_G4R4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_A8_UNORM: return CqFormat_PC_0;
			case CqFormat_R8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_B2G3R3_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R4G4B4X4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B4G4R4X4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_A4R4G4B4_UNORM: return CqFormat_PC_0;
			case CqFormat_X4R4G4B4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_A4B4G4R4_UNORM: return CqFormat_PC_0;
			case CqFormat_X4B4G4R4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R5G6B5_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B5G6R5_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_A1B5G5R5_UNORM: return CqFormat_PC_0;
			case CqFormat_A1R5G5B5_UNORM: return CqFormat_PC_0;
			case CqFormat_R5G5B5X1_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B5G5R5X1_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_X1R5G5B5_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_X1B5G5R5_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_G8R8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_G8R8_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_R16_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R16_SBFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_R8G8B8X8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_B8G8R8X8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_G16R16_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_G16R16_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16_SBFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R32_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_A2R10G10B10_UNORM: return CqFormat_PC_0;
			case CqFormat_A2R10G10B10_UINT: return CqFormat_PC_0;
			case CqFormat_A2R10G10B10_SNORM: return CqFormat_PC_0;
			case CqFormat_A2R10G10B10_SINT: return CqFormat_PC_0;
			case CqFormat_A2B10G10R10_UNORM: return CqFormat_PC_0;
			case CqFormat_A2B10G10R10_UINT: return CqFormat_PC_0;
			case CqFormat_A2B10G10R10_SNORM: return CqFormat_PC_0;
			case CqFormat_A2B10G10R10_SINT: return CqFormat_PC_0;
			case CqFormat_B10G11R11_UFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_E5B9G9R9_UFLOAT: return CqFormat_PC_0;
			case CqFormat_R16G16B16_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16B16_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16B16_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16B16_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16B16_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R16G16B16_SBFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32B32_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32B32_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R32G32B32_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R64_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64B64_UINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64B64_SINT: return CqFormat_PC_CONST_1;
			case CqFormat_R64G64B64_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_D16_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_X8_D24_UNORM: return CqFormat_PC_CONST_0;
			case CqFormat_D32_SFLOAT: return CqFormat_PC_CONST_0;
			case CqFormat_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D16_UNORM_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D24_UNORM_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_D32_SFLOAT_S8_UINT: return CqFormat_PC_CONST_0;
			case CqFormat_DXBC1_RGB_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC1_RGB_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC4_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC4_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC5_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC5_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC6H_UFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_DXBC6H_SFLOAT: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_R8G8B8_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_R8G8B8_SRGB: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_EAC_R11_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_EAC_R11_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_EAC_R11G11_UNORM: return CqFormat_PC_CONST_1;
			case CqFormat_ETC2_EAC_R11G11_SNORM: return CqFormat_PC_CONST_1;
			case CqFormat_CLUT_P4: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P4A4: return CqFormat_PC_1;
			case CqFormat_CLUT_P8: return CqFormat_PC_CONST_0;
			case CqFormat_CLUT_P8A8: return CqFormat_PC_1;
			default: return CqFormat_PC_3;
		}
	}
	 CqFormat_ASSERT(false);
	return CqFormat_PC_CONST_0;
}

CQ_FORMAT_CONSTEXPR inline char const * const CqFormat_Name(CqFormat const fmt) {
	switch(fmt) {
		case CqFormat_UNDEFINED: return "UNDEFINED";
		case CqFormat_R1_UNORM: return "R1_UNORM";
		case CqFormat_R2_UNORM: return "R2_UNORM";
		case CqFormat_R4_UNORM: return "R4_UNORM";
		case CqFormat_R4G4_UNORM: return "R4G4_UNORM";
		case CqFormat_G4R4_UNORM: return "G4R4_UNORM";
		case CqFormat_A8_UNORM: return "A8_UNORM";
		case CqFormat_R8_UNORM: return "R8_UNORM";
		case CqFormat_R8_SNORM: return "R8_SNORM";
		case CqFormat_R8_UINT: return "R8_UINT";
		case CqFormat_R8_SINT: return "R8_SINT";
		case CqFormat_R8_SRGB: return "R8_SRGB";
		case CqFormat_B2G3R3_UNORM: return "B2G3R3_UNORM";
		case CqFormat_R4G4B4A4_UNORM: return "R4G4B4A4_UNORM";
		case CqFormat_R4G4B4X4_UNORM: return "R4G4B4X4_UNORM";
		case CqFormat_B4G4R4A4_UNORM: return "B4G4R4A4_UNORM";
		case CqFormat_B4G4R4X4_UNORM: return "B4G4R4X4_UNORM";
		case CqFormat_A4R4G4B4_UNORM: return "A4R4G4B4_UNORM";
		case CqFormat_X4R4G4B4_UNORM: return "X4R4G4B4_UNORM";
		case CqFormat_A4B4G4R4_UNORM: return "A4B4G4R4_UNORM";
		case CqFormat_X4B4G4R4_UNORM: return "X4B4G4R4_UNORM";
		case CqFormat_R5G6B5_UNORM: return "R5G6B5_UNORM";
		case CqFormat_B5G6R5_UNORM: return "B5G6R5_UNORM";
		case CqFormat_R5G5B5A1_UNORM: return "R5G5B5A1_UNORM";
		case CqFormat_B5G5R5A1_UNORM: return "B5G5R5A1_UNORM";
		case CqFormat_A1B5G5R5_UNORM: return "A1B5G5R5_UNORM";
		case CqFormat_A1R5G5B5_UNORM: return "A1R5G5B5_UNORM";
		case CqFormat_R5G5B5X1_UNORM: return "R5G5B5X1_UNORM";
		case CqFormat_B5G5R5X1_UNORM: return "B5G5R5X1_UNORM";
		case CqFormat_X1R5G5B5_UNORM: return "X1R5G5B5_UNORM";
		case CqFormat_X1B5G5R5_UNORM: return "X1B5G5R5_UNORM";
		case CqFormat_B2G3R3A8_UNORM: return "B2G3R3A8_UNORM";
		case CqFormat_R8G8_UNORM: return "R8G8_UNORM";
		case CqFormat_R8G8_SNORM: return "R8G8_SNORM";
		case CqFormat_G8R8_UNORM: return "G8R8_UNORM";
		case CqFormat_G8R8_SNORM: return "G8R8_SNORM";
		case CqFormat_R8G8_UINT: return "R8G8_UINT";
		case CqFormat_R8G8_SINT: return "R8G8_SINT";
		case CqFormat_R8G8_SRGB: return "R8G8_SRGB";
		case CqFormat_R16_UNORM: return "R16_UNORM";
		case CqFormat_R16_SNORM: return "R16_SNORM";
		case CqFormat_R16_UINT: return "R16_UINT";
		case CqFormat_R16_SINT: return "R16_SINT";
		case CqFormat_R16_SFLOAT: return "R16_SFLOAT";
		case CqFormat_R16_SBFLOAT: return "R16_SBFLOAT";
		case CqFormat_R8G8B8_UNORM: return "R8G8B8_UNORM";
		case CqFormat_R8G8B8_SNORM: return "R8G8B8_SNORM";
		case CqFormat_R8G8B8_UINT: return "R8G8B8_UINT";
		case CqFormat_R8G8B8_SINT: return "R8G8B8_SINT";
		case CqFormat_R8G8B8_SRGB: return "R8G8B8_SRGB";
		case CqFormat_B8G8R8_UNORM: return "B8G8R8_UNORM";
		case CqFormat_B8G8R8_SNORM: return "B8G8R8_SNORM";
		case CqFormat_B8G8R8_UINT: return "B8G8R8_UINT";
		case CqFormat_B8G8R8_SINT: return "B8G8R8_SINT";
		case CqFormat_B8G8R8_SRGB: return "B8G8R8_SRGB";
		case CqFormat_R8G8B8A8_UNORM: return "R8G8B8A8_UNORM";
		case CqFormat_R8G8B8A8_SNORM: return "R8G8B8A8_SNORM";
		case CqFormat_R8G8B8A8_UINT: return "R8G8B8A8_UINT";
		case CqFormat_R8G8B8A8_SINT: return "R8G8B8A8_SINT";
		case CqFormat_R8G8B8A8_SRGB: return "R8G8B8A8_SRGB";
		case CqFormat_B8G8R8A8_UNORM: return "B8G8R8A8_UNORM";
		case CqFormat_B8G8R8A8_SNORM: return "B8G8R8A8_SNORM";
		case CqFormat_B8G8R8A8_UINT: return "B8G8R8A8_UINT";
		case CqFormat_B8G8R8A8_SINT: return "B8G8R8A8_SINT";
		case CqFormat_B8G8R8A8_SRGB: return "B8G8R8A8_SRGB";
		case CqFormat_R8G8B8X8_UNORM: return "R8G8B8X8_UNORM";
		case CqFormat_B8G8R8X8_UNORM: return "B8G8R8X8_UNORM";
		case CqFormat_R16G16_UNORM: return "R16G16_UNORM";
		case CqFormat_G16R16_UNORM: return "G16R16_UNORM";
		case CqFormat_R16G16_SNORM: return "R16G16_SNORM";
		case CqFormat_G16R16_SNORM: return "G16R16_SNORM";
		case CqFormat_R16G16_UINT: return "R16G16_UINT";
		case CqFormat_R16G16_SINT: return "R16G16_SINT";
		case CqFormat_R16G16_SFLOAT: return "R16G16_SFLOAT";
		case CqFormat_R16G16_SBFLOAT: return "R16G16_SBFLOAT";
		case CqFormat_R32_UINT: return "R32_UINT";
		case CqFormat_R32_SINT: return "R32_SINT";
		case CqFormat_R32_SFLOAT: return "R32_SFLOAT";
		case CqFormat_A2R10G10B10_UNORM: return "A2R10G10B10_UNORM";
		case CqFormat_A2R10G10B10_UINT: return "A2R10G10B10_UINT";
		case CqFormat_A2R10G10B10_SNORM: return "A2R10G10B10_SNORM";
		case CqFormat_A2R10G10B10_SINT: return "A2R10G10B10_SINT";
		case CqFormat_A2B10G10R10_UNORM: return "A2B10G10R10_UNORM";
		case CqFormat_A2B10G10R10_UINT: return "A2B10G10R10_UINT";
		case CqFormat_A2B10G10R10_SNORM: return "A2B10G10R10_SNORM";
		case CqFormat_A2B10G10R10_SINT: return "A2B10G10R10_SINT";
		case CqFormat_R10G10B10A2_UNORM: return "R10G10B10A2_UNORM";
		case CqFormat_R10G10B10A2_UINT: return "R10G10B10A2_UINT";
		case CqFormat_R10G10B10A2_SNORM: return "R10G10B10A2_SNORM";
		case CqFormat_R10G10B10A2_SINT: return "R10G10B10A2_SINT";
		case CqFormat_B10G10R10A2_UNORM: return "B10G10R10A2_UNORM";
		case CqFormat_B10G10R10A2_UINT: return "B10G10R10A2_UINT";
		case CqFormat_B10G10R10A2_SNORM: return "B10G10R10A2_SNORM";
		case CqFormat_B10G10R10A2_SINT: return "B10G10R10A2_SINT";
		case CqFormat_B10G11R11_UFLOAT: return "B10G11R11_UFLOAT";
		case CqFormat_E5B9G9R9_UFLOAT: return "E5B9G9R9_UFLOAT";
		case CqFormat_R16G16B16_UNORM: return "R16G16B16_UNORM";
		case CqFormat_R16G16B16_SNORM: return "R16G16B16_SNORM";
		case CqFormat_R16G16B16_UINT: return "R16G16B16_UINT";
		case CqFormat_R16G16B16_SINT: return "R16G16B16_SINT";
		case CqFormat_R16G16B16_SFLOAT: return "R16G16B16_SFLOAT";
		case CqFormat_R16G16B16_SBFLOAT: return "R16G16B16_SBFLOAT";
		case CqFormat_R16G16B16A16_UNORM: return "R16G16B16A16_UNORM";
		case CqFormat_R16G16B16A16_SNORM: return "R16G16B16A16_SNORM";
		case CqFormat_R16G16B16A16_UINT: return "R16G16B16A16_UINT";
		case CqFormat_R16G16B16A16_SINT: return "R16G16B16A16_SINT";
		case CqFormat_R16G16B16A16_SFLOAT: return "R16G16B16A16_SFLOAT";
		case CqFormat_R16G16B16A16_SBFLOAT: return "R16G16B16A16_SBFLOAT";
		case CqFormat_R32G32_UINT: return "R32G32_UINT";
		case CqFormat_R32G32_SINT: return "R32G32_SINT";
		case CqFormat_R32G32_SFLOAT: return "R32G32_SFLOAT";
		case CqFormat_R32G32B32_UINT: return "R32G32B32_UINT";
		case CqFormat_R32G32B32_SINT: return "R32G32B32_SINT";
		case CqFormat_R32G32B32_SFLOAT: return "R32G32B32_SFLOAT";
		case CqFormat_R32G32B32A32_UINT: return "R32G32B32A32_UINT";
		case CqFormat_R32G32B32A32_SINT: return "R32G32B32A32_SINT";
		case CqFormat_R32G32B32A32_SFLOAT: return "R32G32B32A32_SFLOAT";
		case CqFormat_R64_UINT: return "R64_UINT";
		case CqFormat_R64_SINT: return "R64_SINT";
		case CqFormat_R64_SFLOAT: return "R64_SFLOAT";
		case CqFormat_R64G64_UINT: return "R64G64_UINT";
		case CqFormat_R64G64_SINT: return "R64G64_SINT";
		case CqFormat_R64G64_SFLOAT: return "R64G64_SFLOAT";
		case CqFormat_R64G64B64_UINT: return "R64G64B64_UINT";
		case CqFormat_R64G64B64_SINT: return "R64G64B64_SINT";
		case CqFormat_R64G64B64_SFLOAT: return "R64G64B64_SFLOAT";
		case CqFormat_R64G64B64A64_UINT: return "R64G64B64A64_UINT";
		case CqFormat_R64G64B64A64_SINT: return "R64G64B64A64_SINT";
		case CqFormat_R64G64B64A64_SFLOAT: return "R64G64B64A64_SFLOAT";
		case CqFormat_D16_UNORM: return "D16_UNORM";
		case CqFormat_X8_D24_UNORM: return "X8_D24_UNORM";
		case CqFormat_D32_SFLOAT: return "D32_SFLOAT";
		case CqFormat_S8_UINT: return "S8_UINT";
		case CqFormat_D16_UNORM_S8_UINT: return "D16_UNORM_S8_UINT";
		case CqFormat_D24_UNORM_S8_UINT: return "D24_UNORM_S8_UINT";
		case CqFormat_D32_SFLOAT_S8_UINT: return "D32_SFLOAT_S8_UINT";
		case CqFormat_DXBC1_RGB_UNORM: return "DXBC1_RGB_UNORM";
		case CqFormat_DXBC1_RGB_SRGB: return "DXBC1_RGB_SRGB";
		case CqFormat_DXBC1_RGBA_UNORM: return "DXBC1_RGBA_UNORM";
		case CqFormat_DXBC1_RGBA_SRGB: return "DXBC1_RGBA_SRGB";
		case CqFormat_DXBC2_UNORM: return "DXBC2_UNORM";
		case CqFormat_DXBC2_SRGB: return "DXBC2_SRGB";
		case CqFormat_DXBC3_UNORM: return "DXBC3_UNORM";
		case CqFormat_DXBC3_SRGB: return "DXBC3_SRGB";
		case CqFormat_DXBC4_UNORM: return "DXBC4_UNORM";
		case CqFormat_DXBC4_SNORM: return "DXBC4_SNORM";
		case CqFormat_DXBC5_UNORM: return "DXBC5_UNORM";
		case CqFormat_DXBC5_SNORM: return "DXBC5_SNORM";
		case CqFormat_DXBC6H_UFLOAT: return "DXBC6H_UFLOAT";
		case CqFormat_DXBC6H_SFLOAT: return "DXBC6H_SFLOAT";
		case CqFormat_DXBC7_UNORM: return "DXBC7_UNORM";
		case CqFormat_DXBC7_SRGB: return "DXBC7_SRGB";
		case CqFormat_PVRTC1_2BPP_UNORM: return "PVRTC1_2BPP_UNORM";
		case CqFormat_PVRTC1_4BPP_UNORM: return "PVRTC1_4BPP_UNORM";
		case CqFormat_PVRTC2_2BPP_UNORM: return "PVRTC2_2BPP_UNORM";
		case CqFormat_PVRTC2_4BPP_UNORM: return "PVRTC2_4BPP_UNORM";
		case CqFormat_PVRTC1_2BPP_SRGB: return "PVRTC1_2BPP_SRGB";
		case CqFormat_PVRTC1_4BPP_SRGB: return "PVRTC1_4BPP_SRGB";
		case CqFormat_PVRTC2_2BPP_SRGB: return "PVRTC2_2BPP_SRGB";
		case CqFormat_PVRTC2_4BPP_SRGB: return "PVRTC2_4BPP_SRGB";
		case CqFormat_ETC2_R8G8B8_UNORM: return "ETC2_R8G8B8_UNORM";
		case CqFormat_ETC2_R8G8B8_SRGB: return "ETC2_R8G8B8_SRGB";
		case CqFormat_ETC2_R8G8B8A1_UNORM: return "ETC2_R8G8B8A1_UNORM";
		case CqFormat_ETC2_R8G8B8A1_SRGB: return "ETC2_R8G8B8A1_SRGB";
		case CqFormat_ETC2_R8G8B8A8_UNORM: return "ETC2_R8G8B8A8_UNORM";
		case CqFormat_ETC2_R8G8B8A8_SRGB: return "ETC2_R8G8B8A8_SRGB";
		case CqFormat_ETC2_EAC_R11_UNORM: return "ETC2_EAC_R11_UNORM";
		case CqFormat_ETC2_EAC_R11_SNORM: return "ETC2_EAC_R11_SNORM";
		case CqFormat_ETC2_EAC_R11G11_UNORM: return "ETC2_EAC_R11G11_UNORM";
		case CqFormat_ETC2_EAC_R11G11_SNORM: return "ETC2_EAC_R11G11_SNORM";
		case CqFormat_ASTC_4x4_UNORM: return "ASTC_4x4_UNORM";
		case CqFormat_ASTC_4x4_SRGB: return "ASTC_4x4_SRGB";
		case CqFormat_ASTC_5x4_UNORM: return "ASTC_5x4_UNORM";
		case CqFormat_ASTC_5x4_SRGB: return "ASTC_5x4_SRGB";
		case CqFormat_ASTC_5x5_UNORM: return "ASTC_5x5_UNORM";
		case CqFormat_ASTC_5x5_SRGB: return "ASTC_5x5_SRGB";
		case CqFormat_ASTC_6x5_UNORM: return "ASTC_6x5_UNORM";
		case CqFormat_ASTC_6x5_SRGB: return "ASTC_6x5_SRGB";
		case CqFormat_ASTC_6x6_UNORM: return "ASTC_6x6_UNORM";
		case CqFormat_ASTC_6x6_SRGB: return "ASTC_6x6_SRGB";
		case CqFormat_ASTC_8x5_UNORM: return "ASTC_8x5_UNORM";
		case CqFormat_ASTC_8x5_SRGB: return "ASTC_8x5_SRGB";
		case CqFormat_ASTC_8x6_UNORM: return "ASTC_8x6_UNORM";
		case CqFormat_ASTC_8x6_SRGB: return "ASTC_8x6_SRGB";
		case CqFormat_ASTC_8x8_UNORM: return "ASTC_8x8_UNORM";
		case CqFormat_ASTC_8x8_SRGB: return "ASTC_8x8_SRGB";
		case CqFormat_ASTC_10x5_UNORM: return "ASTC_10x5_UNORM";
		case CqFormat_ASTC_10x5_SRGB: return "ASTC_10x5_SRGB";
		case CqFormat_ASTC_10x6_UNORM: return "ASTC_10x6_UNORM";
		case CqFormat_ASTC_10x6_SRGB: return "ASTC_10x6_SRGB";
		case CqFormat_ASTC_10x8_UNORM: return "ASTC_10x8_UNORM";
		case CqFormat_ASTC_10x8_SRGB: return "ASTC_10x8_SRGB";
		case CqFormat_ASTC_10x10_UNORM: return "ASTC_10x10_UNORM";
		case CqFormat_ASTC_10x10_SRGB: return "ASTC_10x10_SRGB";
		case CqFormat_ASTC_12x10_UNORM: return "ASTC_12x10_UNORM";
		case CqFormat_ASTC_12x10_SRGB: return "ASTC_12x10_SRGB";
		case CqFormat_ASTC_12x12_UNORM: return "ASTC_12x12_UNORM";
		case CqFormat_ASTC_12x12_SRGB: return "ASTC_12x12_SRGB";
		case CqFormat_CLUT_P4: return "CLUT_P4";
		case CqFormat_CLUT_P4A4: return "CLUT_P4A4";
		case CqFormat_CLUT_P8: return "CLUT_P8";
		case CqFormat_CLUT_P8A8: return "CLUT_P8A8";
		default: return "The_Format_With_No_Name";
	}
}

inline CqFormat CqFormat_FromName(char const* p) {
	// FNV-1a hashing algorithm.
	uint64_t hash = 0xcbf29ce484222325ULL;
	while ((*p) != 0) { hash = (((uint64_t) *p) ^ hash) * 1099511628211ULL;	p++; }
	switch(hash) {
		case 0x2BF653266B186C03: return CqFormat_UNDEFINED;
		case 0x9C45001516D833DA: return CqFormat_R1_UNORM;
		case 0x6C00F001F570B433: return CqFormat_R2_UNORM;
		case 0xDF531A87DF5CFA59: return CqFormat_R4_UNORM;
		case 0xCBA3F653C82E1E9E: return CqFormat_R4G4_UNORM;
		case 0x9B897AC5679B790E: return CqFormat_G4R4_UNORM;
		case 0x63DBCDF5F194196A: return CqFormat_A8_UNORM;
		case 0x6ECBF1EF06BCE325: return CqFormat_R8_UNORM;
		case 0x5C766FFB8DE1F1E3: return CqFormat_R8_SNORM;
		case 0x2B467E1FD60E7DD8: return CqFormat_R8_UINT;
		case 0xE9ABC60F283D0A72: return CqFormat_R8_SINT;
		case 0x358F830EC2BB0208: return CqFormat_R8_SRGB;
		case 0x7706DB5BF249BD5A: return CqFormat_B2G3R3_UNORM;
		case 0xE2805E85156D9F31: return CqFormat_R4G4B4A4_UNORM;
		case 0xB8C356FBFD0E908: return CqFormat_R4G4B4X4_UNORM;
		case 0xC5A6BE73259B0031: return CqFormat_B4G4R4A4_UNORM;
		case 0xEEB2955DCFFE4A08: return CqFormat_B4G4R4X4_UNORM;
		case 0x220561C5779CB911: return CqFormat_A4R4G4B4_UNORM;
		case 0xD30FAF6090EC7818: return CqFormat_X4R4G4B4_UNORM;
		case 0x3CFC9293744E0831: return CqFormat_A4B4G4R4_UNORM;
		case 0xE725A84DF23BFD38: return CqFormat_X4B4G4R4_UNORM;
		case 0xE1AFBA335D26A8DA: return CqFormat_R5G6B5_UNORM;
		case 0x7A0E74B498D4FAFA: return CqFormat_B5G6R5_UNORM;
		case 0xA15971F29DD0621: return CqFormat_R5G5B5A1_UNORM;
		case 0x8EFDC73AA126BFA1: return CqFormat_B5G5R5A1_UNORM;
		case 0xC742A70EF53AC9F5: return CqFormat_A1B5G5R5_UNORM;
		case 0xD5B003D5851331F5: return CqFormat_A1R5G5B5_UNORM;
		case 0x7269A347036A9034: return CqFormat_R5G5B5X1_UNORM;
		case 0xF751D3627AB449B4: return CqFormat_B5G5R5X1_UNORM;
		case 0x42335ADEA4EFC0AC: return CqFormat_X1R5G5B5_UNORM;
		case 0xF4330B957F4D6A4C: return CqFormat_X1B5G5R5_UNORM;
		case 0x9A6812074759CB0B: return CqFormat_B2G3R3A8_UNORM;
		case 0xA8082655C8EFA87E: return CqFormat_R8G8_UNORM;
		case 0x8B68D9060D1834FC: return CqFormat_R8G8_SNORM;
		case 0x3304A6DE2E40A66: return CqFormat_G8R8_UNORM;
		case 0x76ED014D8BD59584: return CqFormat_G8R8_SNORM;
		case 0x15A01776FAC06AE1: return CqFormat_R8G8_UINT;
		case 0x810697A68C3D3FFB: return CqFormat_R8G8_SINT;
		case 0xAC3EAAA6A4B1CBB5: return CqFormat_R8G8_SRGB;
		case 0x2E5F1FF55A762DFC: return CqFormat_R16_UNORM;
		case 0x4AFE6D45164DA17E: return CqFormat_R16_SNORM;
		case 0x733B292CB050E2FB: return CqFormat_R16_UINT;
		case 0x7D4A8FD1ED40DE1: return CqFormat_R16_SINT;
		case 0x5181789E57BBA72A: return CqFormat_R16_SFLOAT;
		case 0xC56CFEC3560B6C7C: return CqFormat_R16_SBFLOAT;
		case 0x9B3BE5AE0416CB88: return CqFormat_R8G8B8_UNORM;
		case 0x5705279F0768C4D2: return CqFormat_R8G8B8_SNORM;
		case 0x8E06FA3EEA5892D7: return CqFormat_R8G8B8_UINT;
		case 0x43570A4F483894A5: return CqFormat_R8G8B8_SINT;
		case 0x8A0FD4F27827FAF: return CqFormat_R8G8B8_SRGB;
		case 0xE97F84F8095F6908: return CqFormat_B8G8R8_UNORM;
		case 0xA548C6E90CB16252: return CqFormat_B8G8R8_SNORM;
		case 0xF4DDD5D490E7BF57: return CqFormat_B8G8R8_UINT;
		case 0xAA2DE5E4EEC7C125: return CqFormat_B8G8R8_SINT;
		case 0x6F77D8E4CE11AC2F: return CqFormat_B8G8R8_SRGB;
		case 0x5DE537C5CEE18C99: return CqFormat_R8G8B8A8_UNORM;
		case 0xE25912D12E286C9F: return CqFormat_R8G8B8A8_SNORM;
		case 0x8725F84C50561C6C: return CqFormat_R8G8B8A8_UINT;
		case 0x9C079080C9D1C54E: return CqFormat_R8G8B8A8_SINT;
		case 0xE7B4D5806421618C: return CqFormat_R8G8B8A8_SRGB;
		case 0xE2CD67E1462B4619: return CqFormat_B8G8R8A8_UNORM;
		case 0x674142ECA572261F: return CqFormat_B8G8R8A8_SNORM;
		case 0xCCAB23134AB9BCEC: return CqFormat_B8G8R8A8_UINT;
		case 0xE18CBB47C43565CE: return CqFormat_B8G8R8A8_SINT;
		case 0x2D3A00475E85020C: return CqFormat_B8G8R8A8_SRGB;
		case 0x98E2B1CDECAE73E8: return CqFormat_R8G8B8X8_UNORM;
		case 0x1DCAE1E963F82D68: return CqFormat_B8G8R8X8_UNORM;
		case 0xA3FD1100F830F62E: return CqFormat_R16G16_UNORM;
		case 0xEF345ACC71CAFA68: return CqFormat_G16R16_UNORM;
		case 0x7F7DCC076FEC8E6C: return CqFormat_R16G16_SNORM;
		case 0x5736988FE4CCE7B2: return CqFormat_G16R16_SNORM;
		case 0xD347EDE3A8782E71: return CqFormat_R16G16_UINT;
		case 0xE8296E1821F3AE8B: return CqFormat_R16G16_SINT;
		case 0x2DA5B5DBEAB009F0: return CqFormat_R16G16_SFLOAT;
		case 0x1EBDD86AD61EECA: return CqFormat_R16G16_SBFLOAT;
		case 0xC89CD2CBE8076CC9: return CqFormat_R32_UINT;
		case 0x339692FB7927DCC3: return CqFormat_R32_SINT;
		case 0x79FC5AE23681AB28: return CqFormat_R32_SFLOAT;
		case 0xFB3BEE0BC19BCDC0: return CqFormat_A2R10G10B10_UNORM;
		case 0x258D79F3CBE9042F: return CqFormat_A2R10G10B10_UINT;
		case 0x4CDA31047B01F04A: return CqFormat_A2R10G10B10_SNORM;
		case 0xF00CCA04C6C8A4FD: return CqFormat_A2R10G10B10_SINT;
		case 0x477903BFE709CD40: return CqFormat_A2B10G10R10_UNORM;
		case 0x2274BF26D27846AF: return CqFormat_A2B10G10R10_UINT;
		case 0x991746B8A06FEFCA: return CqFormat_A2B10G10R10_SNORM;
		case 0xECF40F37CD57E77D: return CqFormat_A2B10G10R10_SINT;
		case 0xC370B0AC1F93F676: return CqFormat_R10G10B10A2_UNORM;
		case 0x171461D7B1633919: return CqFormat_R10G10B10A2_UINT;
		case 0xE6CC635E3B189E94: return CqFormat_R10G10B10A2_SNORM;
		case 0x805B220741121493: return CqFormat_R10G10B10A2_SINT;
		case 0xBB10FC1669F59756: return CqFormat_B10G10R10A2_UNORM;
		case 0xCAAD5E1DF82DE439: return CqFormat_B10G10R10A2_UINT;
		case 0x87FBAEC610087BF4: return CqFormat_B10G10R10A2_SNORM;
		case 0x35A69E4D894D7AB3: return CqFormat_B10G10R10A2_SINT;
		case 0x5E8DCDA0219DCB1: return CqFormat_B10G11R11_UFLOAT;
		case 0x1DBB77A7372DFC97: return CqFormat_E5B9G9R9_UFLOAT;
		case 0xEA85D5CCC5E081E7: return CqFormat_R16G16B16_UNORM;
		case 0xB57B831A10558861: return CqFormat_R16G16B16_SNORM;
		case 0x734C0B9981BA0FD6: return CqFormat_R16G16B16_UINT;
		case 0x851D369F098D3F4: return CqFormat_R16G16B16_SINT;
		case 0xD1D0593BFAADABEF: return CqFormat_R16G16B16_SFLOAT;
		case 0x6FDE47BBA7BEA90F: return CqFormat_R16G16B16_SBFLOAT;
		case 0xA20A282E75CABD2D: return CqFormat_R16G16B16A16_UNORM;
		case 0x8F48663AFC94404B: return CqFormat_R16G16B16A16_SNORM;
		case 0xC02442503D4CE820: return CqFormat_R16G16B16A16_UINT;
		case 0x7E89AA3F8F7BAB1A: return CqFormat_R16G16B16A16_SINT;
		case 0xBBE9BB01E53ECD91: return CqFormat_R16G16B16A16_SFLOAT;
		case 0xF170487E732A86C9: return CqFormat_R16G16B16A16_SBFLOAT;
		case 0x300B9BAFAA9826B9: return CqFormat_R32G32_UINT;
		case 0x9B04DBDF3BB7BD33: return CqFormat_R32G32_SINT;
		case 0x1FDED9A9A6421118: return CqFormat_R32G32_SFLOAT;
		case 0xFFFC8DBFFAC96F58: return CqFormat_R32G32B32_UINT;
		case 0xBE61D5AF4CF7FBF2: return CqFormat_R32G32B32_SINT;
		case 0x886FF275EC1787A9: return CqFormat_R32G32B32_SFLOAT;
		case 0x7648F8DE0F31709C: return CqFormat_R32G32B32A32_UINT;
		case 0x8B2A511288ACACBE: return CqFormat_R32G32B32A32_SINT;
		case 0xC1C2788592D0E665: return CqFormat_R32G32B32A32_SFLOAT;
		case 0x8FAC507F3E91D2F8: return CqFormat_R64_UINT;
		case 0xA635187107A2DE12: return CqFormat_R64_SINT;
		case 0x43149901E509F949: return CqFormat_R64_SFLOAT;
		case 0xA1ECCC57631904C7: return CqFormat_R64G64_UINT;
		case 0x573CDC67C0F90695: return CqFormat_R64G64_SINT;
		case 0xE09F2F9190B7A44E: return CqFormat_R64G64_SFLOAT;
		case 0x1E505D1E0F7F67: return CqFormat_R64G64B64_UINT;
		case 0xBDEE06FF1606B35: return CqFormat_R64G64B64_SINT;
		case 0x8B6FB89954C14C6E: return CqFormat_R64G64B64_SFLOAT;
		case 0x6E24CB511E0FC194: return CqFormat_R64G64B64A64_UINT;
		case 0xD91E8380AF3023F6: return CqFormat_R64G64B64A64_SINT;
		case 0x2B3FE15FC07EF07D: return CqFormat_R64G64B64A64_SFLOAT;
		case 0x54D2FD13F48C6DF6: return CqFormat_D16_UNORM;
		case 0xC01BE1F2E68AD96E: return CqFormat_X8_D24_UNORM;
		case 0xD032BE522E700032: return CqFormat_D32_SFLOAT;
		case 0xCF3FC9D0CC3D3B3B: return CqFormat_S8_UINT;
		case 0xE48C6BDE0E1BDCB9: return CqFormat_D16_UNORM_S8_UINT;
		case 0x882CBC689033B818: return CqFormat_D24_UNORM_S8_UINT;
		case 0x8F4B0A1BC125EADD: return CqFormat_D32_SFLOAT_S8_UINT;
		case 0x1AA6B819AB24AB4F: return CqFormat_DXBC1_RGB_UNORM;
		case 0xA0508EF228A561DA: return CqFormat_DXBC1_RGB_SRGB;
		case 0x71A3B9E5FE557FAE: return CqFormat_DXBC1_RGBA_UNORM;
		case 0xB9884F4F748AE445: return CqFormat_DXBC1_RGBA_SRGB;
		case 0x32F4805474A831D2: return CqFormat_DXBC2_UNORM;
		case 0xB38A3E758BE52A09: return CqFormat_DXBC2_SRGB;
		case 0x3D1459BB143AA545: return CqFormat_DXBC3_UNORM;
		case 0xBE7A8D5D66E49268: return CqFormat_DXBC3_SRGB;
		case 0x8F2AE8FFFA7C726C: return CqFormat_DXBC4_UNORM;
		case 0xB3AA2DF982C0DA2E: return CqFormat_DXBC4_SNORM;
		case 0x9FF9DF3FAAA96027: return CqFormat_DXBC5_UNORM;
		case 0x6CDE8436BC805FA1: return CqFormat_DXBC5_SNORM;
		case 0xC44BF30D194202E2: return CqFormat_DXBC6H_UFLOAT;
		case 0xAB754D40F2829738: return CqFormat_DXBC6H_SFLOAT;
		case 0x3694D3DE28B7BD51: return CqFormat_DXBC7_UNORM;
		case 0x25F07F23AA734B04: return CqFormat_DXBC7_SRGB;
		case 0x8DB1509C891B79CC: return CqFormat_PVRTC1_2BPP_UNORM;
		case 0xA909A9CC15D983BE: return CqFormat_PVRTC1_4BPP_UNORM;
		case 0x92E357BAD5FE499B: return CqFormat_PVRTC2_2BPP_UNORM;
		case 0xD1A7C043408183C1: return CqFormat_PVRTC2_4BPP_UNORM;
		case 0xFB26F7CE7F6C7153: return CqFormat_PVRTC1_2BPP_SRGB;
		case 0x14B5F7A00D275AF5: return CqFormat_PVRTC1_4BPP_SRGB;
		case 0x56D223B86BC012D6: return CqFormat_PVRTC2_2BPP_SRGB;
		case 0x3B616527F2F78AD4: return CqFormat_PVRTC2_4BPP_SRGB;
		case 0xA222B6AEF8F6342F: return CqFormat_ETC2_R8G8B8_UNORM;
		case 0xF7F74F04283C85FA: return CqFormat_ETC2_R8G8B8_SRGB;
		case 0xBDF6B48E8BA852A1: return CqFormat_ETC2_R8G8B8A1_UNORM;
		case 0xBA6524ED755FF874: return CqFormat_ETC2_R8G8B8A1_SRGB;
		case 0x1462C4700CE54CF6: return CqFormat_ETC2_R8G8B8A8_UNORM;
		case 0xB011F915A61397ED: return CqFormat_ETC2_R8G8B8A8_SRGB;
		case 0xB7BD64A57C276EFC: return CqFormat_ETC2_EAC_R11_UNORM;
		case 0xD45CB1F537FEE27E: return CqFormat_ETC2_EAC_R11_SNORM;
		case 0x4AAA81E45F616ADB: return CqFormat_ETC2_EAC_R11G11_UNORM;
		case 0x60548007F77B43D: return CqFormat_ETC2_EAC_R11G11_SNORM;
		case 0x42BDD8AC55AFC9ED: return CqFormat_ASTC_4x4_UNORM;
		case 0x8016161C7AB56E10: return CqFormat_ASTC_4x4_SRGB;
		case 0x2B5386538D919E02: return CqFormat_ASTC_5x4_UNORM;
		case 0xA8D99F174DB11719: return CqFormat_ASTC_5x4_SRGB;
		case 0x915C196DFECCFF75: return CqFormat_ASTC_5x5_UNORM;
		case 0xDB79A577D6446078: return CqFormat_ASTC_5x5_SRGB;
		case 0x1160A2285ABAED98: return CqFormat_ASTC_6x5_UNORM;
		case 0x920DC8F697217E9F: return CqFormat_ASTC_6x5_SRGB;
		case 0xB16AD1AF5DE6EBCD: return CqFormat_ASTC_6x6_UNORM;
		case 0x2745169EA3B7D5B0: return CqFormat_ASTC_6x6_SRGB;
		case 0x8E0E209D6C1311DE: return CqFormat_ASTC_8x5_UNORM;
		case 0x4ED6E5BA6D481E55: return CqFormat_ASTC_8x5_SRGB;
		case 0x2E56A25E2CED3A27: return CqFormat_ASTC_8x6_UNORM;
		case 0x991F492892D765F2: return CqFormat_ASTC_8x6_SRGB;
		case 0x4C114CE1A220870D: return CqFormat_ASTC_8x8_UNORM;
		case 0x18043CB1FA4302F0: return CqFormat_ASTC_8x8_SRGB;
		case 0xDAD7C1D8F81107E9: return CqFormat_ASTC_10x5_UNORM;
		case 0x6C33C4CA9B25A7BC: return CqFormat_ASTC_10x5_SRGB;
		case 0xC9992EE75BB14BC4: return CqFormat_ASTC_10x6_UNORM;
		case 0xFE70841B7B9AEF2B: return CqFormat_ASTC_10x6_SRGB;
		case 0x9ABA2EE82583DC42: return CqFormat_ASTC_10x8_UNORM;
		case 0x7F1CDE06C9B3C759: return CqFormat_ASTC_10x8_SRGB;
		case 0xDE0FA47A2B73AF7B: return CqFormat_ASTC_10x10_UNORM;
		case 0xCB795EFA4A237676: return CqFormat_ASTC_10x10_SRGB;
		case 0x5C03E046D11AEA6D: return CqFormat_ASTC_12x10_UNORM;
		case 0xC68986D3DC188B90: return CqFormat_ASTC_12x10_SRGB;
		case 0xCE0C328A06CC3333: return CqFormat_ASTC_12x12_UNORM;
		case 0x6C2617E4D8F0DC0E: return CqFormat_ASTC_12x12_SRGB;
		case 0xAFF9FCAB198F3D50: return CqFormat_CLUT_P4;
		case 0x9CF31C2F9538C655: return CqFormat_CLUT_P4A4;
		case 0xAFFA08AB198F51B4: return CqFormat_CLUT_P8;
		case 0x698142FD18AA335: return CqFormat_CLUT_P8A8;
		default: return CqFormat_UNDEFINED;
	}
}



// Helpers
CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_PixelCountOfBlock(CqFormat const fmt) {
	return CqFormat_WidthOfBlock(fmt) * CqFormat_HeightOfBlock(fmt) * CqFormat_DepthOfBlock(fmt);
}

CQ_FORMAT_CONSTEXPR inline double CqFormat_Min(CqFormat const fmt, CqFormat_LogicalChannel const channel) {
	return CqFormat_MinAtPhysical(fmt, CqFormat_LogicalChannelToPhysical(fmt, channel));
}

CQ_FORMAT_CONSTEXPR inline double CqFormat_Max(CqFormat const fmt, CqFormat_LogicalChannel const channel) {
	return CqFormat_MaxAtPhysical(fmt, CqFormat_LogicalChannelToPhysical(fmt, channel));
}

CQ_FORMAT_CONSTEXPR inline uint32_t CqFormat_ChannelBitWidth(CqFormat const fmt, CqFormat_LogicalChannel const channel) {
	return CqFormat_ChannelBitWidthAtPhysical(fmt, CqFormat_LogicalChannelToPhysical(fmt, channel));
}

#undef CQ_FORMAT_CONSTEXPR
#endif // CQ_FORMAT_QUERY_H_

